[{"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Flows/index.tsx":"1","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Toolbar/index.tsx":"2","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Image/index.tsx":"3","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Card/index.tsx":"4","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Image/styles.ts":"5","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Text/index.tsx":"6","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Text/styles.ts":"7","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Toolbar/styles.ts":"8","/home/rabinson/Freelancing/ShipboardBot/frontend/src/styles/theme.ts":"9","/home/rabinson/Freelancing/ShipboardBot/frontend/src/App.tsx":"10","/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Auth/reducer.ts":"11","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/LandingPage.tsx":"12","/home/rabinson/Freelancing/ShipboardBot/frontend/src/routes/ProtectedRoute.tsx":"13","/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Modal/ModalProvider.tsx":"14","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Templates/index.tsx":"15","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Bots/index.tsx":"16","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/form.ts":"17","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/Table/styles.ts":"18","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/Dropdown/styles.ts":"19","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/header/index.tsx":"20","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/DeleteModal.tsx":"21","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Flows/helper.tsx":"22","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/feature/index.tsx":"23","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/info/styles.ts":"24","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/navbar/styles.ts":"25","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Sidebar/styles.ts":"26","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Card/styles.ts":"27","/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Auth/AuthProvider.tsx":"28","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/error/404.tsx":"29","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/auth/RegisterPage.tsx":"30","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/layout/AuthLayout.tsx":"31","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/Modal.tsx":"32","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/footer/index.tsx":"33","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/navbar/index.tsx":"34","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/feature/styles.ts":"35","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Sidebar/index.tsx":"36","/home/rabinson/Freelancing/ShipboardBot/frontend/src/utils/storage.ts":"37","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/buttons.ts":"38","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/Pagination/index.tsx":"39","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/header/styles.ts":"40","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/Pagination/styles.ts":"41","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/footer/styles.ts":"42"},{"size":11645,"mtime":1611242129059,"results":"43","hashOfConfig":"44"},{"size":5420,"mtime":1611241317414,"results":"45","hashOfConfig":"44"},{"size":2555,"mtime":1611030422899,"results":"46","hashOfConfig":"44"},{"size":9574,"mtime":1611072281689,"results":"47","hashOfConfig":"44"},{"size":1664,"mtime":1610076394115,"results":"48","hashOfConfig":"44"},{"size":2581,"mtime":1611242525486,"results":"49","hashOfConfig":"44"},{"size":1065,"mtime":1610160837489,"results":"50","hashOfConfig":"44"},{"size":1746,"mtime":1610853991933,"results":"51","hashOfConfig":"44"},{"size":300,"mtime":1606619841444,"results":"52","hashOfConfig":"44"},{"size":2028,"mtime":1609586041116,"results":"53","hashOfConfig":"44"},{"size":442,"mtime":1607166058000,"results":"54","hashOfConfig":"44"},{"size":395,"mtime":1606572185322,"results":"55","hashOfConfig":"44"},{"size":943,"mtime":1608087628160,"results":"56","hashOfConfig":"44"},{"size":3565,"mtime":1608961298239,"results":"57","hashOfConfig":"44"},{"size":210,"mtime":1610158645219,"results":"58","hashOfConfig":"44"},{"size":4338,"mtime":1608091636749,"results":"59","hashOfConfig":"44"},{"size":945,"mtime":1608217208422,"results":"60","hashOfConfig":"44"},{"size":1615,"mtime":1607262024293,"results":"61","hashOfConfig":"44"},{"size":605,"mtime":1607959318429,"results":"62","hashOfConfig":"44"},{"size":962,"mtime":1607398449634,"results":"63","hashOfConfig":"44"},{"size":1108,"mtime":1608088908001,"results":"64","hashOfConfig":"44"},{"size":6487,"mtime":1611242174813,"results":"65","hashOfConfig":"44"},{"size":2469,"mtime":1607354234054,"results":"66","hashOfConfig":"44"},{"size":1251,"mtime":1607358308147,"results":"67","hashOfConfig":"44"},{"size":596,"mtime":1607358244451,"results":"68","hashOfConfig":"44"},{"size":2446,"mtime":1608360773902,"results":"69","hashOfConfig":"44"},{"size":2734,"mtime":1610160143779,"results":"70","hashOfConfig":"44"},{"size":1534,"mtime":1607842467004,"results":"71","hashOfConfig":"44"},{"size":467,"mtime":1608091184084,"results":"72","hashOfConfig":"44"},{"size":4457,"mtime":1607849994798,"results":"73","hashOfConfig":"44"},{"size":3062,"mtime":1607357777066,"results":"74","hashOfConfig":"44"},{"size":4044,"mtime":1608088537269,"results":"75","hashOfConfig":"44"},{"size":795,"mtime":1607276608868,"results":"76","hashOfConfig":"44"},{"size":717,"mtime":1607357496043,"results":"77","hashOfConfig":"44"},{"size":707,"mtime":1606842094420,"results":"78","hashOfConfig":"44"},{"size":3609,"mtime":1608218330018,"results":"79","hashOfConfig":"44"},{"size":330,"mtime":1606965896953,"results":"80","hashOfConfig":"44"},{"size":2109,"mtime":1608351731407,"results":"81","hashOfConfig":"44"},{"size":1433,"mtime":1608056204918,"results":"82","hashOfConfig":"44"},{"size":2194,"mtime":1607358477789,"results":"83","hashOfConfig":"44"},{"size":686,"mtime":1607915643490,"results":"84","hashOfConfig":"44"},{"size":758,"mtime":1607358268935,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"89"},"v8ty68",{"filePath":"90","messages":"91","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"114"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"101"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"101"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"101"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Flows/index.tsx",["183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205"],"import React, { useState, useEffect, useContext, Children } from 'react';\nimport { FlowBuilderWrapper } from './styles';\nimport { Stage, Layer, Rect, Image, Text, Group, Circle } from 'react-konva';\nimport Toolbar from '../../../components/dashboard/builder/Toolbar/index';\nimport { v4 as uuidv4 } from 'uuid';\nimport {\n  handleRenderingChildrens,\n  calculateHeightOfMessageBox,\n  handleWheel,\n  Edge,\n} from './helper';\nimport {\n  BuilderContext,\n  useBuilder,\n} from '../../../services/Builder/BuilderProvider';\nimport { BiMessageSquareAdd } from 'react-icons/bi';\n\nconst Flows = (props: any) => {\n  const [isToolbarActive, setIsToolbarActive] = useState(null);\n  const [builderState, setBuilderState, sidebar] = useBuilder();\n  const [id, setId] = useState(null);\n  const [mousePosition, setMousePosition] = useState({\n    x: 0,\n    y: 0,\n  });\n  const [isEdging, setIsSetting] = useState(false);\n  const [isSecondClick, setIsSecondClick] = useState(false);\n\n  const [state, setState] = useState({\n    layerScale: 1,\n    layerX: 0,\n    layerY: 0,\n  });\n\n  const getNextNode = (id) => {\n    if (id) {\n      const nextIndex = builderState.findIndex((obj) => obj.id == id);\n      if (nextIndex == -1) {\n        return mousePosition;\n      }\n      return builderState[nextIndex].position;\n    }\n  };\n\n  const hideToolbar = () => {\n    setIsToolbarActive(false);\n    setId(0);\n  };\n\n  const showToolbar = (id) => {\n    setId(id);\n    setIsToolbarActive(true);\n  };\n\n  const calculateCardHeight = (state) => {\n    var height;\n    state.foreach((item) => {\n      if (item.type == 'card') {\n        height += item.cards[0].height;\n      } else {\n        height += item.height;\n      }\n    });\n    return height;\n  };\n\n  const getStageWidth = () => {\n    return sidebar ? window.innerWidth - 280 : window.innerWidth - 90;\n  };\n\n  const setSelectedTrue = (messageId) => {\n    var previousSelected = getSelectedNode(builderState);\n    if (previousSelected >= 0) {\n      setBuilderState(\n        builderState.map((item, index) => {\n          if (index == messageId) {\n            item.isSelected = true;\n          }\n          if (index == previousSelected) {\n            item.isSelected = false;\n          }\n          return item;\n        })\n      );\n    } else {\n      setBuilderState(\n        builderState.map((item, index) => {\n          if (index == messageId) {\n            item.isSelected = true;\n          }\n          return item;\n        })\n      );\n    }\n  };\n\n  const setHoverTrue = (messageId) => {\n    var previousHover = getHoveredNode(builderState);\n    if (previousHover >= 0) {\n      setBuilderState(\n        builderState.map((item, index) => {\n          if (index == messageId) {\n            item.isHover = true;\n          }\n          if (index == previousHover) {\n            item.isHover = false;\n          }\n          return item;\n        })\n      );\n    } else {\n      setBuilderState(\n        builderState.map((item, index) => {\n          if (index == messageId) {\n            item.isHover = true;\n          }\n          return item;\n        })\n      );\n    }\n  };\n\n  const setHoverFalse = (messageId) => {\n    setBuilderState(\n      builderState.map((item, index) => {\n        if (index == messageId) {\n          item.isHover = false;\n        }\n        return item;\n      })\n    );\n  };\n\n  const connectEdge = (messageId) => {\n    setIsSetting(true);\n    setBuilderState(\n      builderState.map((item, index) => {\n        if (index == messageId) {\n          item.next = 'dummy';\n        }\n        return item;\n      })\n    );\n  };\n\n  const handleMousePosition = (event) => {\n    if (isEdging) {\n      var point = event.target.getStage().getPointerPosition();\n      setMousePosition({\n        x: point.x,\n        y: point.y,\n      });\n    }\n  };\n\n  const handleClickOnCanvas = () => {\n    setIsSecondClick(true);\n    if (isSecondClick && isEdging) {\n      setIsSetting(false);\n      // window.removeEventListener('mousemove', handleMousePosition);\n      let number = builderState.length + 1;\n      var id = uuidv4();\n      const newState = {\n        id: id,\n        name: 'Send Message #' + number,\n        position: {\n          x: mousePosition.x,\n          y: mousePosition.y,\n        },\n        height: 200,\n        children: [],\n        isHover: false,\n        isSelected: false,\n      };\n      setIsSecondClick(false);\n\n      //find the message with next: dummy\n      var dummyNextMessage = builderState.findIndex(\n        (obj) => obj.next === 'dummy'\n      );\n\n      setBuilderState(\n        builderState.map((item, index) => {\n          if (index == dummyNextMessage) {\n            item.next = id;\n          }\n          return item;\n        })\n      );\n      setBuilderState([...builderState, newState]);\n    }\n  };\n  return (\n    <FlowBuilderWrapper>\n      <div className=\"header\">Flows</div>\n      <div className=\"stage-action\">\n        <BiMessageSquareAdd\n          onClick={() => {\n            let number = builderState.length + 1;\n            const newState = {\n              id: uuidv4(),\n              name: 'Send Message #' + number,\n              position: {\n                x: 1200,\n                y: 50,\n              },\n              height: 200,\n              children: [],\n              isHover: false,\n              isSelected: false,\n            };\n            setBuilderState([...builderState, newState]);\n          }}\n        />\n      </div>\n\n      {isToolbarActive && <Toolbar id={id} hideToolbar={hideToolbar} />}\n      <Stage\n        width={getStageWidth()}\n        height={window.innerHeight - 70}\n        scaleX={state.layerScale}\n        scaleY={state.layerScale}\n        onMouseMove={handleMousePosition}\n        x={0}\n        y={0}\n        onClick={handleClickOnCanvas}>\n        <Layer name=\"layer_1\" draggable onWheel={handleWheel}>\n          <Rect\n            x={-window.innerWidth}\n            y={-window.innerHeight}\n            width={window.innerWidth * 3}\n            height={window.innerHeight * 3}\n            fill=\"\"\n          />\n          <Group draggable x={200} y={200}>\n            <Rect\n              cornerRadius={16}\n              width={300}\n              height={100}\n              fill=\"#FDFDFD\"\n              strokeWidth={2}\n              shadowColor=\"gray\"\n              shadowOpacity={0.7}\n              shadowBlur={2}\n            />\n            <Circle x={30} y={30} radius={15} fill=\"green\" />\n            <Text\n              x={55}\n              y={22}\n              text=\"Starting Step\"\n              fontFamily={'Roboto'}\n              fontSize={20}\n              fill={'gray'}\n            />\n            <Circle x={280} y={80} radius={9} fill=\"#8392AB\" strokeWidth={1} />\n            <Text\n              x={195}\n              y={72}\n              text=\"Next Step\"\n              fontFamily={'Roboto'}\n              fontSize={15}\n              fontWeight={300}\n              fill={'gray'}\n            />\n          </Group>\n          {builderState &&\n            typeof builderState == 'object' &&\n            builderState.map((item, index) => {\n              return (\n                <React.Fragment key={item.id}>\n                  {item.next ? (\n                    <Edge\n                      height={item.height}\n                      node1={item.position}\n                      node2={getNextNode(item.next)}\n                    />\n                  ) : null}\n                  <Group\n                    x={item.position?.x}\n                    y={item.position?.y}\n                    draggable\n                    onClick={(e) => {\n                      showToolbar(item.id);\n                      setSelectedTrue(index);\n                    }}\n                    onMouseEnter={(e) => {\n                      setHoverTrue(index);\n                    }}\n                    onMouseLeave={(e) => {\n                      setHoverFalse(index);\n                    }}\n                    hitOnDragEnabled={true}\n                    onDragMove={(e) => {\n                      var updatedPosition = {\n                        x: e.target.x(),\n                        y: e.target.y(),\n                      };\n                      var index = builderState.findIndex(\n                        (obj) => obj.id == item.id\n                      );\n                      setBuilderState(\n                        builderState.map((item, ind) => {\n                          if (ind == index) {\n                            item.position = updatedPosition;\n                          }\n                          return item;\n                        })\n                      );\n                    }}>\n                    <Rect\n                      cornerRadius={16}\n                      height={calculateHeightOfMessageBox(item.children)}\n                      width={340}\n                      fill=\"#FDFDFD\"\n                      strokeWidth={5}\n                      shadowColor={getShadowColor(item)}\n                      shadowOpacity={1}\n                      shadowBlur={10}\n                    />\n                    <Circle x={30} y={30} radius={15} fill=\"#5850EB\" />\n                    <Text\n                      x={55}\n                      y={22}\n                      text={item.name}\n                      fontFamily={'Roboto'}\n                      fontSize={20}\n                      fill={'gray'}\n                    />\n                    <Group\n                      x={340}\n                      y={item.height - 20}\n                      onClick={(e) => connectEdge(index)}>\n                      <Circle radius={9} fill=\"#8392AB\" strokeWidth={1} />\n                      <Text\n                        x={-80}\n                        y={-8}\n                        text=\"Next Step\"\n                        fontFamily={'Roboto'}\n                        fontSize={15}\n                        fontWeight={300}\n                        fill={'gray'}\n                      />\n                    </Group>\n                    {typeof item.children == 'object' ? (\n                      <>\n                        {item.children.length > 0 ? (\n                          handleRenderingChildrens(item)\n                        ) : (\n                          <React.Fragment key={item}>\n                            <Group>\n                              <Rect\n                                x={20}\n                                y={75}\n                                height={60}\n                                width={300}\n                                fill=\"#EEF1F4\"\n                                cornerRadius={16}\n                              />\n                              <Text\n                                text=\"No Content\"\n                                x={110}\n                                y={95}\n                                fontFamily={'Roboto'}\n                                fontSize={20}\n                                fontWeight={300}\n                                fill={'blue'}\n                              />\n                            </Group>\n                          </React.Fragment>\n                        )}\n                      </>\n                    ) : null}\n                  </Group>\n                </React.Fragment>\n              );\n            })}\n        </Layer>\n      </Stage>\n    </FlowBuilderWrapper>\n  );\n};\n\nconst getShadowColor = (item) => {\n  if (item.isSelected) {\n    return '#1e824c';\n  } else if (item.isHover) {\n    return '#1f3a93';\n  } else {\n    return 'black';\n  }\n};\n\nconst getSelectedNode = (state) => {\n  return state.findIndex((obj) => obj.isSelected == true);\n};\n\nconst getHoveredNode = (state) => {\n  return state.findIndex((obj) => obj.isHovered == true);\n};\n\nexport default Flows;\n",["206","207"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Toolbar/index.tsx",["208","209","210","211","212","213","214","215"],"import React, { useContext, useState, useRef, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { ToolbarWrapper, ToolbarMenu, ToolbarButtonGroup } from './styles';\nimport { ToolbarHeading, VerticalGap } from '../../../common/typography';\nimport { ToolbarButton } from '../../../common/buttons';\nimport { BuilderContext } from '../../../../services/Builder/BuilderProvider';\nimport { v4 as uuidv4 } from 'uuid';\nimport FormImage from '../Form/Image/index';\nimport FormText from '../Form/Text/index';\nimport FormCard from '../Form/Card/index';\nimport { InputField } from '../../../common/form';\nimport Textarea from 'react-expanding-textarea';\n\nconst Toolbar = ({ id, hideToolbar }) => {\n  const [builderState, setBuilderState] = useContext(BuilderContext);\n  const [isChangingTitle, setIsChangingTitle] = useState(false);\n  const { register, handleSubmit } = useForm({ mode: 'onChange' });\n\n  const titleRef = useRef<HTMLInputElement>(null);\n\n  //Find index of specific object using findIndex method.\n  const objIndex = builderState.findIndex((obj) => obj.id == id);\n\n  const onChangeTitle = (data) => {\n    setBuilderState(\n      builderState.map((item, ind) => {\n        if (ind == objIndex) {\n         item.name = data.title\n        }\n        return item;\n      })\n    );\n  };\n\n  //UseEffects\n  useEffect(() => {\n    if (titleRef.current) {\n      register(titleRef.current);\n      titleRef.current.focus();\n    }\n  }, [isChangingTitle]);\n\n  return (\n    <ToolbarWrapper>\n      <ToolbarMenu>\n        <div className={isChangingTitle ? 'header active' : 'header'}>\n          <form onBlur={handleSubmit(onChangeTitle)}>\n            <Textarea\n              maxLength={35}\n              className=\"heading-input\"\n              ref={titleRef}\n              id=\"title\"\n              name=\"title\"\n              defaultValue={builderState[objIndex].name}\n              onBlur={() => setIsChangingTitle(false)}\n            />\n          </form>\n        </div>\n        {builderState[objIndex].children.length > 0 ? (\n          builderState[objIndex].children.map((child) => {\n            return (\n              <React.Fragment>\n                <VerticalGap size=\"3\" />\n                {getChildren(child, objIndex)}\n              </React.Fragment>\n            );\n          })\n        ) : (\n          <React.Fragment>\n            <VerticalGap size=\"3\" />\n            <p className=\"no-content-text\">No content</p>\n          </React.Fragment>\n        )}\n        <VerticalGap size=\"3\" />\n        <ToolbarButtons index={objIndex} />\n      </ToolbarMenu>\n    </ToolbarWrapper>\n  );\n};\n\nexport default Toolbar;\n\nconst ToolbarButtons = ({ index }) => {\n  const [builderState, setBuilderState] = useContext(BuilderContext);\n\n  const addText = () => {\n    let height = builderState[index].height;\n    height = height + 50;\n    setBuilderState(\n      builderState.map((item, ind) => {\n        if (ind == index) {\n          item.height = height;\n          item.children.push({\n            id: uuidv4(),\n            type: 'text',\n            value: 'Change text',\n            height: 50,\n          });\n        }\n        return item;\n      })\n    );\n  };\n\n  const addCard = () => {\n    let height = builderState[index].height;\n    height = height + 150;\n\n    setBuilderState(\n      builderState.map((item, ind) => {\n        if (ind == index) {\n          item.height = height;\n          item.children.push({\n            id: uuidv4(),\n            type: 'card',\n            cards: [\n              {\n                id: uuidv4(),\n                active: true,\n                selectedImage: null,\n                imagePreviewUrl: '',\n                heading: 'subtitle #11',\n                body: 'This is the body paragraph',\n                height: 150,\n              },\n            ],\n          });\n        }\n        return item;\n      })\n    );\n  };\n\n  const addImage = () => {\n    let height = builderState[index].height;\n    height = height + 150;\n    setBuilderState(\n      builderState.map((item, ind) => {\n        if (ind == index) {\n          item.height = height;\n          item.children.push({\n            id: uuidv4(),\n            type: 'image',\n            height: 150,\n            imagePreviewUrl: '',\n            selectedImage: null,\n          });\n        }\n        return item;\n      })\n    );\n  };\n\n  return (\n    <React.Fragment>\n      <ToolbarButtonGroup>\n        <ToolbarButton\n          height=\"6rem\"\n          width=\"6rem\"\n          fontSize=\"1.2rem\"\n          onClick={addText}>\n          + Text\n        </ToolbarButton>\n        <ToolbarButton\n          height=\"6rem\"\n          width=\"6rem\"\n          fontSize=\"1.2rem\"\n          onClick={addCard}>\n          + Card\n        </ToolbarButton>\n        <ToolbarButton\n          height=\"6rem\"\n          width=\"6rem\"\n          fontSize=\"1.2rem\"\n          onClick={addImage}>\n          + Image\n        </ToolbarButton>\n        <ToolbarButton height=\"4rem\" width=\"25rem\">\n          Next Button\n        </ToolbarButton>\n      </ToolbarButtonGroup>\n    </React.Fragment>\n  );\n};\n\nconst getChildren = (children, messageId) => {\n  if (children.type === 'text') {\n    return <FormText messageId={messageId} childId={children.id} />;\n  } else if (children.type === 'image') {\n    return <FormImage messageId={messageId} childId={children.id} />;\n  } else if (children.type === 'card') {\n    return <FormCard messageId={messageId} childId={children.id} />;\n  }\n};\n",["216","217"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Image/index.tsx",["218","219","220","221","222","223","224"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Card/index.tsx",["225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257"],"import React, { useState, useEffect, useRef, useContext } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { CardSlider, CardWrapper } from './styles';\nimport { BuilderContext } from '../../../../../services/Builder/BuilderProvider';\nimport { AddTextButton } from '../../../../common/buttons';\nimport { ImageWrapper } from '../Image/styles';\nimport { v4 as uuidv4 } from 'uuid';\nimport Textarea from 'react-expanding-textarea';\nimport {\n  BiImageAdd,\n  BiTrash,\n  BiChevronRight,\n  BiChevronLeft,\n  BiPlus,\n} from 'react-icons/bi';\n\nconst FormCard = ({ messageId, childId }) => {\n  const [builderState, setBuilderState] = useContext(BuilderContext);\n  const { register, handleSubmit } = useForm({ mode: 'onChange' });\n  const [isChangingHeading, setIsChangingHeading] = useState(false);\n  const [isChangingBody, setIsChangingBody] = useState(false);\n\n  const headingRef = useRef<HTMLInputElement>(null);\n  const paragraphRef = useRef<HTMLTextAreaElement>(null);\n  const cardRef = useRef<HTMLDivElement>(null);\n\n  //Find index of specific object using findIndex method.\n  const childIndex = builderState[messageId].children.findIndex(\n    (obj) => obj.id == childId\n  );\n\n  //Card Navigation functions\n  const handleNextButton = (id) => {\n    const cards = builderState[messageId].children[childIndex].cards;\n    const length = cards.length - 1;\n    const activeCardIndex = getActiveCardIndex(cards);\n\n    if (activeCardIndex == length) {\n      makeCardActive(activeCardIndex + 1, activeCardIndex, length + 2, true);\n    } else {\n      makeCardActive(activeCardIndex + 1, activeCardIndex);\n    }\n  };\n\n  const handlePreviousButton = () => {\n    const cards = builderState[messageId].children[childIndex].cards;\n    const activeCardIndex = getActiveCardIndex(cards);\n    if (activeCardIndex != 0) {\n      makeCardActive(activeCardIndex - 1, activeCardIndex);\n    }\n  };\n\n  const makeCardActive = (\n    cardIndex,\n    activeCardIndex,\n    length = 0,\n    addNew = false\n  ) => {\n    if (addNew) {\n      setBuilderState([\n        ...builderState,\n        (builderState[messageId].children[childIndex].cards[\n          activeCardIndex\n        ].active = false),\n        builderState[messageId].children[childIndex].cards.push({\n          id: uuidv4(),\n          active: true,\n          selectedImage: null,\n          imagePreviewUrl: '',\n          heading: 'Subtitle #' + length,\n          body: 'This is body paragraph',\n          height: 290,\n        }),\n      ]);\n    } else {\n      setBuilderState(builderState.map((message, index) => { \n        if (index == messageId) { \n          message.children.map((child, ind) => { \n            if (ind == childIndex) {\n              child.cards.map((card, inx) => { \n                if (inx == cardIndex) { \n                  card.active = true\n                }\n                if (inx == activeCardIndex) { \n                  card.active = false\n                }\n              })\n            }\n          })\n        }\n      }));\n    }\n  };\n\n  const getActiveCardIndex = (cards) => {\n    return cards.findIndex((obj) => obj.active == true);\n  };\n\n  const getCardIndex = (id) => {\n    return builderState[messageId].children[childIndex].cards.findIndex(\n      (obj) => obj.id === id\n    );\n  };\n\n  const isLastCard = () => {\n    const cards = builderState[messageId].children[childIndex].cards;\n    const length = cards.length - 1;\n    const activeCardIndex = getActiveCardIndex(cards);\n    return activeCardIndex == length;\n  };\n\n  //Form input submit methods\n  const onUploadImage = (data, id) => {\n    let cardIndex = getCardIndex(id);\n\n    let reader = new FileReader();\n\n    reader.onloadend = () => {\n      var height = cardRef.current.scrollHeight;\n\n      setBuilderState(\n        builderState.map((item, index) => {\n          if (index == messageId) {\n            item.children.map((child, ind) => {\n              if (ind == childIndex) {\n                child.cards.map((card, s) => {\n                  if (s == cardIndex) {\n                    card.selectedImage = data.image[0];\n                    card.imagePreviewUrl = reader.result;\n                    card.height = height;\n                  }\n                });\n              }\n            });\n          }\n          return item;\n        })\n      );\n    };\n\n    reader.readAsDataURL(data.image[0]);\n  };\n\n  const onHeadingChange = (data, id) => {\n    let cardIndex = getCardIndex(id);\n    var height = cardRef.current.scrollHeight;\n\n    setBuilderState(\n      builderState.map((item, index) => {\n        if (index == messageId) {\n          item.children.map((child, ind) => {\n            if (ind == childIndex) {\n              child.cards.map((card, s) => {\n                if (s == cardIndex) {\n                  card.heading = data.heading;\n                  card.height = height;\n                }\n              });\n            }\n          });\n        }\n        return item;\n      })\n    );\n  };\n\n  const onParagraphChange = (data, id) => {\n    let cardIndex = getCardIndex(id);\n    var height = cardRef.current.scrollHeight;\n\n    setBuilderState(\n      builderState.map((item, index) => {\n        if (index == messageId) {\n          item.children.map((child, ind) => {\n            if (ind == childIndex) {\n              child.cards.map((card, s) => {\n                if (s == cardIndex) {\n                  card.body = data.body;\n                  card.height = height;\n                }\n              });\n            }\n          });\n        }\n        return item;\n      })\n    );\n  };\n\n  const handleDelete = () => {\n    setBuilderState(\n      builderState.map((item, index) => {\n        if (index == messageId) {\n          item.height -= 250;\n          item.children.splice(childIndex, 1);\n        }\n        return item;\n      })\n    );\n  };\n\n  //UseEffects\n  useEffect(() => {\n    if (headingRef.current) {\n      register(headingRef.current);\n      headingRef.current.focus();\n    }\n  }, [isChangingHeading]);\n\n  useEffect(() => {\n    if (paragraphRef.current) {\n      register(paragraphRef.current);\n      paragraphRef.current.focus();\n    }\n  }, [isChangingBody]);\n\n  return (\n    <CardSlider>\n      <div className=\"navigation_btn previous\" onClick={handlePreviousButton}>\n        <BiChevronLeft />\n      </div>\n      <div className=\"navigation_btn next\" onClick={handleNextButton}>\n        {isLastCard() ? <BiPlus /> : <BiChevronRight />}\n      </div>\n      <button className=\"action-btn\" onClick={handleDelete}>\n        <BiTrash />\n      </button>\n      {builderState[messageId].children[childIndex].cards.map((card) => {\n        if (card.active) {\n          return (\n            <CardWrapper ref={cardRef}>\n              <div className=\"card-image\">\n                <ImageWrapper>\n                  {card.imagePreviewUrl ? (\n                    <div>\n                      <img src={card.imagePreviewUrl} alt=\"card-image\" />\n                    </div>\n                  ) : (\n                    <form\n                      onChange={handleSubmit((data) =>\n                        onUploadImage(data, card.id)\n                      )}>\n                      <input\n                        ref={register}\n                        type=\"file\"\n                        id={'card_image' + getCardIndex(card.id)}\n                        name=\"image\"\n                        accept=\"image/*\"\n                      />\n                      <label htmlFor={'card_image' + getCardIndex(card.id)}>\n                        <BiImageAdd />\n                        <p>Upload image</p>\n                      </label>\n                    </form>\n                  )}\n                </ImageWrapper>\n              </div>\n              <div className=\"card-text\">\n                <div\n                  className={\n                    isChangingHeading ? 'card-heading active' : 'card-heading'\n                  }>\n                  <form\n                    onBlur={handleSubmit((data) =>\n                      onHeadingChange(data, card.id)\n                    )}>\n                    <Textarea\n                      className=\"card-title\"\n                      ref={headingRef}\n                      maxLength={27}\n                      id=\"heading\"\n                      name=\"heading\"\n                      defaultValue={card.heading}\n                      onBlur={() => setIsChangingHeading(false)}\n                      onClick={() => {\n                        setIsChangingBody(false);\n                        setIsChangingHeading(true);\n                      }}\n                    />\n                  </form>\n                </div>\n                <div\n                  className={isChangingBody ? 'card-body active' : 'card-body'}>\n                  <form\n                    onBlur={handleSubmit((data) =>\n                      onParagraphChange(data, card.id)\n                    )}>\n                    <Textarea\n                      className=\"card-paragraph\"\n                      maxLength={200}\n                      placeholder=\"Enter your text here\"\n                      onBlur={() => setIsChangingBody(false)}\n                      defaultValue={card.body}\n                      id=\"body\"\n                      name=\"body\"\n                      ref={paragraphRef}\n                      onClick={() => {\n                        setIsChangingHeading(false);\n                        setIsChangingBody(true);\n                      }}\n                    />\n                  </form>\n                </div>\n              </div>\n            </CardWrapper>\n          );\n        }\n      })}\n    </CardSlider>\n  );\n};\n\nexport default FormCard;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Image/styles.ts",[],["258","259"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Text/index.tsx",["260","261","262","263","264","265"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Text/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Toolbar/styles.ts",[],["266","267"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/styles/theme.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/App.tsx",["268","269"],"import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport LandingPage from './pages/LandingPage';\nimport GlobalStyle from './styles/global';\nimport RegisterPage from './pages/auth/RegisterPage';\nimport LoginPage from './pages/auth/LoginPage';\nimport ForgotPassworPage from './pages/auth/ForgotPasswordPage';\nimport { ProtectedRoute } from './routes/ProtectedRoute';\nimport Dashboard from './pages/main/Dashboard/index';\nimport NotFound from './pages/error/404';\nimport { useAuthContext } from './services/Auth/AuthProvider';\nimport Bots from './pages/main/Bots/index';\nimport Flows from './pages/main/Flows/index';\nimport Templates from './pages/main/Templates/index';\nimport Settings from './pages/main/Settings/index';\nimport ModalProvider from './services/Modal/ModalProvider';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport AppLayout from './components/layout/AppLayout';\n\nconst App: React.FC = () => {\n  const authContext = useAuthContext();\n  return (\n    <ModalProvider>\n      <BrowserRouter>\n        <GlobalStyle />\n        <>\n          <ToastContainer />\n          <Switch>\n            <Route exact path=\"/\" component={LandingPage} />\n            <Route exact path=\"/register\" component={RegisterPage} />\n            <Route exact path=\"/login\" component={LoginPage} />\n            <Route\n              exact\n              path=\"/forgot-password\"\n              component={ForgotPassworPage}\n            />\n            <ProtectedRoute exact path=\"/app\" component={Dashboard} />\n            <ProtectedRoute exact path=\"/bots\" component={Bots} />\n            <ProtectedRoute exact path=\"/flows\" component={Flows} />\n            <ProtectedRoute exact path=\"/templates\" component={Templates} />\n            <ProtectedRoute exact path=\"/settings\" component={Settings} />\n            <Route path=\"*\" component={NotFound} />\n          </Switch>\n        </>\n      </BrowserRouter>\n    </ModalProvider>\n  );\n};\n\nexport default App;\n",["270","271"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Auth/reducer.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/LandingPage.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/routes/ProtectedRoute.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Modal/ModalProvider.tsx",["272"],"import React, { createContext, useContext, useState } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\ntype ModalStateContextType = {\n  View?: React.FC<{ hideModal: () => void }>;\n  isOpen: boolean;\n  onRequestClose?: () => void;\n};\n\ntype ModalStateModifierContextType = {\n  showModal: (View: React.FC, onRequestClose?: () => void) => void;\n  hideModal: () => void;\n};\n\nconst ModalStateContext = createContext<\n  ModalStateContextType | null | undefined\n>(null);\n\nconst ModalStateModifierContext = createContext<ModalStateModifierContextType>({\n  showModal: () => {},\n  hideModal: () => {},\n});\n\nconst ModalProvider = ({ children }: { children: React.ReactNode }) => {\n  const [modalState, setModalState] = useState<ModalStateContextType | null>();\n  const { isOpen, View, onRequestClose } = modalState || {\n    View: undefined,\n    onRequestClose: undefined,\n  };\n\n  const showModal = (\n    View?: React.FC<{ hideModal: () => void }>,\n    onRequestClose?: () => void\n  ) => {\n    setModalState({ View, isOpen: true, onRequestClose });\n  };\n  const hideModal = () => {\n    setModalState({\n      View: undefined,\n      isOpen: false,\n      onRequestClose: undefined,\n    });\n  };\n  const modalSpring = useSpring({\n    from: { display: 'none' },\n    to: async (next: any) => {\n      if (isOpen) {\n        await next({\n          display: 'block',\n          transform: 'translate(0px,0px)',\n          opacity: 1,\n        });\n      } else {\n        await next({ transform: 'translate(0px,100px)', opacity: 0 });\n        await next({\n          display: 'none',\n        });\n      }\n    },\n  });\n  return (\n    <ModalStateContext.Provider value={modalState}>\n      <ModalStateModifierContext.Provider value={{ showModal, hideModal }}>\n        {children}\n        <ModalWrapper>\n          <animated.div style={modalSpring} className=\"modal\">\n            {View && <View hideModal={hideModal} />}\n          </animated.div>\n        </ModalWrapper>\n      </ModalStateModifierContext.Provider>\n    </ModalStateContext.Provider>\n  );\n};\nModalProvider.propTypes = {\n  children: PropTypes.element,\n};\n\nexport default ModalProvider;\n\nexport const useModal = () => {\n  const context = useContext(ModalStateModifierContext);\n  if (context === undefined) {\n    throw new Error('useModal must be used within a ModalProvider');\n  }\n  return context;\n};\n\nexport const ModalWrapper = styled.div`\n\n  .modal {\n    position: fixed;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100vh;\n    background: rgba(0, 0, 0, 0.7);\n    backdrop-filter: blur(5px);\n    overflow-y: scroll;\n    overflow-x: hidden;\n    padding: 4rem 0;\n    h1 {\n      padding-bottom: 1rem;\n    }\n    h2 {\n      margin-top: -1rem;\n    }\n    input {\n      margin-bottom: 1rem;\n      margin-top: 1rem;\n    }\n    .last-input {\n      margin-bottom: 3rem;\n    }\n    &-exit {\n      background: rgb(255, 0, 76, 0.7);\n      border-radius: 10rem;\n      border: 0;\n      cursor: pointer;\n      height: 1.5rem;\n      outline: none;\n      padding: 0.5rem;\n      position: absolute;\n      right: 2rem;\n      top: 2rem;\n      width: 1.5rem;\n      &:active {\n        filter: brightness(0.8);\n      }\n    }\n    &-body {\n      align-items: center;\n      background: #ffffff;\n      border-radius: 24px;\n      box-shadow: 0px 4px 24px rgba(0, 0, 0, 0.12);\n      margin: 0 auto;\n      max-width: 40rem;\n      min-height: 25rem;\n      padding: 4rem;\n      position: relative;\n      /* p,\n      h2 {\n        color: black;\n      } */\n    }\n  }\n`;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Templates/index.tsx",["273"],"import React from 'react';\nimport AppLayout from '../../../components/layout/AppLayout';\n\nconst Templates = (props: any) => {\n  return <h1 className=\"main-heading\">Templates</h1>;\n};\n\nexport default Templates;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Bots/index.tsx",["274","275","276","277","278","279"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/form.ts",["280"],"import styled from 'styled-components'\nimport { grey } from '../../styles/theme';\n\nexport const InputField = styled.input<{isError?: boolean}>`\n  background: ${props => props.isError ? '#FFE4E4' : '#F7F7F7'};\n  border-radius: 7px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.1);\n  box-sizing: border-box;\n  min-height: 3.8rem;\n  min-width: 30rem;\n  padding: .8rem;\n  outline: none;\n  font-family: Roboto, sans-serif;\n  font-style: normal;\n  font-weight: 400;\n  font-size: 1.4rem;\n  color: #000;\n  width: 100%;\n\n\n  &:focus {\n    font-weight: 400;\n    box-shadow: 0 0 0 3px rgba(164, 202, 254, 0.45);\n    border-color: #5850EC;\n  }\n\n  &::placeholder {\n    color: #d7d7d7;\n    font-size: 1.2rem;\n  }\n`;\n\nexport const FormLink = styled.a`\n  text-decoration: none;\n  font-size: 1.2rem;\n  font-family: Roboto, sans-serif;\n  color: #565252;\n\n  &:hover{\n    text-decoration-line: underline;\n    color: #000;\n  }\n`;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/Table/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/Dropdown/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/header/index.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/DeleteModal.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Flows/helper.tsx",["281"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/feature/index.tsx",["282"],"import React from 'react';\nimport { FeatureWrapper, FeatureGrid } from './styles';\nimport {\n  PrimaryHeader,\n  SecondaryHeader,\n  Paragraph,\n} from '../../common/typography';\n\nimport feature1 from '../../../assets/images/features/1.png';\nimport feature2 from '../../../assets/images/features/2.png';\nimport feature3 from '../../../assets/images/features/3.png';\nimport feature4 from '../../../assets/images/features/4.png';\nimport feature5 from '../../../assets/images/features/5.png';\n\nconst Feature = () => {\n  return (\n    <FeatureWrapper>\n      <PrimaryHeader className=\"heading\">Key Features</PrimaryHeader>\n      <FeatureGrid>\n        <div className=\"feature\">\n          <img src={feature1} alt=\"feature1\" />\n          <SecondaryHeader>Easy to develop</SecondaryHeader>\n          <Paragraph>\n            Create components connected them and make the bot flow in ease\n          </Paragraph>\n        </div>\n        <div className=\"feature\">\n          <img src={feature5} alt=\"feature1\" />\n          <SecondaryHeader>Multipe Platform</SecondaryHeader>\n          <Paragraph>\n            Create one bot and publish it in different platforms such as\n            facebook, slack, telegram, etc.\n          </Paragraph>\n        </div>\n        <div className=\"feature\">\n          <img src={feature3} alt=\"feature1\" />\n          <SecondaryHeader>Template Variety</SecondaryHeader>\n          <Paragraph>\n            Free templates which can be used to setup your bot.\n          </Paragraph>\n        </div>\n        <div className=\"feature\">\n          <img src={feature4} alt=\"feature1\" />\n          <SecondaryHeader>Rich Content</SecondaryHeader>\n          <Paragraph>\n            Various message content such as text, gallery, buttons.\n          </Paragraph>\n        </div>\n        <div className=\"feature\">\n          <img src={feature5} alt=\"feature1\" />\n          <SecondaryHeader>Feature 5</SecondaryHeader>\n          <Paragraph>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, t ut labore\n            et dolore magna aliqua.\n          </Paragraph>\n        </div>\n        <div className=\"feature\">\n          <img src={feature5} alt=\"feature1\" />\n          <SecondaryHeader>Feature 6</SecondaryHeader>\n          <Paragraph>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n            eiusmod tempor incididunt\n          </Paragraph>\n        </div>\n      </FeatureGrid>\n    </FeatureWrapper>\n  );\n};\n\nexport default Feature;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/info/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/navbar/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Sidebar/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Card/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Auth/AuthProvider.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/error/404.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/auth/RegisterPage.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/layout/AuthLayout.tsx",["283"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/Modal.tsx",["284"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/footer/index.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/navbar/index.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/feature/styles.ts",["285"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Sidebar/index.tsx",["286","287","288"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/utils/storage.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/buttons.ts",["289"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/Pagination/index.tsx",["290","291"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/header/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/Pagination/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/footer/styles.ts",[],{"ruleId":"292","severity":1,"message":"293","line":1,"column":27,"nodeType":"294","messageId":"295","endLine":1,"endColumn":36},{"ruleId":"292","severity":1,"message":"296","line":1,"column":38,"nodeType":"294","messageId":"295","endLine":1,"endColumn":48},{"ruleId":"292","severity":1,"message":"297","line":1,"column":50,"nodeType":"294","messageId":"295","endLine":1,"endColumn":58},{"ruleId":"292","severity":1,"message":"298","line":3,"column":30,"nodeType":"294","messageId":"295","endLine":3,"endColumn":35},{"ruleId":"292","severity":1,"message":"299","line":13,"column":3,"nodeType":"294","messageId":"295","endLine":13,"endColumn":17},{"ruleId":"292","severity":1,"message":"300","line":29,"column":17,"nodeType":"294","messageId":"295","endLine":29,"endColumn":25},{"ruleId":"301","severity":1,"message":"302","line":37,"column":64,"nodeType":"303","messageId":"304","endLine":37,"endColumn":66},{"ruleId":"301","severity":1,"message":"302","line":38,"column":21,"nodeType":"303","messageId":"304","endLine":38,"endColumn":23},{"ruleId":"292","severity":1,"message":"305","line":55,"column":9,"nodeType":"294","messageId":"295","endLine":55,"endColumn":28},{"ruleId":"301","severity":1,"message":"302","line":58,"column":21,"nodeType":"303","messageId":"304","endLine":58,"endColumn":23},{"ruleId":"301","severity":1,"message":"302","line":76,"column":21,"nodeType":"303","messageId":"304","endLine":76,"endColumn":23},{"ruleId":"301","severity":1,"message":"302","line":79,"column":21,"nodeType":"303","messageId":"304","endLine":79,"endColumn":23},{"ruleId":"301","severity":1,"message":"302","line":88,"column":21,"nodeType":"303","messageId":"304","endLine":88,"endColumn":23},{"ruleId":"301","severity":1,"message":"302","line":102,"column":21,"nodeType":"303","messageId":"304","endLine":102,"endColumn":23},{"ruleId":"301","severity":1,"message":"302","line":105,"column":21,"nodeType":"303","messageId":"304","endLine":105,"endColumn":23},{"ruleId":"301","severity":1,"message":"302","line":114,"column":21,"nodeType":"303","messageId":"304","endLine":114,"endColumn":23},{"ruleId":"301","severity":1,"message":"302","line":126,"column":19,"nodeType":"303","messageId":"304","endLine":126,"endColumn":21},{"ruleId":"301","severity":1,"message":"302","line":138,"column":19,"nodeType":"303","messageId":"304","endLine":138,"endColumn":21},{"ruleId":"301","severity":1,"message":"302","line":184,"column":21,"nodeType":"303","messageId":"304","endLine":184,"endColumn":23},{"ruleId":"301","severity":1,"message":"302","line":299,"column":41,"nodeType":"303","messageId":"304","endLine":299,"endColumn":43},{"ruleId":"301","severity":1,"message":"302","line":303,"column":35,"nodeType":"303","messageId":"304","endLine":303,"endColumn":37},{"ruleId":"301","severity":1,"message":"302","line":394,"column":50,"nodeType":"303","messageId":"304","endLine":394,"endColumn":52},{"ruleId":"301","severity":1,"message":"302","line":398,"column":49,"nodeType":"303","messageId":"304","endLine":398,"endColumn":51},{"ruleId":"306","replacedBy":"307"},{"ruleId":"308","replacedBy":"309"},{"ruleId":"292","severity":1,"message":"310","line":4,"column":10,"nodeType":"294","messageId":"295","endLine":4,"endColumn":24},{"ruleId":"292","severity":1,"message":"311","line":11,"column":10,"nodeType":"294","messageId":"295","endLine":11,"endColumn":20},{"ruleId":"301","severity":1,"message":"302","line":22,"column":59,"nodeType":"303","messageId":"304","endLine":22,"endColumn":61},{"ruleId":"301","severity":1,"message":"302","line":27,"column":17,"nodeType":"303","messageId":"304","endLine":27,"endColumn":19},{"ruleId":"312","severity":1,"message":"313","line":41,"column":6,"nodeType":"314","endLine":41,"endColumn":23,"suggestions":"315"},{"ruleId":"301","severity":1,"message":"302","line":91,"column":17,"nodeType":"303","messageId":"304","endLine":91,"endColumn":19},{"ruleId":"301","severity":1,"message":"302","line":111,"column":17,"nodeType":"303","messageId":"304","endLine":111,"endColumn":19},{"ruleId":"301","severity":1,"message":"302","line":139,"column":17,"nodeType":"303","messageId":"304","endLine":139,"endColumn":19},{"ruleId":"306","replacedBy":"316"},{"ruleId":"308","replacedBy":"317"},{"ruleId":"292","severity":1,"message":"318","line":5,"column":10,"nodeType":"294","messageId":"295","endLine":5,"endColumn":23},{"ruleId":"301","severity":1,"message":"302","line":16,"column":21,"nodeType":"303","messageId":"304","endLine":16,"endColumn":23},{"ruleId":"301","severity":1,"message":"302","line":29,"column":21,"nodeType":"303","messageId":"304","endLine":29,"endColumn":23},{"ruleId":"319","severity":1,"message":"320","line":30,"column":44,"nodeType":"321","messageId":"322","endLine":30,"endColumn":46},{"ruleId":"301","severity":1,"message":"302","line":31,"column":23,"nodeType":"303","messageId":"304","endLine":31,"endColumn":25},{"ruleId":"301","severity":1,"message":"302","line":49,"column":19,"nodeType":"303","messageId":"304","endLine":49,"endColumn":21},{"ruleId":"323","severity":1,"message":"324","line":68,"column":11,"nodeType":"325","endLine":68,"endColumn":58},{"ruleId":"292","severity":1,"message":"318","line":5,"column":10,"nodeType":"294","messageId":"295","endLine":5,"endColumn":23},{"ruleId":"301","severity":1,"message":"302","line":29,"column":21,"nodeType":"303","messageId":"304","endLine":29,"endColumn":23},{"ruleId":"301","severity":1,"message":"302","line":38,"column":25,"nodeType":"303","messageId":"304","endLine":38,"endColumn":27},{"ruleId":"301","severity":1,"message":"326","line":48,"column":25,"nodeType":"303","messageId":"304","endLine":48,"endColumn":27},{"ruleId":"319","severity":1,"message":"320","line":76,"column":57,"nodeType":"321","messageId":"322","endLine":76,"endColumn":59},{"ruleId":"301","severity":1,"message":"302","line":77,"column":19,"nodeType":"303","messageId":"304","endLine":77,"endColumn":21},{"ruleId":"319","severity":1,"message":"320","line":78,"column":45,"nodeType":"321","messageId":"322","endLine":78,"endColumn":47},{"ruleId":"301","severity":1,"message":"302","line":79,"column":21,"nodeType":"303","messageId":"304","endLine":79,"endColumn":23},{"ruleId":"319","severity":1,"message":"320","line":80,"column":43,"nodeType":"321","messageId":"322","endLine":80,"endColumn":45},{"ruleId":"301","severity":1,"message":"302","line":81,"column":25,"nodeType":"303","messageId":"304","endLine":81,"endColumn":27},{"ruleId":"301","severity":1,"message":"302","line":84,"column":25,"nodeType":"303","messageId":"304","endLine":84,"endColumn":27},{"ruleId":"301","severity":1,"message":"302","line":96,"column":48,"nodeType":"303","messageId":"304","endLine":96,"endColumn":50},{"ruleId":"301","severity":1,"message":"302","line":109,"column":28,"nodeType":"303","messageId":"304","endLine":109,"endColumn":30},{"ruleId":"301","severity":1,"message":"302","line":123,"column":21,"nodeType":"303","messageId":"304","endLine":123,"endColumn":23},{"ruleId":"319","severity":1,"message":"320","line":124,"column":44,"nodeType":"321","messageId":"322","endLine":124,"endColumn":46},{"ruleId":"301","severity":1,"message":"302","line":125,"column":23,"nodeType":"303","messageId":"304","endLine":125,"endColumn":25},{"ruleId":"319","severity":1,"message":"320","line":126,"column":43,"nodeType":"321","messageId":"322","endLine":126,"endColumn":45},{"ruleId":"301","severity":1,"message":"302","line":127,"column":25,"nodeType":"303","messageId":"304","endLine":127,"endColumn":27},{"ruleId":"301","severity":1,"message":"302","line":150,"column":19,"nodeType":"303","messageId":"304","endLine":150,"endColumn":21},{"ruleId":"319","severity":1,"message":"320","line":151,"column":42,"nodeType":"321","messageId":"322","endLine":151,"endColumn":44},{"ruleId":"301","severity":1,"message":"302","line":152,"column":21,"nodeType":"303","messageId":"304","endLine":152,"endColumn":23},{"ruleId":"319","severity":1,"message":"320","line":153,"column":41,"nodeType":"321","messageId":"322","endLine":153,"endColumn":43},{"ruleId":"301","severity":1,"message":"302","line":154,"column":23,"nodeType":"303","messageId":"304","endLine":154,"endColumn":25},{"ruleId":"301","severity":1,"message":"302","line":173,"column":19,"nodeType":"303","messageId":"304","endLine":173,"endColumn":21},{"ruleId":"319","severity":1,"message":"320","line":174,"column":42,"nodeType":"321","messageId":"322","endLine":174,"endColumn":44},{"ruleId":"301","severity":1,"message":"302","line":175,"column":21,"nodeType":"303","messageId":"304","endLine":175,"endColumn":23},{"ruleId":"319","severity":1,"message":"320","line":176,"column":41,"nodeType":"321","messageId":"322","endLine":176,"endColumn":43},{"ruleId":"301","severity":1,"message":"302","line":177,"column":23,"nodeType":"303","messageId":"304","endLine":177,"endColumn":25},{"ruleId":"301","severity":1,"message":"302","line":193,"column":19,"nodeType":"303","messageId":"304","endLine":193,"endColumn":21},{"ruleId":"312","severity":1,"message":"313","line":208,"column":6,"nodeType":"314","endLine":208,"endColumn":25,"suggestions":"327"},{"ruleId":"312","severity":1,"message":"313","line":215,"column":6,"nodeType":"314","endLine":215,"endColumn":22,"suggestions":"328"},{"ruleId":"319","severity":1,"message":"329","line":228,"column":70,"nodeType":"321","messageId":"330","endLine":228,"endColumn":72},{"ruleId":"323","severity":1,"message":"324","line":236,"column":23,"nodeType":"325","endLine":236,"endColumn":74},{"ruleId":"306","replacedBy":"331"},{"ruleId":"308","replacedBy":"332"},{"ruleId":"301","severity":1,"message":"302","line":18,"column":21,"nodeType":"303","messageId":"304","endLine":18,"endColumn":23},{"ruleId":"301","severity":1,"message":"302","line":25,"column":19,"nodeType":"303","messageId":"304","endLine":25,"endColumn":21},{"ruleId":"319","severity":1,"message":"320","line":26,"column":42,"nodeType":"321","messageId":"322","endLine":26,"endColumn":44},{"ruleId":"301","severity":1,"message":"302","line":27,"column":21,"nodeType":"303","messageId":"304","endLine":27,"endColumn":23},{"ruleId":"301","severity":1,"message":"302","line":43,"column":19,"nodeType":"303","messageId":"304","endLine":43,"endColumn":21},{"ruleId":"312","severity":1,"message":"313","line":57,"column":6,"nodeType":"314","endLine":57,"endColumn":22,"suggestions":"333"},{"ruleId":"306","replacedBy":"334"},{"ruleId":"308","replacedBy":"335"},{"ruleId":"292","severity":1,"message":"336","line":19,"column":8,"nodeType":"294","messageId":"295","endLine":19,"endColumn":17},{"ruleId":"292","severity":1,"message":"337","line":22,"column":9,"nodeType":"294","messageId":"295","endLine":22,"endColumn":20},{"ruleId":"306","replacedBy":"338"},{"ruleId":"308","replacedBy":"339"},{"ruleId":"292","severity":1,"message":"340","line":28,"column":25,"nodeType":"294","messageId":"295","endLine":28,"endColumn":39},{"ruleId":"292","severity":1,"message":"336","line":2,"column":8,"nodeType":"294","messageId":"295","endLine":2,"endColumn":17},{"ruleId":"292","severity":1,"message":"336","line":2,"column":8,"nodeType":"294","messageId":"295","endLine":2,"endColumn":17},{"ruleId":"292","severity":1,"message":"341","line":7,"column":8,"nodeType":"294","messageId":"295","endLine":7,"endColumn":13},{"ruleId":"292","severity":1,"message":"342","line":24,"column":10,"nodeType":"294","messageId":"295","endLine":24,"endColumn":19},{"ruleId":"343","severity":1,"message":"344","line":108,"column":23,"nodeType":"325","endLine":112,"endColumn":28},{"ruleId":"343","severity":1,"message":"344","line":115,"column":23,"nodeType":"325","endLine":115,"endColumn":35},{"ruleId":"343","severity":1,"message":"344","line":116,"column":23,"nodeType":"325","endLine":120,"endColumn":28},{"ruleId":"292","severity":1,"message":"345","line":2,"column":10,"nodeType":"294","messageId":"295","endLine":2,"endColumn":14},{"ruleId":"301","severity":1,"message":"302","line":221,"column":56,"nodeType":"303","messageId":"304","endLine":221,"endColumn":58},{"ruleId":"292","severity":1,"message":"346","line":10,"column":8,"nodeType":"294","messageId":"295","endLine":10,"endColumn":16},{"ruleId":"292","severity":1,"message":"347","line":5,"column":10,"nodeType":"294","messageId":"295","endLine":5,"endColumn":20},{"ruleId":"312","severity":1,"message":"348","line":40,"column":6,"nodeType":"314","endLine":40,"endColumn":8,"suggestions":"349"},{"ruleId":"292","severity":1,"message":"350","line":2,"column":10,"nodeType":"294","messageId":"295","endLine":2,"endColumn":20},{"ruleId":"292","severity":1,"message":"351","line":1,"column":36,"nodeType":"294","messageId":"295","endLine":1,"endColumn":39},{"ruleId":"312","severity":1,"message":"352","line":41,"column":6,"nodeType":"314","endLine":41,"endColumn":14,"suggestions":"353"},{"ruleId":"354","severity":1,"message":"355","line":62,"column":13,"nodeType":"325","endLine":62,"endColumn":45},{"ruleId":"292","severity":1,"message":"356","line":2,"column":8,"nodeType":"294","messageId":"295","endLine":2,"endColumn":15},{"ruleId":"292","severity":1,"message":"357","line":1,"column":17,"nodeType":"294","messageId":"295","endLine":1,"endColumn":25},{"ruleId":"292","severity":1,"message":"293","line":1,"column":27,"nodeType":"294","messageId":"295","endLine":1,"endColumn":36},"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useContext' is defined but never used.","'Children' is defined but never used.","'Image' is defined but never used.","'BuilderContext' is defined but never used.","'setState' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'calculateCardHeight' is assigned a value but never used.","no-native-reassign",["358"],"no-negated-in-lhs",["359"],"'ToolbarHeading' is defined but never used.","'InputField' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'register'. Either include it or remove the dependency array.","ArrayExpression",["360"],["358"],["359"],"'AddTextButton' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","Expected '!==' and instead saw '!='.",["361"],["362"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd",["358"],["359"],["363"],["358"],["359"],"'AppLayout' is defined but never used.","'authContext' is assigned a value but never used.",["358"],["359"],"'onRequestClose' is assigned a value but never used.","'Table' is defined but never used.","'isLoading' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'grey' is defined but never used.","'feature2' is defined but never used.","'AuthButton' is defined but never used.","React Hook useEffect has missing dependencies: 'botData' and 'bots'. Either include them or remove the dependency array. You can also do a functional update 'setBotData(b => ...)' if you only need 'botData' in the 'setBotData' call.",["364"],"'darkerGrey' is defined but never used.","'Ref' is defined but never used.","React Hook useEffect has a missing dependency: 'handleSidebarState'. Either include it or remove the dependency array. If 'handleSidebarState' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["365"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'Toolbar' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"366","fix":"367"},{"desc":"368","fix":"369"},{"desc":"370","fix":"371"},{"desc":"370","fix":"372"},{"desc":"373","fix":"374"},{"desc":"375","fix":"376"},"Update the dependencies array to be: [isChangingTitle, register]",{"range":"377","text":"378"},"Update the dependencies array to be: [isChangingHeading, register]",{"range":"379","text":"380"},"Update the dependencies array to be: [isChangingBody, register]",{"range":"381","text":"382"},{"range":"383","text":"382"},"Update the dependencies array to be: [botData, bots]",{"range":"384","text":"385"},"Update the dependencies array to be: [handleSidebarState, isOpen]",{"range":"386","text":"387"},[1447,1464],"[isChangingTitle, register]",[5917,5936],"[isChangingHeading, register]",[6077,6093],"[isChangingBody, register]",[1764,1780],[1057,1059],"[botData, bots]",[1369,1377],"[handleSidebarState, isOpen]"]