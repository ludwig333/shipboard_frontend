[{"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Flows/builder.tsx":"1","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Toolbar/styles.ts":"2","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Text/index.tsx":"3","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Image/styles.ts":"4","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Card/index.tsx":"5","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Image/index.tsx":"6","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Modals/ConnectFlow.tsx":"7","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Toolbar/BtnEditor.tsx":"8","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Card/styles.ts":"9","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Text/styles.ts":"10","/home/rabinson/Freelancing/ShipboardBot/frontend/src/styles/global.ts":"11","/home/rabinson/Freelancing/ShipboardBot/frontend/src/App.tsx":"12","/home/rabinson/Freelancing/ShipboardBot/frontend/src/styles/mediaQueries.ts":"13","/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Auth/JWTValidator.ts":"14","/home/rabinson/Freelancing/ShipboardBot/frontend/src/routes/ProtectedRoute.tsx":"15","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/auth/ForgotPasswordPage.tsx":"16","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Settings/index.tsx":"17","/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Modal/ModalProvider.tsx":"18","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/form.ts":"19","/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/bots.ts":"20","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/layout/AuthLayout.tsx":"21","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/CreateModal.tsx":"22","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/EditModal.tsx":"23","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Flows/CreateModal.tsx":"24","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/Configure/Slack.tsx":"25","/home/rabinson/Freelancing/ShipboardBot/frontend/src/utils/request.ts":"26","/home/rabinson/Freelancing/ShipboardBot/frontend/src/constants/urls.ts":"27","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/Pagination/styles.ts":"28","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/feature/index.tsx":"29","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/navbar/index.tsx":"30","/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/texts.ts":"31","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/footer/styles.ts":"32","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Sidebar/index.tsx":"33","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Sidebar/styles.ts":"34","/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Auth/reducer.ts":"35","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Templates/index.tsx":"36","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Flows/index.tsx":"37","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/grid.ts":"38","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Flows/styles.ts":"39","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Flows/DeleteModal.tsx":"40","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/Configure/Messenger.tsx":"41","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Flows/helper.tsx":"42","/home/rabinson/Freelancing/ShipboardBot/frontend/src/utils/pagination.ts":"43","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/Configure/styles.ts":"44","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/feature/styles.ts":"45","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/navbar/styles.ts":"46","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Modals/styles.ts":"47","/home/rabinson/Freelancing/ShipboardBot/frontend/src/styles/theme.ts":"48","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/auth/LoginPage.tsx":"49","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Bots/index.tsx":"50","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/buttons.ts":"51","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/header/index.tsx":"52","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/Pagination/index.tsx":"53","/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/flows.ts":"54","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Flows/EditModal.tsx":"55","/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/buttons.ts":"56","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Toolbar/index.tsx":"57","/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/cards.ts":"58","/home/rabinson/Freelancing/ShipboardBot/frontend/src/index.tsx":"59","/home/rabinson/Freelancing/ShipboardBot/frontend/src/utils/storage.ts":"60","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/auth/RegisterPage.tsx":"61","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/Configure/Telegram.tsx":"62","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/header/styles.ts":"63","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/info/styles.ts":"64","/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/images.ts":"65"},{"size":34786,"mtime":1613446477500,"results":"66","hashOfConfig":"67"},{"size":5030,"mtime":1613309347061,"results":"68","hashOfConfig":"67"},{"size":4787,"mtime":1613304359972,"results":"69","hashOfConfig":"67"},{"size":1691,"mtime":1612625185277,"results":"70","hashOfConfig":"67"},{"size":13489,"mtime":1613361818634,"results":"71","hashOfConfig":"67"},{"size":3108,"mtime":1612614260275,"results":"72","hashOfConfig":"67"},{"size":2919,"mtime":1612694265888,"results":"73","hashOfConfig":"67"},{"size":8763,"mtime":1613310899874,"results":"74","hashOfConfig":"67"},{"size":2855,"mtime":1613222328617,"results":"75","hashOfConfig":"67"},{"size":1226,"mtime":1612753801902,"results":"76","hashOfConfig":"67"},{"size":1243,"mtime":1612754206496,"results":"77","hashOfConfig":"67"},{"size":2168,"mtime":1611544707887,"results":"78","hashOfConfig":"67"},{"size":437,"mtime":1607357171179,"results":"79","hashOfConfig":"67"},{"size":299,"mtime":1607173241742,"results":"80","hashOfConfig":"67"},{"size":944,"mtime":1611287624293,"results":"81","hashOfConfig":"67"},{"size":2699,"mtime":1607850305009,"results":"82","hashOfConfig":"67"},{"size":218,"mtime":1607998072129,"results":"83","hashOfConfig":"67"},{"size":3582,"mtime":1612584637978,"results":"84","hashOfConfig":"67"},{"size":1603,"mtime":1612803710437,"results":"85","hashOfConfig":"67"},{"size":1387,"mtime":1612885626225,"results":"86","hashOfConfig":"67"},{"size":3062,"mtime":1607357777066,"results":"87","hashOfConfig":"67"},{"size":2305,"mtime":1611506040626,"results":"88","hashOfConfig":"67"},{"size":2326,"mtime":1611505989860,"results":"89","hashOfConfig":"67"},{"size":2347,"mtime":1611495697651,"results":"90","hashOfConfig":"67"},{"size":4641,"mtime":1613014354353,"results":"91","hashOfConfig":"67"},{"size":494,"mtime":1607840291044,"results":"92","hashOfConfig":"67"},{"size":772,"mtime":1613440380369,"results":"93","hashOfConfig":"67"},{"size":739,"mtime":1612585684875,"results":"94","hashOfConfig":"67"},{"size":2469,"mtime":1607354234054,"results":"95","hashOfConfig":"67"},{"size":717,"mtime":1607357496043,"results":"96","hashOfConfig":"67"},{"size":670,"mtime":1611717938172,"results":"97","hashOfConfig":"67"},{"size":758,"mtime":1607358268935,"results":"98","hashOfConfig":"67"},{"size":3424,"mtime":1612664150234,"results":"99","hashOfConfig":"67"},{"size":2446,"mtime":1612319962325,"results":"100","hashOfConfig":"67"},{"size":442,"mtime":1607166058000,"results":"101","hashOfConfig":"67"},{"size":210,"mtime":1610158645219,"results":"102","hashOfConfig":"67"},{"size":8948,"mtime":1613440258314,"results":"103","hashOfConfig":"67"},{"size":2292,"mtime":1612667221062,"results":"104","hashOfConfig":"67"},{"size":1370,"mtime":1613271148413,"results":"105","hashOfConfig":"67"},{"size":1488,"mtime":1611506630557,"results":"106","hashOfConfig":"67"},{"size":6298,"mtime":1613447393203,"results":"107","hashOfConfig":"67"},{"size":5870,"mtime":1613447378481,"results":"108","hashOfConfig":"67"},{"size":570,"mtime":1607912715680,"results":"109","hashOfConfig":"67"},{"size":587,"mtime":1612689058653,"results":"110","hashOfConfig":"67"},{"size":707,"mtime":1606842094420,"results":"111","hashOfConfig":"67"},{"size":596,"mtime":1607358244451,"results":"112","hashOfConfig":"67"},{"size":386,"mtime":1612599018149,"results":"113","hashOfConfig":"67"},{"size":300,"mtime":1606619841444,"results":"114","hashOfConfig":"67"},{"size":3083,"mtime":1608089518101,"results":"115","hashOfConfig":"67"},{"size":5737,"mtime":1612693872474,"results":"116","hashOfConfig":"67"},{"size":2591,"mtime":1612611015356,"results":"117","hashOfConfig":"67"},{"size":962,"mtime":1607398449634,"results":"118","hashOfConfig":"67"},{"size":1583,"mtime":1611403993930,"results":"119","hashOfConfig":"67"},{"size":1330,"mtime":1613272123411,"results":"120","hashOfConfig":"67"},{"size":2316,"mtime":1612681211971,"results":"121","hashOfConfig":"67"},{"size":1105,"mtime":1612716373558,"results":"122","hashOfConfig":"67"},{"size":9611,"mtime":1613446941201,"results":"123","hashOfConfig":"67"},{"size":1341,"mtime":1612234206822,"results":"124","hashOfConfig":"67"},{"size":515,"mtime":1607764359769,"results":"125","hashOfConfig":"67"},{"size":330,"mtime":1606965896953,"results":"126","hashOfConfig":"67"},{"size":4457,"mtime":1607849994798,"results":"127","hashOfConfig":"67"},{"size":4972,"mtime":1612887697390,"results":"128","hashOfConfig":"67"},{"size":2194,"mtime":1607358477789,"results":"129","hashOfConfig":"67"},{"size":1251,"mtime":1607358308147,"results":"130","hashOfConfig":"67"},{"size":765,"mtime":1611888511608,"results":"131","hashOfConfig":"67"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":57,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"v8ty68",{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":37,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"140"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"136"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"153"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":41,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"157"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"153"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"136"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"153"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"136"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"136"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"153"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"140"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"234","messages":"235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"153"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"249","messages":"250","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"251","messages":"252","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"153"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"260","messages":"261","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"153"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"265","messages":"266","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Flows/builder.tsx",["283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Toolbar/styles.ts",[],["340","341"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Text/index.tsx",["342","343","344","345","346","347","348","349","350","351"],"import React, { useEffect, useState, useRef, useContext } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { BuilderContext } from '../../../../../services/Builder/BuilderProvider';\nimport { AddTextWrapper } from './styles';\nimport { AddTextButton, ContentButton } from '../../../../common/buttons';\nimport { BiTrash } from 'react-icons/bi';\nimport Textarea from 'react-expanding-textarea';\nimport { updateText, deleteText } from '../../../../../apis/texts';\nimport { toast } from 'react-toastify';\nimport { saveButton } from '../../../../../apis/buttons';\nimport { v4 as uuidv4 } from 'uuid';\n\n\nconst FormText = ({ messageId, childId , showBtnEditor, setEditorContent}) => {\n  const [builderState, setBuilderState] = useContext(BuilderContext);\n  const { register, handleSubmit } = useForm({ mode: 'onChange' });\n  const [isChangingBody, setIsChangingBody] = useState(false);\n\n  const textAreaRef = useRef<HTMLTextAreaElement>(null);\n  const buttonRef = useRef<HTMLButtonElement>(null);\n\n  //Find index of specific object using findIndex method.\n  const childIndex = builderState[messageId].children.findIndex(\n    (obj) => obj.id == childId\n  );\n\n  const onTextChange = (data) => {\n    var height = textAreaRef.current.scrollHeight;\n    updateText({\n      text: data.text,\n      height: height\n    }, childId).then((response) => {\n      setBuilderState(\n        builderState.map((item, index) => {\n          if (index == messageId) {\n            item.children.map((child, ind) => {\n              if (ind == childIndex) {\n                child.value = data.text;\n                child.height = height;\n              }\n            });\n          }\n          return item;\n        })\n      );\n    }).catch((err) => {\n      toast.error(\"Something went wrong\");\n    })\n  };\n\n  const handleDelete = () => {\n    var height = builderState[messageId].height - textAreaRef.current.scrollHeight;\n    deleteText(childId)\n      .then(() => {\n        setBuilderState(\n          builderState.map((item, index) => {\n            if (index == messageId) {\n              item.height = height;\n              item.children.splice(childIndex,1)\n            }\n            return item;\n          })\n        );\n      })\n      .catch((err) => {\n        toast.error(\"Something went wrong\");\n    })\n  };\n\n  const handleAddButton = () => {\n    const buttonNumber = builderState[messageId].children[childIndex].buttons.length + 1;\n    saveButton({\n      name: 'Button #' + buttonNumber,\n      parent_type: 'text',\n      parent: childId\n    }).then((response) => {\n      setBuilderState(\n        builderState.map((item, index) => {\n          if (index == messageId) {\n            item.children.map((child) => {\n              if (child.id == childId) {\n                child.buttons.push(response.data);\n              }\n            });\n          }\n          return item;\n        })\n      );\n    }).catch((err) => {\n      toast.error(\"Something went wrong\")\n    })      \n  }\n\n  useEffect(() => {\n    if (textAreaRef.current) {\n      register(textAreaRef.current, {required: true, minLength: 3});\n    }\n  }, []);\n\n  return (\n    <AddTextWrapper>\n      <button className=\"action-btn\">\n        <BiTrash onClick={handleDelete} />\n      </button>\n      <div className={isChangingBody ? 'card-body active' : 'card-body'}>\n        <form onBlur={handleSubmit(onTextChange)}>\n          <Textarea\n            maxLength={500}\n            placeholder=\"Enter your text here\"\n            onBlur={() => setIsChangingBody(false)}\n            defaultValue={builderState[messageId].children[childIndex].value}\n            id=\"text\"\n            name=\"text\"\n            ref={textAreaRef}\n            onClick={() => setIsChangingBody(true)}\n          />\n        </form>\n      </div>\n      <div className=\"card-base\">\n        {builderState[messageId].children[childIndex].buttons && builderState[messageId].children[childIndex].buttons.map((button, index) => {\n          return (\n            <React.Fragment key={button.id}>\n              <ContentButton\n                ref={buttonRef}\n                onClick={(event) => {\n                setEditorContent({\n                  position: buttonRef.current.scrollTop,\n                  name: button.name,\n                  id: button.id,\n                  messageId: builderState[messageId].id,\n                  childId: childId,\n                  type: 'text',\n                  url: button.url,\n                  next: button.next\n                });\n                showBtnEditor();\n            }}>{button.name}</ContentButton>\n            </React.Fragment>\n          );\n        })}\n        <AddTextButton height=\"4rem\" width=\"100%\" onClick={handleAddButton}>\n          Add Button\n        </AddTextButton>\n      </div>\n    </AddTextWrapper>\n  );\n};\n\nexport default FormText;\n",["352","353"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Image/styles.ts",[],["354","355"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Card/index.tsx",["356","357","358","359","360","361","362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","388","389","390","391","392"],"import React, { useState, useEffect, useRef, useContext } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { CardSlider, CardWrapper } from './styles';\nimport { BuilderContext } from '../../../../../services/Builder/BuilderProvider';\nimport { AddTextButton, ContentButton } from '../../../../common/buttons';\nimport { ImageWrapper } from '../Image/styles';\nimport { v4 as uuidv4 } from 'uuid';\nimport Textarea from 'react-expanding-textarea';\nimport {\n  BiImageAdd,\n  BiTrash,\n  BiChevronRight,\n  BiChevronLeft,\n  BiPlus,\n} from 'react-icons/bi';\nimport { addCard, deleteCardGroup, updateCard, uploadImage } from '../../../../../apis/cards';\nimport { toast } from 'react-toastify';\nimport { saveButton } from '../../../../../apis/buttons';\n\nconst FormCard = ({ messageId, childId, showBtnEditor, setEditorContent }) => {\n  const [builderState, setBuilderState] = useContext(BuilderContext);\n  const { register, handleSubmit } = useForm({ mode: 'onChange' });\n  const [isChangingHeading, setIsChangingHeading] = useState(false);\n  const [isChangingBody, setIsChangingBody] = useState(false);\n  const [activeCardIndex, setActiveCardIndex] = useState(0);\n\n  const headingRef = useRef<HTMLInputElement>(null);\n  const paragraphRef = useRef<HTMLTextAreaElement>(null);\n  const cardRef = useRef<HTMLDivElement>(null);\n  const buttonRef = useRef<HTMLButtonElement>(null);\n\n  //Find index of specific object using findIndex method.\n  const childIndex = builderState[messageId].children.findIndex(\n    (obj) => obj.id == childId\n  );\n\n  //Card Navigation functions\n  const handleNextButton = (id) => {\n    const cards = builderState[messageId].children[childIndex].cards;\n    const length = cards.length - 1;\n    const activeCardIndex = getActiveCardIndex(cards);\n    setActiveCardIndex(activeCardIndex + 1);\n\n    if (activeCardIndex == length) {\n      makeCardActive(activeCardIndex + 1, activeCardIndex, length + 2, true);\n    } else {\n      makeCardActive(activeCardIndex + 1, activeCardIndex);\n    }\n  };\n\n  const handlePreviousButton = () => {\n    const cards = builderState[messageId].children[childIndex].cards;\n    const activeCardIndex = getActiveCardIndex(cards);\n    setActiveCardIndex(activeCardIndex - 1);\n    if (activeCardIndex != 0) {\n      makeCardActive(activeCardIndex - 1, activeCardIndex);\n    }\n  };\n\n  const makeCardActive = (\n    cardIndex,\n    activeCardIndex,\n    length = 0,\n    addNew = false\n  ) => {\n    if (addNew) {\n      addCard(childId).then((response) => {\n        setBuilderState(\n          builderState.map((message, index) => { \n            if (index == messageId) { \n              message.children.map((child, ind) => { \n                if (ind == childIndex) {\n                  //First set active card to inactive\n                  child.cards.map((card, inx) => {\n                    if (inx == activeCardIndex) {\n                      card.active = false\n                    }\n                    return card;\n                })\n                //Then push a new card with active true;\n                  child.cards.push(response.data)\n                }\n              })\n            }\n            return message;\n          })\n        );\n      }).catch((err) => {\n        toast.error(\"Something went wrong\");\n      });\n    } else {\n      setBuilderState(\n        builderState.map((message, index) => { \n          if (index == messageId) { \n            message.children.map((child, ind) => { \n              if (ind == childIndex) {\n                child.cards.map((card, inx) => { \n                  if (inx == cardIndex) { \n                    card.active = true\n                  }\n                  if (inx == activeCardIndex) { \n                    card.active = false\n                  }\n                  return card;\n                })\n              }\n              return child;\n            })\n          }\n          return message;\n        })\n      );\n    }\n  };\n\n  const getActiveCardIndex = (cards) => {\n    return cards.findIndex((obj) => obj.active == true);\n  };\n\n  const getCardIndex = (id) => {\n    return builderState[messageId].children[childIndex].cards.findIndex(\n      (obj) => obj.id === id\n    );\n  };\n\n  const isLastCard = () => {\n    const cards = builderState[messageId].children[childIndex].cards;\n    const length = cards.length - 1;\n    const activeCardIndex = getActiveCardIndex(cards);\n    return activeCardIndex == length;\n  };\n\n  //Form input submit methods\n  const onUploadImage = (data, id) => {\n    let cardIndex = getCardIndex(id);\n    let reader = new FileReader();\n    const formData = new FormData();\n    formData.append('image', data.image[0]);\n    formData.append('name', data.image[0].name);\n\n    reader.onloadend = () => {\n      var paragraphHeight = paragraphRef.current.scrollHeight;\n      uploadImage(formData, id).then((response) => {\n        setBuilderState(\n          builderState.map((item, index) => {\n            if (index == messageId) {\n              item.children.map((child, ind) => {\n                if (ind == childIndex) {\n                  child.cards.map((card, s) => {\n                    if (s == cardIndex) {\n                      card.selectedImage = data.image[0];\n                      card.imagePreviewUrl = reader.result;\n                      card.height = paragraphHeight + 200;\n                    }\n                    return card;\n                  });\n                }\n                return child;\n              });\n            }\n            return item;\n          })\n        );\n      }).catch((err) => {\n        toast.error(\"Something went wrong\");\n      })\n    };\n\n    reader.readAsDataURL(data.image[0]);\n  };\n\n  const onHeadingChange = (data, id) => {\n    let cardIndex = getCardIndex(id);\n    var paragraphHeight = paragraphRef.current.scrollHeight;\n\n    updateCard({\n      heading: data.heading,\n      height: paragraphHeight + 200\n    }, id).then((response) => {\n      setBuilderState(\n        builderState.map((item, index) => {\n          if (index == messageId) {\n            item.children.map((child, ind) => {\n              if (ind == childIndex) {\n                child.cards.map((card, s) => {\n                  if (s == cardIndex) {\n                    card.heading = data.heading;\n                    card.height = paragraphHeight + 200;\n                  }\n                });\n              }\n            });\n          }\n          return item;\n        })\n      );\n    }).catch((err) => {\n      toast.error(\"Something went wrong\");\n    })\n  };\n\n  const onParagraphChange = (data, id) => {\n    let cardIndex = getCardIndex(id);\n\n    var paragraphHeight = paragraphRef.current.scrollHeight;\n\n    updateCard({\n      body: data.body,\n      height: paragraphHeight + 200\n    }, id).then((response) => {\n      setBuilderState(\n        builderState.map((item, index) => {\n          if (index == messageId) {\n            item.children.map((child, ind) => {\n              if (ind == childIndex) {\n                child.cards.map((card, s) => {\n                  if (s == cardIndex) {\n                    card.body = data.body;\n                    card.height = paragraphHeight + 200;\n                  }\n                });\n              }\n            });\n          }\n          return item;\n        })\n      );\n    }).catch((err) => {\n      toast.error(\"Something went wrong\");\n    })\n  };\n\n  const handleAddButton = () => {\n    const cards = builderState[messageId].children[childIndex].cards;\n    const activeCardIndex = getActiveCardIndex(cards);\n    const activeCard = builderState[messageId].children[childIndex].cards[activeCardIndex];\n    const buttonNumber = activeCard.buttons.length + 1;\n    saveButton({\n      name: 'Button #' + buttonNumber,\n      parent_type: 'card',\n      parent: activeCard.id\n    }).then((response) => {\n      setBuilderState(\n        builderState.map((item, index) => {\n          if (index == messageId) {\n            item.children.map((child) => {\n              if (child.id == childId) {\n                child.cards.map((card, inx) => {\n                  if (card.active == true) {\n                    card.buttons.push(response.data);\n                  }\n                })\n              }\n            });\n          }\n          return item;\n        })\n      );\n    }).catch((err) => {\n      toast.error(\"Something went wrong\")\n    })      \n  }\n\n  const handleDelete = () => {\n    deleteCardGroup(childId).then((response) => {\n      setBuilderState(\n        builderState.map((item, index) => {\n          if (index == messageId) {\n            item.height -= 250;\n            item.children.splice(childIndex, 1);\n          }\n          return item;\n        })\n      );\n    }).catch((err) => {\n      toast.error(\"Something went wrong\");\n    })\n  };\n\n  useEffect(() => {\n    if (paragraphRef.current) {\n      register(paragraphRef.current,  {required: true, minLength: 3})\n    }\n  }, [activeCardIndex]);\n\n  return (\n    <CardSlider>\n      <div className=\"navigation_btn previous\" onClick={handlePreviousButton}>\n        <BiChevronLeft />\n      </div>\n      <div className=\"navigation_btn next\" onClick={handleNextButton}>\n        {isLastCard() ? <BiPlus /> : <BiChevronRight />}\n      </div>\n      <button className=\"action-btn\" onClick={handleDelete}>\n        <BiTrash />\n      </button>\n      {builderState[messageId].children[childIndex].cards.map((card) => {\n        if (card.active) {\n          return (\n            <CardWrapper ref={cardRef}>\n              <div className=\"card-image\">\n                <ImageWrapper>\n                  {card.imagePreviewUrl ? (\n                    <div>\n                      <img src={card.imagePreviewUrl} alt=\"card-image\" />\n                    </div>\n                  ) : (\n                    <form\n                      onChange={handleSubmit((data) =>\n                        onUploadImage(data, card.id)\n                      )}>\n                      <input\n                        ref={register}\n                        type=\"file\"\n                        id={'card_image' + getCardIndex(card.id)}\n                        name=\"image\"\n                        accept=\"image/*\"\n                      />\n                      <label htmlFor={'card_image' + getCardIndex(card.id)}>\n                        <BiImageAdd />\n                        <p>Upload image</p>\n                      </label>\n                    </form>\n                  )}\n                </ImageWrapper>\n              </div>\n              <div className=\"card-text\">\n                <div\n                  className={\n                    isChangingHeading ? 'card-heading active' : 'card-heading'\n                  }>\n                  <form\n                    onBlur={handleSubmit((data) =>\n                      onHeadingChange(data, card.id)\n                    )}>\n                    <input\n                      className=\"card-title\"\n                      ref={register({required: true, minLength: 3 })}\n                      maxLength={27}\n                      id=\"heading\"\n                      name=\"heading\"\n                      defaultValue={card.heading}\n                      onBlur={() => setIsChangingHeading(false)}\n                      onClick={() => {\n                        setIsChangingBody(false);\n                        setIsChangingHeading(true);\n                      }}\n                    />\n                  </form>\n                </div>\n                <div\n                  className={isChangingBody ? 'card-body active' : 'card-body'}>\n                  <form\n                    onBlur={handleSubmit((data) =>\n                      onParagraphChange(data, card.id)\n                    )}>\n                    <Textarea\n                      className=\"card-paragraph\"\n                      maxLength={200}\n                      placeholder=\"Enter your text here\"\n                      onBlur={() => setIsChangingBody(false)}\n                      defaultValue={card.body}\n                      id=\"body\"\n                      name=\"body\"\n                      ref={paragraphRef}\n                      onClick={() => {\n                        setIsChangingHeading(false);\n                        setIsChangingBody(true);\n                      }}\n                    />\n                  </form>\n                </div>\n                <div className=\"card-base\">\n                {card.buttons && card.buttons.map((button, index) => {\n                    return (\n                      <React.Fragment key={button.id}>\n                        <ContentButton\n                          ref={buttonRef}\n                          onClick={(event) => {\n                          setEditorContent({\n                            position: buttonRef.current.scrollTop,\n                            name: button.name,\n                            id: button.id,\n                            messageId: builderState[messageId].id,\n                            childId: childId,\n                            activeCardId: card.id,\n                            type: 'card'\n                          });\n                          showBtnEditor();\n                      }}>{button.name}</ContentButton>\n                      </React.Fragment>\n                    );\n                  })}\n                </div>\n                <AddTextButton height=\"4rem\" width=\"100%\" onClick={handleAddButton}>\n                  Add Button\n                </AddTextButton>\n              </div>\n            </CardWrapper>\n          );\n        }\n      })}\n    </CardSlider>\n  );\n};\n\nexport default FormCard;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Image/index.tsx",["393","394","395","396","397","398","399"],"import React, { useEffect, useRef, useContext } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { ImageWrapper } from './styles';\nimport { BuilderContext } from '../../../../../services/Builder/BuilderProvider';\nimport { AddTextButton } from '../../../../common/buttons';\nimport { BiImageAdd, BiTrash } from 'react-icons/bi';\nimport { uploadImage, deleteImage } from '../../../../../apis/images';\nimport { toast } from 'react-toastify';\n\nconst FormImage = ({ messageId, childId }) => {\n  const [builderState, setBuilderState] = useContext(BuilderContext);\n  const { register, handleSubmit } = useForm({ mode: 'onChange' });\n\n  const imageRef = useRef<HTMLInputElement>(null);\n\n  //Find index of specific object using findIndex method.\n  const childIndex = builderState[messageId].children.findIndex(\n    (obj) => obj.id == childId\n  );\n\n  const image = builderState[messageId].children[childIndex];\n\n  const onSubmit = (data) => {\n    let reader = new FileReader();\n    const formData = new FormData();\n\n    formData.append('image', data.image[0]);\n    formData.append('name', data.image[0].name);\n    \n    reader.onloadend = () => {\n      var height = 180;\n      uploadImage(formData, childId).then((response) => {\n        setBuilderState(\n          builderState.map((item, index) => {\n            if (index == messageId) {\n              item.children.map((child, ind) => {\n                if (ind == childIndex) {\n                  child.selectedImage = data.image[0];\n                  child.imagePreviewUrl = reader.result;\n                  child.height = height;\n                }\n              });\n            }\n            return item;\n          })\n        );\n      }).catch((err) => {\n        toast.error(\"Something went wrong\")\n      })\n    };\n\n    reader.readAsDataURL(data.image[0]);\n  };\n\n  const handleDelete = () => {\n    deleteImage(childId).then((response) => {\n      setBuilderState(\n        builderState.map((item, index) => {\n          if (index == messageId) {\n            item.height -= 150;\n            item.children.splice(childIndex,1)\n          }\n          return item;\n        })\n      );\n    }).catch((err) => {\n      toast.error(\"Something went wrong\");\n    })\n   \n  };\n\n  useEffect(() => {\n    if (imageRef.current) {\n      register(imageRef.current);\n    }\n  });\n\n  return (\n    <ImageWrapper>\n      {image.imagePreviewUrl ? (\n        <div>\n          <img src={image.imagePreviewUrl} alt=\"image\" />\n          {/* <AddTextButton height=\"4rem\" width=\"100%\">\n            Add Button\n          </AddTextButton> */}\n        </div>\n      ) : (\n        <form onChange={handleSubmit(onSubmit)}>\n          <input\n            ref={imageRef}\n            type=\"file\"\n            id={'file' + childIndex}\n            name=\"image\"\n            accept=\"image/*\"\n          />\n          <label htmlFor={'file' + childIndex}>\n            <BiImageAdd />\n            <p>Upload image</p>\n          </label>\n        </form>\n      )}\n      <button className=\"action-btn\">\n        <BiTrash onClick={handleDelete} />\n      </button>\n    </ImageWrapper>\n  );\n};\n\nexport default FormImage;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Modals/ConnectFlow.tsx",["400","401","402","403"],"import React, { useEffect, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { getFlows } from '../../../../apis/flows';\nimport { GridWrapper } from '../../../common/grid';\nimport { ConnectFlowWrapper } from './styles';\nimport Pagination from '../../../common/Pagination/index';\nimport flowCover from '../../../../assets/images/flow-cover.png';\n\ntype FlowType = {\n  id: string;\n  name: string;\n  message_count: string\n};\n\nconst ConnectFlowModal = ({bot, flow, hideModal, handleSelect}) => {\n  const [flows, setFlows] = useState<Array<FlowType>>();\n  const [pageNumber, setPageNumber] = useState(1);\n  const [isLoading, setIsLoading] = useState(true);\n  const [lastPage, setLastPage] = useState(1);\n\n  const getFlowsData = (bot:string, pageNumber: number) => {\n    getFlows(bot, pageNumber)\n      .then((response) => {\n        var otherFlowsThanOneInside = response.data.filter(item => (item.id != flow) && item.message_count > 0)\n        setFlows(otherFlowsThanOneInside);\n        setPageNumber(response.meta.current_page);\n        setLastPage(response.meta.last_page);\n      })\n      .catch((err) => {\n        console.log(\"Something went wrong\");\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n\n  const handlePageChange = (pageNumber: number) => {\n    setPageNumber(pageNumber);\n  };\n\n  useEffect(() => {\n    getFlowsData(bot, pageNumber);\n  }, [pageNumber, lastPage]);\n\n  const getFlowGrid = () => {\n    if (flows.length > 0) {\n      return flows.map((data: FlowType) => {\n        return (\n          <React.Fragment key={data.id}>\n              <div className=\"grid-item\" onClick={ () => handleSelect(data.id, data.name)}>\n                <div className=\"grid-item-wrapper\">\n                <div className=\"grid-item-container\">\n                  <div className=\"image\">\n                  <img src={flowCover} alt=\"Flow Cover\" />\n                  </div>\n                  <div className=\"tag\">\n                    <p>{data.name}</p>\n                  </div>           \n                </div>\n              </div>\n            </div>\n          </React.Fragment>\n        );\n      })\n    } else {\n     return  (<p>There are no other flows or they don't have messages</p>);\n    }\n  }\n\n  return (\n    <ConnectFlowWrapper>\n      <div className=\"modal-body\">\n        <button className=\"modal-exit\" onClick={hideModal}></button>\n        <div className=\"modal-title\">\n         Connect Modal\n        </div>\n        <div className=\"modal-content\">\n          <GridWrapper>\n            <div className=\"grid-row\">\n              {flows && getFlowGrid()}\n            </div>\n          </GridWrapper>\n          {(flows && flows.length > 0) && \n            <Pagination\n            activePage={pageNumber}\n            total={lastPage}\n            onChange={handlePageChange}\n          />}\n        </div>\n      </div>\n    </ConnectFlowWrapper>\n  );\n};\n\nexport default ConnectFlowModal;\n",["404","405"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Toolbar/BtnEditor.tsx",["406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445","446"],"import React, {useState} from 'react';\nimport { BtnEditorWrapper } from './styles';\nimport { useForm } from \"react-hook-form\";\nimport { InputField } from '../../../common/form';\nimport { toast } from 'react-toastify';\nimport { BuilderContext } from '../../../../services/Builder/BuilderProvider';\nimport { updateButton, deleteButton, createAndConnectWithButton } from '../../../../apis/buttons';\nimport Textarea from 'react-expanding-textarea';\nimport { saveMessage } from '../../../../apis/messages';\nimport { S_IFBLK } from 'constants';\nimport { GiButtonFinger } from 'react-icons/gi';\n\n\nconst BtnEditor = ({ flow, handleClose, editorContent }) => {\n  const { register, handleSubmit, errors, setError, setValue } = useForm(); \n  const [builderState, setBuilderState] = React.useContext(BuilderContext);\n  const [nextMessageName, setNextMessageName] = useState(null);\n  const [nextUrl, setNextUrl] = useState(null);\n  const [showUrlField, setShowUrlField] = useState(false);\n\n\n  const onSubmit = data => {\n    updateButton({ name: data.name, url: data.url }, editorContent.id)\n      .then((response) => {\n        if (editorContent.type == 'text') {\n          setBuilderState(\n            builderState.map((message) => {\n              if (message.id == editorContent.messageId) {\n                message.children.map((child) => {\n                  if (child.id == editorContent.childId) {\n                    child.buttons.map((button) => {\n                      if (button.id == editorContent.id) {\n                        button.name = response.data.name\n                        button.url = response.data.url\n                        button.next = response.data.next\n                      }\n                    })\n                  }\n                })\n              }\n              return message;\n            })\n          );\n        } else if (editorContent.type == 'card') {\n          setBuilderState(\n            builderState.map((message) => {\n              if (message.id == editorContent.messageId) {\n                message.children.map((child) => {\n                  if (child.id == editorContent.childId) {\n                    child.cards.map((card) => {\n                      if (card.id == editorContent.activeCardId) {\n                          card.buttons.map((button) => {\n                            if (button.id == editorContent.id) {\n                              button.name = response.data.name\n                            }\n                          })\n                      }\n                    })\n                  }\n                })\n              }\n              return message;\n            })\n          );\n        }\n      }).catch((err) => { \n        if (err.response.status === 422) {\n          if (err.response.data.errors.name) {\n            setError('name', {\n              type: 'server',\n              message: err.response.data.errors.name[0]\n            })\n          } \n          if (err.response.data.errors.url) {\n            setError('url', {\n              type: 'server',\n              message: err.response.data.errors.url[0]\n            })\n          } \n        } else {\n          toast.error('Something went wrong')\n        }\n      }).finally(() => {\n        handleClose();\n      })\n  }\n\n\n  const handleDelete = () => {\n    if (editorContent.type == 'text') {\n      setBuilderState(\n        builderState.map((message, mix) => {\n          if ( message.id == editorContent.messageId) {\n            message.children.map((child, cix) => {\n              if (child.id == editorContent.childId) {\n                const  buttonIndex = builderState[mix].children[cix].buttons.findIndex(\n                  (obj) => obj.id == editorContent.id\n                );\n                child.buttons.splice(buttonIndex, 1)\n              }\n            })\n          }\n          return message;\n        })\n      );\n    } else if (editorContent.type == 'card') {\n      setBuilderState(\n        builderState.map((message, mix) => {\n          if ( message.id == editorContent.messageId) {\n            message.children.map((child, cix) => {\n              if (child.id == editorContent.childId) {\n                child.cards.map((card, aci) => {\n                  if (card.id == editorContent.activeCardId) {\n                    const  buttonIndex = builderState[mix].children[cix].cards[aci].buttons.findIndex(\n                      (obj) => obj.id == editorContent.id\n                    );\n                    card.buttons.splice(buttonIndex, 1)\n                  }\n                })\n              }\n            })\n          }\n          return message;\n        })\n      );\n    }\n    deleteButton(editorContent.id)\n      .then(() => {\n      })\n      .catch((err) => {\n        toast.error(\"Something went wrong\");\n      }).finally(() => {\n        handleClose()\n      });\n  }\n\n  const handleNextMessage = (e) => {\n    e.preventDefault();\n    let number = builderState.length + 1;\n    \n    const newMessage = {\n      name: 'Send Message #' + number,\n      type: 'default',\n      position_x: 1200,\n      position_y: 60,\n      flow: flow\n    };\n    createAndConnectWithButton(newMessage, editorContent.id)\n      .then((response) => {\n        setNextMessageName(response.data.name)\n          setBuilderState(\n            builderState.map((message) => {\n              if (message.id == editorContent.messageId) {\n                message.children.map((child) => {\n                  if (child.id == editorContent.childId) {\n                    if (editorContent.type == 'text') {\n                      child.buttons.forEach((button) => {\n                        if (button.id == editorContent.id) {\n                          button.next = response.data.id\n                          editorContent.next = response.data.id\n                          }\n                        })\n                    } else if (editorContent.type == 'card') {\n                      child.cards.forEach((card) => {\n                          if (card.id == editorContent.activeCardId) {\n                            card.butttons.forEach((button) => {\n                              if (button.id == editorContent.id) {\n                                button.next = response.data.id\n                              }\n                            })\n                          }\n                        })\n                    }\n                  }\n                })\n              }\n              return message;\n            })\n          );\n        setBuilderState([...builderState, response.data]);\n        handleClose();\n        }).catch((err) => {\n          toast.error(\"Something went wrong\")\n        })\n  }\n\n  const handleNextUrl = (e) => {\n    e.preventDefault();\n    setShowUrlField(true);\n  }\n\n  React.useEffect(() => {\n    setValue(\"name\", editorContent.name);\n    var messageName = null;\n    //Set the next message name and url by looping through \n    builderState.forEach((message) => {\n      if (message.id == editorContent.next) {\n        messageName = message.name\n      }\n    });\n\n    setNextMessageName(messageName);\n    setNextUrl(editorContent.url);\n  }, [editorContent.name, nextMessageName, nextUrl])\n\n\n  return (\n    <BtnEditorWrapper position={editorContent.position}>\n      <div className=\"title\">\n        Edit Button\n      </div>\n      <hr />\n      <form className=\"content\" onSubmit={handleSubmit(onSubmit)}>\n        <label>Name</label>\n        <InputField\n          onBlur={handleSubmit(onSubmit)}\n          name=\"name\"\n          id=\"name\"\n          ref={register({ required: true })}\n        />\n        <br/>\n        <label>When the button is clicked</label>\n        {!(showUrlField || nextUrl) && <div className=\"btn-div\" onClick={handleNextMessage}>\n          <div className=\"btn-label\">\n            <h3>Send Message</h3>\n          {nextMessageName && <p>{nextMessageName}</p>}\n          </div>\n          {nextMessageName && <div className=\"remove-btn\">X</div>}\n        </div>}\n        {!nextMessageName && <div className=\"btn-div\" onClick={handleNextUrl}>\n          <div className=\"btn-label\">\n          <h3>Open Website</h3>\n          {nextUrl && <p>{nextUrl}</p>}\n          </div>\n          {nextUrl && <div className=\"remove-btn\">X</div>}\n        </div>}\n        {showUrlField &&\n          <>\n            <label>Web Address</label>\n            <InputField\n            ref={register}\n            name=\"url\"\n            id=\"url\"\n            defaultValue={nextUrl}\n            />\n          </>}\n          <div className=\"bottom\">\n          <button className=\"btn btn-delete\" onClick={(e) => {\n            e.preventDefault();\n            handleDelete()\n          }\n          }>Delete</button>\n        <button type=\"submit\" className=\"btn btn-done\">Done</button>\n      </div>\n      </form>\n     \n    </BtnEditorWrapper>\n  );\n}\n\nexport default BtnEditor;",["447","448"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Card/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Text/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/styles/global.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/App.tsx",["449","450"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/styles/mediaQueries.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Auth/JWTValidator.ts",["451"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/routes/ProtectedRoute.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/auth/ForgotPasswordPage.tsx",["452"],"import React, { useState, useEffect, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport AuthLayout from '../../components/layout/AuthLayout';\nimport { FormHeader, FormSubHeader } from '../../components/common/typography';\nimport { InputField, FormLink } from '../../components/common/form';\nimport { FormButton } from '../../components/common/buttons';\nimport { IoArrowBack } from 'react-icons/io5';\nimport { forgotPassword } from '../../apis/auth';\n\nconst ForgotPassworPage = () => {\n  const [email, setEmail] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isEmailed, setIsEmailed] = useState(false);\n  const [errorMessage, setErrorMessage] = useState({ email: '' });\n\n  const emailRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    emailRef.current && emailRef.current.focus();\n  }, []);\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setIsLoading(true);\n\n    forgotPassword(email)\n      .then((response) => {\n        setIsEmailed(true);\n      })\n      .catch((err) => {\n        if (err.response.status === 422) {\n          setErrorMessage({\n            email: err.response.data.errors.email\n              ? err.response.data.errors.email[0]\n              : '',\n          });\n        }\n      })\n      .finally(() => {\n        setIsLoading(false);\n    })\n  };\n\n  return (\n    <AuthLayout>\n      {!isEmailed && (\n        <form onSubmit={handleSubmit}>\n          <FormHeader>Forgot password?</FormHeader>\n          <FormSubHeader>\n            No worries! We’ll send you secure email to reset your password.\n          </FormSubHeader>\n          <InputField\n            isError={!!errorMessage.email}\n            className=\"last-input\"\n            id=\"email\"\n            placeholder=\"Type your password\"\n            type=\"email\"\n            ref={emailRef}\n            onChange={(e) => {\n              setEmail(e.target.value);\n            }}\n          />\n          {errorMessage.email && (\n            <span className=\"form-error\">{errorMessage.email}</span>\n          )}\n          <FormButton type=\"submit\" disabled={isLoading}>\n            {isLoading ? 'Loading...' : 'Email me'}\n          </FormButton>\n        </form>\n      )}\n      {isEmailed && (\n        <div>\n          <FormHeader>Email is on the way!</FormHeader>\n          <FormSubHeader>\n            We will send you email with the reset password link if (\n            <strong>{email}</strong>) exists in Shipboard.\n          </FormSubHeader>\n        </div>\n      )}\n      <Link to=\"/login\" className=\"go-back\">\n        <IoArrowBack />\n        <h5>Go Back</h5>\n      </Link>\n    </AuthLayout>\n  );\n};\n\nexport default ForgotPassworPage;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Settings/index.tsx",["453"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Modal/ModalProvider.tsx",["454"],"import React, { createContext, useContext, useState } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\ntype ModalStateContextType = {\n  View?: React.FC<{ hideModal: () => void }>;\n  isOpen: boolean;\n  onRequestClose?: () => void;\n};\n\ntype ModalStateModifierContextType = {\n  showModal: (View: React.FC, onRequestClose?: () => void) => void;\n  hideModal: () => void;\n};\n\nconst ModalStateContext = createContext<\n  ModalStateContextType | null | undefined\n>(null);\n\nconst ModalStateModifierContext = createContext<ModalStateModifierContextType>({\n  showModal: () => {},\n  hideModal: () => {},\n});\n\nconst ModalProvider = ({ children }: { children: React.ReactNode }) => {\n  const [modalState, setModalState] = useState<ModalStateContextType | null>();\n  const { isOpen, View, onRequestClose } = modalState || {\n    View: undefined,\n    onRequestClose: undefined,\n  };\n\n  const showModal = (\n    View?: React.FC<{ hideModal: () => void }>,\n    onRequestClose?: () => void\n  ) => {\n    setModalState({ View, isOpen: true, onRequestClose });\n  };\n  const hideModal = () => {\n    setModalState({\n      View: undefined,\n      isOpen: false,\n      onRequestClose: undefined,\n    });\n  };\n  const modalSpring = useSpring({\n    from: { display: 'none' },\n    to: async (next: any) => {\n      if (isOpen) {\n        await next({\n          display: 'block',\n          transform: 'translate(0px,0px)',\n          opacity: 1,\n        });\n      } else {\n        await next({ transform: 'translate(0px,100px)', opacity: 0 });\n        await next({\n          display: 'none',\n        });\n      }\n    },\n  });\n  return (\n    <ModalStateContext.Provider value={modalState}>\n      <ModalStateModifierContext.Provider value={{ showModal, hideModal }}>\n        {children}\n        <ModalWrapper>\n          <animated.div style={modalSpring} className=\"modal\">\n            {View && <View hideModal={hideModal} />}\n          </animated.div>\n        </ModalWrapper>\n      </ModalStateModifierContext.Provider>\n    </ModalStateContext.Provider>\n  );\n};\nModalProvider.propTypes = {\n  children: PropTypes.element,\n};\n\nexport default ModalProvider;\n\nexport const useModal = () => {\n  const context = useContext(ModalStateModifierContext);\n  if (context === undefined) {\n    throw new Error('useModal must be used within a ModalProvider');\n  }\n  return context;\n};\n\nexport const ModalWrapper = styled.div`\n\n  .modal {\n    position: fixed;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100vh;\n    background: rgba(0, 0, 0, 0.7);\n    backdrop-filter: blur(5px);\n    overflow-y: scroll;\n    overflow-x: hidden;\n    padding: 4rem 0;\n    z-index: 10;\n    h1 {\n      padding-bottom: 1rem;\n    }\n    h2 {\n      margin-top: -1rem;\n    }\n    input {\n      margin-bottom: 1rem;\n      margin-top: 1rem;\n    }\n    .last-input {\n      margin-bottom: 3rem;\n    }\n    &-exit {\n      background: rgb(255, 0, 76, 0.7);\n      border-radius: 10rem;\n      border: 0;\n      cursor: pointer;\n      height: 1.5rem;\n      outline: none;\n      padding: 0.5rem;\n      position: absolute;\n      right: 2rem;\n      top: 2rem;\n      width: 1.5rem;\n      &:active {\n        filter: brightness(0.8);\n      }\n    }\n    &-body {\n      align-items: center;\n      background: #ffffff;\n      border-radius: 24px;\n      box-shadow: 0px 4px 24px rgba(0, 0, 0, 0.12);\n      margin: 0 auto;\n      max-width: 40rem;\n      min-height: 25rem;\n      padding: 4rem;\n      position: relative;\n      /* p,\n      h2 {\n        color: black;\n      } */\n    }\n  }\n`;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/form.ts",["455"],"import styled from 'styled-components'\nimport { grey } from '../../styles/theme';\n\nexport const InputField = styled.input<{isError?: boolean}>`\n  background: ${props => props.isError ? '#FFE4E4' : '#F7F7F7'};\n  border-radius: 7px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.1);\n  box-sizing: border-box;\n  min-height: 3.8rem;\n  min-width: 30rem;\n  padding: .8rem;\n  outline: none;\n  font-family: Roboto, sans-serif;\n  font-style: normal;\n  font-weight: 400;\n  font-size: 1.4rem;\n  color: #000;\n  width: 100%;\n\n\n  &:focus {\n    font-weight: 400;\n    box-shadow: 0 0 0 3px rgba(164, 202, 254, 0.45);\n    border-color: #5850EC;\n  }\n\n  &::placeholder {\n    color: #d7d7d7;\n    font-size: 1.2rem;\n  }\n`;\n\nexport const SelectField = styled.select<{isError?: boolean}>`\n  background: ${props => props.isError ? '#FFE4E4' : '#F7F7F7'};\n  border-radius: 7px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.1);\n  box-sizing: border-box;\n  min-height: 3.8rem;\n  min-width: 30rem;\n  padding: .8rem;\n  outline: none;\n  font-family: Roboto, sans-serif;\n  font-style: normal;\n  font-weight: 400;\n  font-size: 1.4rem;\n  color: #000;\n  width: 100%;\n\n\n  &:focus {\n    font-weight: 400;\n    box-shadow: 0 0 0 3px rgba(164, 202, 254, 0.45);\n    border-color: #5850EC;\n  }\n\n  &::placeholder {\n    color: #d7d7d7;\n    font-size: 1.2rem;\n  }\n`;\n\nexport const FormLink = styled.a`\n  text-decoration: none;\n  font-size: 1.2rem;\n  font-family: Roboto, sans-serif;\n  color: #565252;\n\n  &:hover{\n    text-decoration-line: underline;\n    color: #000;\n  }\n`;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/bots.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/layout/AuthLayout.tsx",["456"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport logo from '../../assets/images/logo-dark.png';\nimport { AuthButton } from '../common/buttons';\n\ninterface LayoutProps {\n  children?: any;\n  type?: string;\n}\n\nconst AuthLayout: React.FC<LayoutProps> = (props) => {\n  return (\n    <LayoutWrapper>\n      <nav className=\"logo-bar\">\n        <Link to=\"/\">\n          <img className=\"logo-img\" src={logo} alt=\"Shipboard Logo\" />\n        </Link>\n      </nav>\n      <AuthContainer>\n        <div className=\"card\">{props.children}</div>\n        {/* {props.type === 'login' && (\n          <div className=\"auth-buttons\">\n            <AuthButton>Sign in with Google</AuthButton>\n            <AuthButton>Sign in with Facebook</AuthButton>\n          </div>\n        )} */}\n      </AuthContainer>\n      <FooterWrapper>\n        <p>©Shipbot Pvt. Ltd. 2020. All rights reserved</p>\n      </FooterWrapper>\n    </LayoutWrapper>\n  );\n};\n\nexport default AuthLayout;\n\nconst LayoutWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n  min-width: 50rem;\n  position: relative;\n\n  .logo-bar {\n    align-content: center;\n    display: flex;\n    margin: auto;\n    max-width: 144rem;\n    min-height: 10rem;\n    width: 100%;\n\n    img {\n      height: 4.5rem;\n      margin-top: 2rem;\n    }\n  }\n`;\n\nconst AuthContainer = styled.div`\n  align-content: center;\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  justify-content: center;\n  margin: auto;\n  position: relative;\n\n  .card {\n    align-items: center;\n    background: #ffffff;\n    border-radius: 24px;\n    box-shadow: 0px 4px 24px rgba(0, 0, 0, 0.12);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    margin-top: -10rem;\n    max-width: 40rem;\n    min-height: 30rem;\n    padding: 4rem;\n\n    h1 {\n      padding-bottom: 1rem;\n    }\n\n    h2 {\n      margin-top: -1rem;\n      padding-bottom: 1rem;\n    }\n\n    input {\n      margin-bottom: 1rem;\n      margin-top: 1rem;\n    }\n\n    .last-input {\n      margin-bottom: 3rem;\n    }\n\n    .link {\n      display: flex;\n      justify-content: space-around;\n      margin-top: 1rem;\n      width: 100%;\n    }\n\n    .go-back {\n      align-items: center;\n      align-self: flex-start;\n      color: #000;\n      cursor: pointer;\n      display: flex;\n      margin-top: 1rem;\n      text-decoration: none;\n\n      &:hover{\n        color: #000;\n        text-decoration-line: underline;\n      }\n\n      h5 {\n        font-family: Roboto, sans-serif;\n        font-size: 1.2rem;\n        font-weight: 300;\n      }\n\n      svg {\n        width: 1.5rem;\n        height: 1.5rem;\n      }\n\n      &:hover {\n        h5 {\n          text-decoration: underline;\n        }\n      }\n    }\n  }\n\n  .auth-buttons {\n    margin-left: -5rem;\n    margin-right: -5rem;\n    display: flex;\n    justify-content: space-between;\n    margin-top: 6rem;\n  }\n`;\n\nconst FooterWrapper = styled.footer`\n  bottom: 0rem;\n  font-size: 1.2rem;\n  padding-right: 10rem;\n  position: absolute;\n  text-align: right;\n  width: 100%;\n`;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/CreateModal.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/EditModal.tsx",["457","458"],"import React, { useState, useRef, useEffect } from 'react';\nimport { FormHeader } from '../../common/typography';\nimport { InputField } from '../../common/form';\nimport { FormButton } from '../../common/buttons';\nimport { useForm } from \"react-hook-form\";\nimport { updateBot } from './../../../apis/bots';\nimport { toast } from 'react-toastify';\n\nconst BotEditModal = ({bot, hideModal, handleEditBot }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const { register, handleSubmit, errors, setError } = useForm();  \n\n  const onSubmit = data => {\n    setIsLoading(true);\n    updateBot({ name: data.name }, bot.id)\n      .then((response) => {\n        hideModal();\n        toast.success(response.message);\n        handleEditBot(response.data)\n      }).catch((err) => { \n        if (err.response.status === 422) {\n          if (err.response.data.errors.name) {\n            setError('name', {\n              type: 'server',\n              message: err.response.data.errors.name[0]\n            })\n          } \n        } else {\n          toast.error('Something went wrong')\n        }\n      }).finally(() => { \n        setIsLoading(false);\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"modal-body\">\n        <button className=\"modal-exit\" onClick={hideModal}></button>\n        <div className=\"modal-title\">\n          <FormHeader>Edit Bot</FormHeader>\n        </div>\n        <div className=\"modal-content\">\n          <form className=\"bot-create-form\" onSubmit={handleSubmit(onSubmit)}>\n            <InputField\n              isError={!!errors.name}\n              defaultValue={bot.name}\n              name=\"name\"\n              ref={register({required: true, minLength: 3})}\n            />\n            {errors.name && errors.name.type === 'required' && (<p className=\"form-error\">This field is required</p>)}\n            {errors.name && errors.name.type === 'minLength' && (<p className=\"form-error\">This field is required min length of 3</p>)}\n            {errors.name && errors.name.type === 'server' && (<p className=\"form-error\">{ errors.name.message}</p>)}\n\n            <FormButton type=\"submit\" disabled={isLoading}>\n              {isLoading ? 'Loading...' : 'Save'}\n            </FormButton>\n          </form>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default BotEditModal;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Flows/CreateModal.tsx",["459","460"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/Configure/Slack.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/utils/request.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/constants/urls.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/Pagination/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/feature/index.tsx",["461"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/navbar/index.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/texts.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/footer/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Sidebar/index.tsx",["462","463","464","465","466"],"import React, { useEffect, useRef, Ref } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport logo from '../../../assets/images/logo-light.png';\nimport shortLogo from '../../../assets/images/logo-short.png';\nimport avatar from '../../../assets/images/avatar.jpg';\nimport { AiOutlineDashboard, AiOutlineRobot } from 'react-icons/ai';\nimport { TiFlowMerge } from 'react-icons/ti';\nimport { HiTemplate } from 'react-icons/hi';\nimport { IoSettingsSharp, IoLogOut } from 'react-icons/io5';\nimport { getAuthUser, logOut } from '../../../apis/auth';\nimport { useAuthDispatch } from '../../../services/Auth/AuthProvider';\nimport {\n  SidebarWrapper,\n  SidebarMenu,\n  LogoWrapper,\n  UserInfoWrapper,\n  MenuItem,\n  ToggleBar,\n} from './styles';\nimport { BiChevronsLeft, BiChevronsRight } from 'react-icons/bi';\n\ninterface SidebarProps {\n  handleSidebarState: (isOpen: boolean) => void;\n}\n\nconst Sidebar: React.FC<SidebarProps> = ({ handleSidebarState }) => {\n  const [isOpen, setIsOpen] = React.useState(true);\n  const nameRef = useRef<HTMLHeadingElement>(null);\n  const history = useHistory();\n  const authDispatch = useAuthDispatch();\n\n  useEffect(() => {\n    getAuthUser().then((response) => {\n      var x = document.getElementById('username');\n      if (x) {\n        x.innerHTML = response.data.name;\n      }\n    });\n\n    handleSidebarState(isOpen);\n  }, [isOpen]);\n\n  const handleLogOut = (event: any) => {\n    event.preventDefault();\n    logOut().then((response) => {\n      authDispatch({\n        type: 'LOGOUT',\n      });\n      history.push('/');\n    });\n  };\n\n  return (\n    <SidebarWrapper>\n      <SidebarMenu isOpen={isOpen}>\n        <LogoWrapper>\n          <img src={isOpen ? logo : shortLogo} alt=\"Logo\" />\n        </LogoWrapper>\n        <UserInfoWrapper isOpen={isOpen}>\n          <img src={avatar} alt=\"Avatar\" />\n          <div className=\"user-info\">\n            <h2 ref={nameRef} id=\"username\"></h2>\n            {/* <p>Profile Setting</p> */}\n          </div>\n        </UserInfoWrapper>\n        <div className=\"menu_list\">\n          <div className=\"menu_list-top\">\n            <Link to=\"/app\">\n              <MenuItem isActive isOpen={isOpen}>\n                <AiOutlineDashboard className=\"menu-icon\" />\n                <p>Dashboard</p>\n              </MenuItem>\n            </Link>\n            <Link to=\"/bots\">\n              <MenuItem isOpen={isOpen}>\n                <AiOutlineRobot className=\"menu-icon\" />\n                <p>Bots</p>\n              </MenuItem>\n            </Link>\n            <Link to=\"/templates\">\n              <MenuItem isOpen={isOpen}>\n                <HiTemplate className=\"menu-icon\" />\n                <p>Templates</p>\n              </MenuItem>\n            </Link>\n          </div>\n          <div className=\"menu_list-bottom\">\n            {/* <Link to=\"/settings\">\n              <MenuItem isOpen={isOpen}>\n                <IoSettingsSharp className=\"menu-icon\" />\n                <p>Settings</p>\n              </MenuItem>\n            </Link> */}\n            <MenuItem isOpen={isOpen} onClick={handleLogOut}>\n              <IoLogOut className=\"menu-icon\" />\n              <p>Logout</p>\n            </MenuItem>\n          </div>\n        </div>\n      </SidebarMenu>\n      <ToggleBar onClick={() => setIsOpen(!isOpen)}>\n        {isOpen && <BiChevronsLeft />}\n        {!isOpen && <BiChevronsRight />}\n      </ToggleBar>\n    </SidebarWrapper>\n  );\n};\n\nexport default Sidebar;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Sidebar/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Auth/reducer.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Templates/index.tsx",["467"],"import React from 'react';\nimport AppLayout from '../../../components/layout/AppLayout';\n\nconst Templates = (props: any) => {\n  return <h1 className=\"main-heading\">Templates</h1>;\n};\n\nexport default Templates;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Flows/index.tsx",["468","469","470","471","472"],"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { GridWrapper } from '../../../components/common/grid';\nimport { PrimaryButton } from './../../../components/common/buttons';\nimport { HiDotsVertical } from 'react-icons/hi';\nimport { DropdownWrapper } from '../../../components/common/Dropdown/styles';\nimport { useModal } from '../../../services/Modal/ModalProvider';\nimport { getFlows } from '../../../apis/flows';\nimport {withRouter} from 'react-router-dom'\nimport FlowCreateModal from '../../../components/dashboard/Flows/CreateModal';\nimport FlowEditModal from '../../../components/dashboard/Flows/EditModal';\nimport FlowDeleteModal from '../../../components/dashboard/Flows/DeleteModal';\nimport Pagination from '../../../components/common/Pagination/index';\nimport flowCover from '../../../assets/images/flow-cover.png';\nimport { PlatformWrapper } from './styles';\nimport messengerLogo from '../../../assets/images/platforms/messenger.png';\nimport telegramLogo from '../../../assets/images/platforms/telegram.png';\nimport slackLogo from '../../../assets/images/platforms/slack.png';\nimport MessengerConfigure from '../../../components/dashboard/Bots/Configure/Messenger';\nimport TelegramConfigure from '../../../components/dashboard/Bots/Configure/Telegram';\nimport SlackConfigure from '../../../components/dashboard/Bots/Configure/Slack';\nimport PuffLoader from \"react-spinners/PuffLoader\";\nimport { getPlatformConfigurations } from '../../../apis/bots';\nimport { toast } from 'react-toastify';\n\n\ntype FlowType = {\n  id: string;\n  name: string;\n  last_modified: string;\n};\n\nconst Flows = (props) => {\n  const { showModal, hideModal } = useModal();\n  const [flows, setFlows] = useState<Array<FlowType>>();\n  const [pageNumber, setPageNumber] = useState(1);\n  const [isLoading, setIsLoading] = useState(true);\n  const [lastPage, setLastPage] = useState(1);\n  const [messengerConfigurations, setMessengerConfigurations] = useState(null);\n  const [telegramConfigurations, setTelegramConfigurations] = useState(null);\n  const [slackConfigurations, setSlackConfigurations] = useState(null);\n\n  const botId = props.match.params.id;\n\n  const getFlowsData = (bot:string, pageNumber: number) => {\n    getFlows(bot, pageNumber)\n      .then((response) => {\n        setFlows(response.data);\n        setPageNumber(response.meta.current_page);\n        setLastPage(response.meta.last_page);\n      })\n      .catch((err) => {\n        console.log(\"Something went wrong\");\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n  /**\n   * Flow Operations Starts\n   */\n  const handleCreateOpen = (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => {\n    showModal(() => (\n      <FlowCreateModal bot={botId} hideModal={hideModal} handleCreateFlow={ handleCreateFlow } />\n    ));\n  };\n\n  const handleEditOpen = (data: FlowType) => {\n    showModal(() => (\n      <FlowEditModal hideModal={hideModal} flow={data} handleEditFlow={ handleEditFlow } />\n    ));\n  };\n\n  const handleDeleteConfirmation = (data: FlowType) => {\n    showModal(() => (\n      <FlowDeleteModal hideModal={hideModal} flow={data} handleDeleteFlow={ handleDeleteFlow }/>\n    ));\n  };\n\n  const handlePageChange = (pageNumber: number) => {\n    setPageNumber(pageNumber);\n  };\n\n  const handleCreateFlow = (newFlow: FlowType) => { \n    const newFlowList = flows.concat(newFlow);\n    setFlows(newFlowList)\n  }\n\n  const handleEditFlow = (data) => {\n    const flowId = flows.findIndex(\n      (obj) => obj.id == data.id\n    );\n    setFlows(flows.map((item, index) => {\n      if (index == flowId) {\n        item.name = data.name\n      }\n      return item;\n    }));\n  }\n\n  const handleDeleteFlow = (id) => {\n    const flowId = flows.findIndex(\n      (obj) => obj.id == id\n    );\n    flows.splice(flowId, 1);\n  }\n  /**\n   * Flow Operations Ends\n   */\n\n  /**\n   * Configure Operations Starts\n   */\n\n  const handleMessengerConfigurationUpdate = (config) => {\n    setMessengerConfigurations(config);\n  }\n\n  const handleTelegramConfigurationUpdate = (config) => {\n    setTelegramConfigurations(config);\n  }\n\n  const handleSlackConfigurationUpdate = (config) => {\n    setSlackConfigurations(config);\n  }\n\n  const openMessengerConfigure = () => {\n    showModal(() => (\n      <MessengerConfigure hideModal={hideModal} botId={botId} configuration={ messengerConfigurations } changeConfiguration={handleMessengerConfigurationUpdate} />\n    ));\n  }\n\n  const openTelegramConfigure = () => {\n    showModal(() => (\n      <TelegramConfigure hideModal={hideModal} botId={botId} configuration={ telegramConfigurations } changeConfiguration={handleTelegramConfigurationUpdate}/>\n    ));\n  }\n\n  const openSlackConfigure = () => {\n    showModal(() => (\n      <SlackConfigure hideModal={hideModal} botId={botId} configuration={ slackConfigurations} changeConfiguration={handleSlackConfigurationUpdate}/>\n    ));\n  }\n  /**\n   * Configure Operations Ends\n   */\n  \n  \n  useEffect(() => {\n    getFlowsData(botId, pageNumber);\n  }, [pageNumber, lastPage]);\n\n  useEffect(() => {\n    getPlatformConfigurations(botId)\n      .then((response) => {\n        console.log(response)\n        var indexOfMessengerConfig = response.data.findIndex(config => config.platform === 'messenger');\n        setMessengerConfigurations(response.data[indexOfMessengerConfig]);\n\n        var indexOfTelegramConfig = response.data.findIndex(config => config.platform === 'telegram');\n        setTelegramConfigurations(response.data[indexOfTelegramConfig]);\n\n        var indexOfSlackConfig = response.data.findIndex(config => config.platform === 'slack');\n        setSlackConfigurations(response.data[indexOfSlackConfig]);\n      })\n      .catch((err) => toast.error(\"Something went wrong\"));   \n  }, [])\n\n  if (isLoading) {\n    return (\n      <div className=\"loader-wrapper\">\n          <PuffLoader color={' #5850EC'}  size={75} />\n      </div>\n    );\n  } else {\n    return (\n      <React.Fragment>\n        <div className=\"page-header\">\n          <h1 className=\"main-heading\">Bot Details</h1>\n            <PrimaryButton onClick={handleCreateOpen}>Add Flow</PrimaryButton>\n          </div>\n          <PlatformWrapper>\n            <div className=\"platform_btn\" onClick={openMessengerConfigure}>\n              <img src={messengerLogo} alt=\"Messenger Logo\" />\n              <p>Messenger</p>\n            </div>\n            <div className=\"platform_btn\" onClick={openTelegramConfigure}>\n              <img src={telegramLogo} alt=\"Telegram Logo\" />\n              <p>Telegram</p>\n            </div>\n            <div className=\"platform_btn\" onClick={openSlackConfigure}>\n              <img src={slackLogo} alt=\"Slack Logo\" />\n              <p>Slack</p>\n            </div>\n          </PlatformWrapper>\n          <GridWrapper>\n            <div className=\"grid-row\">\n              {flows && flows.map((data: FlowType) => {\n                return (\n                  <React.Fragment key={data.id}>\n                    <Link to={'flow/' + data.id}>\n                      <div className=\"grid-item\">\n                        <div className=\"grid-item-wrapper\">\n                          <div className=\"grid-item-container\">\n                            <div className=\"image\">\n                              <img src={flowCover} alt=\"Flow Cover\" />\n                            </div>\n                            <div className=\"tag\">\n                              <p>{data.name}</p>\n                              <DropdownWrapper>\n                                <label className=\"dropbtn\">\n                                  <HiDotsVertical />\n                                </label>\n                                <div className=\"dropdown-content\">\n                                  <p\n                                    onClick={(e) => {\n                                      e.preventDefault();\n                                      handleEditOpen(data);\n                                    }}>\n                                    Edit\n                                  </p>\n                                  <p\n                                    onClick={(e) => {\n                                      e.preventDefault();\n                                      handleDeleteConfirmation(data);\n                                    }}>\n                                    Delete\n                                  </p>\n                                </div>\n                              </DropdownWrapper>\n                            </div>           \n                        </div>\n                      </div>\n                    </div>\n                    </Link>\n                  </React.Fragment>\n                );\n              })}\n          </div>\n        </GridWrapper>\n    \n        <Pagination\n          activePage={pageNumber}\n          total={lastPage}\n          onChange={handlePageChange}\n        />\n      </React.Fragment>\n    );\n  }\n};\n\nexport default withRouter(Flows);\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/grid.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Flows/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Flows/DeleteModal.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/Configure/Messenger.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Flows/helper.tsx",["473","474","475"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/utils/pagination.ts",["476"],"export default  (c: number, m: number) => {\n  let current = c,\n    last = m,\n    delta = 2,\n    left = current - delta,\n    right = current + delta + 1,\n    range = [],\n    rangeWithDots = [],\n    l\n\n  for (let i = 1; i <= last; i++) {\n    if (i === 1 || i === last || (i >= left && i < right)) {\n      range.push(i)\n    }\n  }\n\n  for (let i of range) {\n    if (l) {\n      if (i - l === 2) {\n        rangeWithDots.push(l + 1)\n      } else if (i - l !== 1) {\n        rangeWithDots.push(\"...\")\n      }\n    }\n    rangeWithDots.push(i)\n    l = i\n  }\n\n  return rangeWithDots\n}","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/Configure/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/feature/styles.ts",["477"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/navbar/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Modals/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/styles/theme.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/auth/LoginPage.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Bots/index.tsx",["478","479","480","481","482","483","484"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/buttons.ts",["485"],"import styled from 'styled-components';\nimport Toolbar from '../dashboard/builder/Toolbar/index';\n\nexport const StyledButton = styled.button`\n  display:flex;\n  align-items:center;\n  justify-content:center;\n  background: #ffffff;\n  border-radius: 12px 12px 12px 0px;\n  border: 2px solid #5850eb;\n  box-sizing: border-box;\n  cursor: pointer;\n  font-family: Comic Neue, Roboto, sans-serif;\n  font-size: 1.5rem;\n  padding:.9rem;\n  width: 10rem;\n  outline: none;\n`;\n\nexport const PrimaryButton = styled(StyledButton)`\n  background-color: #5850eb;\n  height: 2.5rem;\n  color: #ffffff;\n  margin-right: 0rem;\n  &:focus {\n    background-color: #251DCA\n  }\n`;\n\nexport const FormButton = styled(PrimaryButton)`\n  width: 100%;\n  height: 3.5rem;\n  font-size: 1.6rem;\n  font-weight: 600;\n  margin-top: 1.5rem;\n`;\n\nexport const AuthButton = styled(StyledButton)`\n  width: 20rem;\n  font-size: 1.6rem;\n`;\n\n\nexport const ToolbarButton = styled.button < { height?: string, width?: string, fontSize?: string}>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: ${props => props.height ? props.height : '2rem'};\n  width: ${props => props.width ? props.width : '2rem'};\n  border: none;\n  outline: none;\n  padding: 0;\n  background: #ffffff;\n  color: #8392AB;\n  font-family: Roboto, sans-serif;\n  font-weight: 400;\n  font-size: ${props => props.fontSize ? props.fontSize : '1.6rem'};\n  margin: .8rem;\n  cursor: pointer;\n  background-image: url(\"data:image/svg+xml,%3csvg width='100%25' height='100%25' xmlns='http://www.w3.org/2000/svg'%3e%3crect width='100%25' height='100%25' fill='none' rx='7' ry='7' stroke='%238392ABFF' stroke-width='4' stroke-dasharray='10%2c10' stroke-dashoffset='23' stroke-linecap='round'/%3e%3c/svg%3e\");\n  border-radius: 0px 0px 7px 7px;\n  &:hover {\n    background-image: url(\"data:image/svg+xml,%3csvg width='100%25' height='100%25' xmlns='http://www.w3.org/2000/svg'%3e%3crect width='100%25' height='100%25' fill='none' rx='7' ry='7' stroke='%235850EBFF' stroke-width='4' stroke-dasharray='10%2c10' stroke-dashoffset='23' stroke-linecap='round'/%3e%3c/svg%3e\");\n    color: #5850EB;\n  }\n`;\n\nexport const AddTextButton = styled(ToolbarButton)`\n  margin: 0rem;\n  width: 100%;\n`;\n\nexport const ContentButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 3rem;\n  width:  90%;\n  border: none;\n  padding: 0;\n  background: #E1E5EA;\n  color: black;\n  border: none;\n  outline: none;\n  font-family: Roboto, sans-serif;\n  font-weight: 400;\n  font-size: 1.4rem;\n  margin: .4rem;\n  cursor: pointer;\n  border-radius: 7px;\n`;\n\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/header/index.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/Pagination/index.tsx",["486","487","488","489"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/flows.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Flows/EditModal.tsx",["490","491"],"import React, { useState, useRef, useEffect } from 'react';\nimport { FormHeader } from '../../common/typography';\nimport { InputField } from '../../common/form';\nimport { FormButton } from '../../common/buttons';\nimport { useForm } from \"react-hook-form\";\nimport { updateFlow } from './../../../apis/flows';\nimport { toast } from 'react-toastify';\n\nconst FlowCreateModal = ({flow, hideModal, handleEditFlow}) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const { register, handleSubmit, errors, setError } = useForm();  \n\n  const onSubmit = data => {\n    updateFlow({ name: data.name }, flow.id)\n      .then((response) => {\n        hideModal();\n        toast.success(response.message);\n        handleEditFlow(response.data)\n      }).catch((err) => { \n        if (err.response.status === 422) {\n          if (err.response.data.errors.name) {\n            setError('name', {\n              type: 'server',\n              message: err.response.data.errors.name[0]\n            })\n          } \n        } else {\n          toast.error('Something went wrong')\n        }\n      }).finally(() => { \n        setIsLoading(false);\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"modal-body\">\n        <button className=\"modal-exit\" onClick={hideModal}></button>\n        <div className=\"modal-title\">\n          <FormHeader>Edit Flow</FormHeader>\n        </div>\n        <div className=\"modal-content\">\n          <form className=\"bot-create-form\" onSubmit={handleSubmit(onSubmit)}>\n            <InputField\n              isError={!!errors.name}\n              defaultValue={flow.name}\n              name=\"name\"\n              ref={register({required: true, minLength: 3})}\n            />\n            {errors.name && errors.name.type === 'required' && (<p className=\"form-error\">This field is required</p>)}\n            {errors.name && errors.name.type === 'minLength' && (<p className=\"form-error\">This field is required min length of 3</p>)}\n            {errors.name && errors.name.type === 'server' && (<p className=\"form-error\">{ errors.name.message}</p>)}\n\n            <FormButton type=\"submit\" disabled={isLoading}>\n              {isLoading ? 'Loading...' : 'Save'}\n            </FormButton>\n          </form>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default FlowCreateModal;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/buttons.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Toolbar/index.tsx",["492","493","494","495","496","497","498","499","500","501","502","503"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/cards.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/index.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/utils/storage.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/auth/RegisterPage.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/Configure/Telegram.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/header/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/info/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/images.ts",[],{"ruleId":"504","severity":1,"message":"505","line":4,"column":30,"nodeType":"506","messageId":"507","endLine":4,"endColumn":35},{"ruleId":"504","severity":1,"message":"508","line":44,"column":10,"nodeType":"506","messageId":"507","endLine":44,"endColumn":22},{"ruleId":"504","severity":1,"message":"509","line":46,"column":17,"nodeType":"506","messageId":"507","endLine":46,"endColumn":25},{"ruleId":"510","severity":1,"message":"511","line":56,"column":64,"nodeType":"512","messageId":"513","endLine":56,"endColumn":66},{"ruleId":"510","severity":1,"message":"511","line":57,"column":21,"nodeType":"512","messageId":"513","endLine":57,"endColumn":23},{"ruleId":"510","severity":1,"message":"511","line":310,"column":21,"nodeType":"512","messageId":"513","endLine":310,"endColumn":23},{"ruleId":"510","severity":1,"message":"511","line":313,"column":21,"nodeType":"512","messageId":"513","endLine":313,"endColumn":23},{"ruleId":"510","severity":1,"message":"511","line":322,"column":21,"nodeType":"512","messageId":"513","endLine":322,"endColumn":23},{"ruleId":"510","severity":1,"message":"511","line":336,"column":21,"nodeType":"512","messageId":"513","endLine":336,"endColumn":23},{"ruleId":"510","severity":1,"message":"511","line":339,"column":21,"nodeType":"512","messageId":"513","endLine":339,"endColumn":23},{"ruleId":"510","severity":1,"message":"511","line":348,"column":21,"nodeType":"512","messageId":"513","endLine":348,"endColumn":23},{"ruleId":"510","severity":1,"message":"511","line":360,"column":19,"nodeType":"512","messageId":"513","endLine":360,"endColumn":21},{"ruleId":"510","severity":1,"message":"511","line":377,"column":23,"nodeType":"512","messageId":"513","endLine":377,"endColumn":25},{"ruleId":"510","severity":1,"message":"511","line":397,"column":23,"nodeType":"512","messageId":"513","endLine":397,"endColumn":25},{"ruleId":"510","severity":1,"message":"511","line":399,"column":28,"nodeType":"512","messageId":"513","endLine":399,"endColumn":30},{"ruleId":"510","severity":1,"message":"511","line":400,"column":26,"nodeType":"512","messageId":"513","endLine":400,"endColumn":28},{"ruleId":"510","severity":1,"message":"511","line":402,"column":35,"nodeType":"512","messageId":"513","endLine":402,"endColumn":37},{"ruleId":"510","severity":1,"message":"511","line":407,"column":33,"nodeType":"512","messageId":"513","endLine":407,"endColumn":35},{"ruleId":"514","severity":1,"message":"515","line":409,"column":47,"nodeType":"516","messageId":"517","endLine":409,"endColumn":49},{"ruleId":"510","severity":1,"message":"511","line":410,"column":29,"nodeType":"512","messageId":"513","endLine":410,"endColumn":31},{"ruleId":"510","severity":1,"message":"511","line":412,"column":39,"nodeType":"512","messageId":"513","endLine":412,"endColumn":41},{"ruleId":"510","severity":1,"message":"518","line":446,"column":30,"nodeType":"512","messageId":"513","endLine":446,"endColumn":32},{"ruleId":"510","severity":1,"message":"511","line":453,"column":31,"nodeType":"512","messageId":"513","endLine":453,"endColumn":33},{"ruleId":"510","severity":1,"message":"511","line":470,"column":31,"nodeType":"512","messageId":"513","endLine":470,"endColumn":33},{"ruleId":"514","severity":1,"message":"515","line":471,"column":47,"nodeType":"516","messageId":"517","endLine":471,"endColumn":49},{"ruleId":"510","severity":1,"message":"511","line":472,"column":36,"nodeType":"512","messageId":"513","endLine":472,"endColumn":38},{"ruleId":"514","severity":1,"message":"515","line":473,"column":52,"nodeType":"516","messageId":"517","endLine":473,"endColumn":54},{"ruleId":"510","severity":1,"message":"511","line":474,"column":41,"nodeType":"512","messageId":"513","endLine":474,"endColumn":43},{"ruleId":"510","severity":1,"message":"511","line":524,"column":26,"nodeType":"512","messageId":"513","endLine":524,"endColumn":28},{"ruleId":"514","severity":1,"message":"515","line":527,"column":38,"nodeType":"516","messageId":"517","endLine":527,"endColumn":40},{"ruleId":"510","severity":1,"message":"511","line":528,"column":26,"nodeType":"512","messageId":"513","endLine":528,"endColumn":28},{"ruleId":"514","severity":1,"message":"515","line":529,"column":40,"nodeType":"516","messageId":"517","endLine":529,"endColumn":42},{"ruleId":"510","severity":1,"message":"511","line":530,"column":31,"nodeType":"512","messageId":"513","endLine":530,"endColumn":33},{"ruleId":"510","severity":1,"message":"511","line":561,"column":17,"nodeType":"512","messageId":"513","endLine":561,"endColumn":19},{"ruleId":"510","severity":1,"message":"511","line":595,"column":27,"nodeType":"512","messageId":"513","endLine":595,"endColumn":29},{"ruleId":"510","severity":1,"message":"511","line":612,"column":27,"nodeType":"512","messageId":"513","endLine":612,"endColumn":29},{"ruleId":"510","severity":1,"message":"511","line":614,"column":32,"nodeType":"512","messageId":"513","endLine":614,"endColumn":34},{"ruleId":"510","severity":1,"message":"511","line":616,"column":37,"nodeType":"512","messageId":"513","endLine":616,"endColumn":39},{"ruleId":"510","severity":1,"message":"511","line":654,"column":25,"nodeType":"512","messageId":"513","endLine":654,"endColumn":27},{"ruleId":"510","severity":1,"message":"511","line":672,"column":27,"nodeType":"512","messageId":"513","endLine":672,"endColumn":29},{"ruleId":"510","severity":1,"message":"511","line":674,"column":32,"nodeType":"512","messageId":"513","endLine":674,"endColumn":34},{"ruleId":"510","severity":1,"message":"511","line":676,"column":37,"nodeType":"512","messageId":"513","endLine":676,"endColumn":39},{"ruleId":"510","severity":1,"message":"511","line":705,"column":23,"nodeType":"512","messageId":"513","endLine":705,"endColumn":25},{"ruleId":"510","severity":1,"message":"511","line":715,"column":25,"nodeType":"512","messageId":"513","endLine":715,"endColumn":27},{"ruleId":"510","severity":1,"message":"511","line":717,"column":30,"nodeType":"512","messageId":"513","endLine":717,"endColumn":32},{"ruleId":"510","severity":1,"message":"511","line":719,"column":35,"nodeType":"512","messageId":"513","endLine":719,"endColumn":37},{"ruleId":"519","severity":1,"message":"520","line":763,"column":6,"nodeType":"521","endLine":763,"endColumn":8,"suggestions":"522"},{"ruleId":"510","severity":1,"message":"511","line":1062,"column":19,"nodeType":"512","messageId":"513","endLine":1062,"endColumn":21},{"ruleId":"510","severity":1,"message":"511","line":1064,"column":26,"nodeType":"512","messageId":"513","endLine":1064,"endColumn":28},{"ruleId":"510","severity":1,"message":"511","line":1132,"column":19,"nodeType":"512","messageId":"513","endLine":1132,"endColumn":21},{"ruleId":"510","severity":1,"message":"511","line":1134,"column":26,"nodeType":"512","messageId":"513","endLine":1134,"endColumn":28},{"ruleId":"510","severity":1,"message":"511","line":1139,"column":19,"nodeType":"512","messageId":"513","endLine":1139,"endColumn":21},{"ruleId":"510","severity":1,"message":"511","line":1141,"column":26,"nodeType":"512","messageId":"513","endLine":1141,"endColumn":28},{"ruleId":"510","severity":1,"message":"511","line":1150,"column":50,"nodeType":"512","messageId":"513","endLine":1150,"endColumn":52},{"ruleId":"504","severity":1,"message":"523","line":1153,"column":7,"nodeType":"506","messageId":"507","endLine":1153,"endColumn":50},{"ruleId":"510","severity":1,"message":"511","line":1154,"column":44,"nodeType":"512","messageId":"513","endLine":1154,"endColumn":46},{"ruleId":"510","severity":1,"message":"511","line":1159,"column":47,"nodeType":"512","messageId":"513","endLine":1159,"endColumn":49},{"ruleId":"524","replacedBy":"525"},{"ruleId":"526","replacedBy":"527"},{"ruleId":"504","severity":1,"message":"528","line":11,"column":16,"nodeType":"506","messageId":"507","endLine":11,"endColumn":22},{"ruleId":"510","severity":1,"message":"511","line":24,"column":21,"nodeType":"512","messageId":"513","endLine":24,"endColumn":23},{"ruleId":"510","severity":1,"message":"511","line":35,"column":21,"nodeType":"512","messageId":"513","endLine":35,"endColumn":23},{"ruleId":"514","severity":1,"message":"515","line":36,"column":44,"nodeType":"516","messageId":"517","endLine":36,"endColumn":46},{"ruleId":"510","severity":1,"message":"511","line":37,"column":23,"nodeType":"512","messageId":"513","endLine":37,"endColumn":25},{"ruleId":"510","severity":1,"message":"511","line":57,"column":23,"nodeType":"512","messageId":"513","endLine":57,"endColumn":25},{"ruleId":"510","severity":1,"message":"511","line":79,"column":21,"nodeType":"512","messageId":"513","endLine":79,"endColumn":23},{"ruleId":"514","severity":1,"message":"515","line":80,"column":39,"nodeType":"516","messageId":"517","endLine":80,"endColumn":41},{"ruleId":"510","severity":1,"message":"511","line":81,"column":28,"nodeType":"512","messageId":"513","endLine":81,"endColumn":30},{"ruleId":"519","severity":1,"message":"529","line":98,"column":6,"nodeType":"521","endLine":98,"endColumn":8,"suggestions":"530"},{"ruleId":"524","replacedBy":"531"},{"ruleId":"526","replacedBy":"532"},{"ruleId":"524","replacedBy":"533"},{"ruleId":"526","replacedBy":"534"},{"ruleId":"504","severity":1,"message":"528","line":7,"column":16,"nodeType":"506","messageId":"507","endLine":7,"endColumn":22},{"ruleId":"504","severity":1,"message":"535","line":27,"column":9,"nodeType":"506","messageId":"507","endLine":27,"endColumn":19},{"ruleId":"510","severity":1,"message":"511","line":34,"column":21,"nodeType":"512","messageId":"513","endLine":34,"endColumn":23},{"ruleId":"510","severity":1,"message":"511","line":44,"column":25,"nodeType":"512","messageId":"513","endLine":44,"endColumn":27},{"ruleId":"510","severity":1,"message":"518","line":55,"column":25,"nodeType":"512","messageId":"513","endLine":55,"endColumn":27},{"ruleId":"510","severity":1,"message":"511","line":70,"column":23,"nodeType":"512","messageId":"513","endLine":70,"endColumn":25},{"ruleId":"514","severity":1,"message":"515","line":71,"column":49,"nodeType":"516","messageId":"517","endLine":71,"endColumn":51},{"ruleId":"510","severity":1,"message":"511","line":72,"column":25,"nodeType":"512","messageId":"513","endLine":72,"endColumn":27},{"ruleId":"510","severity":1,"message":"511","line":75,"column":29,"nodeType":"512","messageId":"513","endLine":75,"endColumn":31},{"ruleId":"510","severity":1,"message":"511","line":94,"column":21,"nodeType":"512","messageId":"513","endLine":94,"endColumn":23},{"ruleId":"510","severity":1,"message":"511","line":96,"column":23,"nodeType":"512","messageId":"513","endLine":96,"endColumn":25},{"ruleId":"510","severity":1,"message":"511","line":98,"column":27,"nodeType":"512","messageId":"513","endLine":98,"endColumn":29},{"ruleId":"510","severity":1,"message":"511","line":101,"column":27,"nodeType":"512","messageId":"513","endLine":101,"endColumn":29},{"ruleId":"510","severity":1,"message":"511","line":117,"column":48,"nodeType":"512","messageId":"513","endLine":117,"endColumn":50},{"ruleId":"510","severity":1,"message":"511","line":130,"column":28,"nodeType":"512","messageId":"513","endLine":130,"endColumn":30},{"ruleId":"510","severity":1,"message":"511","line":146,"column":23,"nodeType":"512","messageId":"513","endLine":146,"endColumn":25},{"ruleId":"510","severity":1,"message":"511","line":148,"column":25,"nodeType":"512","messageId":"513","endLine":148,"endColumn":27},{"ruleId":"510","severity":1,"message":"511","line":150,"column":27,"nodeType":"512","messageId":"513","endLine":150,"endColumn":29},{"ruleId":"510","severity":1,"message":"511","line":182,"column":21,"nodeType":"512","messageId":"513","endLine":182,"endColumn":23},{"ruleId":"514","severity":1,"message":"515","line":183,"column":44,"nodeType":"516","messageId":"517","endLine":183,"endColumn":46},{"ruleId":"510","severity":1,"message":"511","line":184,"column":23,"nodeType":"512","messageId":"513","endLine":184,"endColumn":25},{"ruleId":"514","severity":1,"message":"515","line":185,"column":43,"nodeType":"516","messageId":"517","endLine":185,"endColumn":45},{"ruleId":"510","severity":1,"message":"511","line":186,"column":25,"nodeType":"512","messageId":"513","endLine":186,"endColumn":27},{"ruleId":"510","severity":1,"message":"511","line":213,"column":21,"nodeType":"512","messageId":"513","endLine":213,"endColumn":23},{"ruleId":"514","severity":1,"message":"515","line":214,"column":44,"nodeType":"516","messageId":"517","endLine":214,"endColumn":46},{"ruleId":"510","severity":1,"message":"511","line":215,"column":23,"nodeType":"512","messageId":"513","endLine":215,"endColumn":25},{"ruleId":"514","severity":1,"message":"515","line":216,"column":43,"nodeType":"516","messageId":"517","endLine":216,"endColumn":45},{"ruleId":"510","severity":1,"message":"511","line":217,"column":25,"nodeType":"512","messageId":"513","endLine":217,"endColumn":27},{"ruleId":"510","severity":1,"message":"511","line":245,"column":21,"nodeType":"512","messageId":"513","endLine":245,"endColumn":23},{"ruleId":"514","severity":1,"message":"515","line":246,"column":39,"nodeType":"516","messageId":"517","endLine":246,"endColumn":41},{"ruleId":"510","severity":1,"message":"511","line":247,"column":28,"nodeType":"512","messageId":"513","endLine":247,"endColumn":30},{"ruleId":"514","severity":1,"message":"515","line":248,"column":45,"nodeType":"516","messageId":"517","endLine":248,"endColumn":47},{"ruleId":"510","severity":1,"message":"511","line":249,"column":35,"nodeType":"512","messageId":"513","endLine":249,"endColumn":37},{"ruleId":"510","severity":1,"message":"511","line":268,"column":21,"nodeType":"512","messageId":"513","endLine":268,"endColumn":23},{"ruleId":"519","severity":1,"message":"529","line":284,"column":6,"nodeType":"521","endLine":284,"endColumn":23,"suggestions":"536"},{"ruleId":"514","severity":1,"message":"537","line":297,"column":70,"nodeType":"516","messageId":"538","endLine":297,"endColumn":72},{"ruleId":"539","severity":1,"message":"540","line":305,"column":23,"nodeType":"541","endLine":305,"endColumn":74},{"ruleId":"504","severity":1,"message":"542","line":5,"column":10,"nodeType":"506","messageId":"507","endLine":5,"endColumn":23},{"ruleId":"510","severity":1,"message":"511","line":18,"column":21,"nodeType":"512","messageId":"513","endLine":18,"endColumn":23},{"ruleId":"510","severity":1,"message":"511","line":35,"column":23,"nodeType":"512","messageId":"513","endLine":35,"endColumn":25},{"ruleId":"514","severity":1,"message":"515","line":36,"column":46,"nodeType":"516","messageId":"517","endLine":36,"endColumn":48},{"ruleId":"510","severity":1,"message":"511","line":37,"column":25,"nodeType":"512","messageId":"513","endLine":37,"endColumn":27},{"ruleId":"510","severity":1,"message":"511","line":59,"column":21,"nodeType":"512","messageId":"513","endLine":59,"endColumn":23},{"ruleId":"539","severity":1,"message":"540","line":82,"column":11,"nodeType":"541","endLine":82,"endColumn":58},{"ruleId":"504","severity":1,"message":"543","line":2,"column":10,"nodeType":"506","messageId":"507","endLine":2,"endColumn":15},{"ruleId":"504","severity":1,"message":"544","line":18,"column":10,"nodeType":"506","messageId":"507","endLine":18,"endColumn":19},{"ruleId":"510","severity":1,"message":"518","line":24,"column":77,"nodeType":"512","messageId":"513","endLine":24,"endColumn":79},{"ruleId":"519","severity":1,"message":"545","line":44,"column":6,"nodeType":"521","endLine":44,"endColumn":28,"suggestions":"546"},{"ruleId":"524","replacedBy":"547"},{"ruleId":"526","replacedBy":"548"},{"ruleId":"504","severity":1,"message":"549","line":8,"column":8,"nodeType":"506","messageId":"507","endLine":8,"endColumn":16},{"ruleId":"504","severity":1,"message":"550","line":9,"column":10,"nodeType":"506","messageId":"507","endLine":9,"endColumn":21},{"ruleId":"504","severity":1,"message":"551","line":10,"column":10,"nodeType":"506","messageId":"507","endLine":10,"endColumn":17},{"ruleId":"504","severity":1,"message":"552","line":11,"column":10,"nodeType":"506","messageId":"507","endLine":11,"endColumn":24},{"ruleId":"504","severity":1,"message":"553","line":15,"column":35,"nodeType":"506","messageId":"507","endLine":15,"endColumn":41},{"ruleId":"510","severity":1,"message":"511","line":25,"column":32,"nodeType":"512","messageId":"513","endLine":25,"endColumn":34},{"ruleId":"510","severity":1,"message":"511","line":28,"column":30,"nodeType":"512","messageId":"513","endLine":28,"endColumn":32},{"ruleId":"514","severity":1,"message":"515","line":29,"column":46,"nodeType":"516","messageId":"517","endLine":29,"endColumn":48},{"ruleId":"510","severity":1,"message":"511","line":30,"column":32,"nodeType":"512","messageId":"513","endLine":30,"endColumn":34},{"ruleId":"514","severity":1,"message":"515","line":31,"column":48,"nodeType":"516","messageId":"517","endLine":31,"endColumn":50},{"ruleId":"510","severity":1,"message":"511","line":32,"column":37,"nodeType":"512","messageId":"513","endLine":32,"endColumn":39},{"ruleId":"510","severity":1,"message":"511","line":44,"column":39,"nodeType":"512","messageId":"513","endLine":44,"endColumn":41},{"ruleId":"510","severity":1,"message":"511","line":47,"column":30,"nodeType":"512","messageId":"513","endLine":47,"endColumn":32},{"ruleId":"514","severity":1,"message":"515","line":48,"column":46,"nodeType":"516","messageId":"517","endLine":48,"endColumn":48},{"ruleId":"510","severity":1,"message":"511","line":49,"column":32,"nodeType":"512","messageId":"513","endLine":49,"endColumn":34},{"ruleId":"514","severity":1,"message":"515","line":50,"column":44,"nodeType":"516","messageId":"517","endLine":50,"endColumn":46},{"ruleId":"510","severity":1,"message":"511","line":51,"column":35,"nodeType":"512","messageId":"513","endLine":51,"endColumn":37},{"ruleId":"514","severity":1,"message":"515","line":52,"column":53,"nodeType":"516","messageId":"517","endLine":52,"endColumn":55},{"ruleId":"510","severity":1,"message":"511","line":53,"column":43,"nodeType":"512","messageId":"513","endLine":53,"endColumn":45},{"ruleId":"510","severity":1,"message":"511","line":90,"column":28,"nodeType":"512","messageId":"513","endLine":90,"endColumn":30},{"ruleId":"510","severity":1,"message":"511","line":93,"column":27,"nodeType":"512","messageId":"513","endLine":93,"endColumn":29},{"ruleId":"514","severity":1,"message":"515","line":94,"column":47,"nodeType":"516","messageId":"517","endLine":94,"endColumn":49},{"ruleId":"510","severity":1,"message":"511","line":95,"column":28,"nodeType":"512","messageId":"513","endLine":95,"endColumn":30},{"ruleId":"510","severity":1,"message":"511","line":97,"column":35,"nodeType":"512","messageId":"513","endLine":97,"endColumn":37},{"ruleId":"510","severity":1,"message":"511","line":106,"column":35,"nodeType":"512","messageId":"513","endLine":106,"endColumn":37},{"ruleId":"510","severity":1,"message":"511","line":109,"column":27,"nodeType":"512","messageId":"513","endLine":109,"endColumn":29},{"ruleId":"514","severity":1,"message":"515","line":110,"column":47,"nodeType":"516","messageId":"517","endLine":110,"endColumn":49},{"ruleId":"510","severity":1,"message":"511","line":111,"column":28,"nodeType":"512","messageId":"513","endLine":111,"endColumn":30},{"ruleId":"514","severity":1,"message":"515","line":112,"column":45,"nodeType":"516","messageId":"517","endLine":112,"endColumn":47},{"ruleId":"510","severity":1,"message":"511","line":113,"column":31,"nodeType":"512","messageId":"513","endLine":113,"endColumn":33},{"ruleId":"510","severity":1,"message":"511","line":115,"column":39,"nodeType":"512","messageId":"513","endLine":115,"endColumn":41},{"ruleId":"510","severity":1,"message":"511","line":153,"column":30,"nodeType":"512","messageId":"513","endLine":153,"endColumn":32},{"ruleId":"514","severity":1,"message":"515","line":154,"column":46,"nodeType":"516","messageId":"517","endLine":154,"endColumn":48},{"ruleId":"510","severity":1,"message":"511","line":155,"column":32,"nodeType":"512","messageId":"513","endLine":155,"endColumn":34},{"ruleId":"510","severity":1,"message":"511","line":156,"column":44,"nodeType":"512","messageId":"513","endLine":156,"endColumn":46},{"ruleId":"510","severity":1,"message":"511","line":158,"column":39,"nodeType":"512","messageId":"513","endLine":158,"endColumn":41},{"ruleId":"510","severity":1,"message":"511","line":163,"column":51,"nodeType":"512","messageId":"513","endLine":163,"endColumn":53},{"ruleId":"510","severity":1,"message":"511","line":165,"column":39,"nodeType":"512","messageId":"513","endLine":165,"endColumn":41},{"ruleId":"510","severity":1,"message":"511","line":167,"column":45,"nodeType":"512","messageId":"513","endLine":167,"endColumn":47},{"ruleId":"510","severity":1,"message":"511","line":197,"column":22,"nodeType":"512","messageId":"513","endLine":197,"endColumn":24},{"ruleId":"519","severity":1,"message":"554","line":204,"column":6,"nodeType":"521","endLine":204,"endColumn":52,"suggestions":"555"},{"ruleId":"524","replacedBy":"556"},{"ruleId":"526","replacedBy":"557"},{"ruleId":"504","severity":1,"message":"558","line":20,"column":8,"nodeType":"506","messageId":"507","endLine":20,"endColumn":17},{"ruleId":"504","severity":1,"message":"559","line":23,"column":9,"nodeType":"506","messageId":"507","endLine":23,"endColumn":20},{"ruleId":"560","severity":1,"message":"561","line":3,"column":1,"nodeType":"562","endLine":12,"endColumn":3},{"ruleId":"504","severity":1,"message":"563","line":5,"column":22,"nodeType":"506","messageId":"507","endLine":5,"endColumn":30},{"ruleId":"504","severity":1,"message":"558","line":2,"column":8,"nodeType":"506","messageId":"507","endLine":2,"endColumn":17},{"ruleId":"504","severity":1,"message":"564","line":28,"column":25,"nodeType":"506","messageId":"507","endLine":28,"endColumn":39},{"ruleId":"504","severity":1,"message":"565","line":2,"column":10,"nodeType":"506","messageId":"507","endLine":2,"endColumn":14},{"ruleId":"504","severity":1,"message":"566","line":5,"column":10,"nodeType":"506","messageId":"507","endLine":5,"endColumn":20},{"ruleId":"504","severity":1,"message":"567","line":1,"column":27,"nodeType":"506","messageId":"507","endLine":1,"endColumn":33},{"ruleId":"504","severity":1,"message":"568","line":1,"column":35,"nodeType":"506","messageId":"507","endLine":1,"endColumn":44},{"ruleId":"504","severity":1,"message":"567","line":1,"column":27,"nodeType":"506","messageId":"507","endLine":1,"endColumn":33},{"ruleId":"504","severity":1,"message":"568","line":1,"column":35,"nodeType":"506","messageId":"507","endLine":1,"endColumn":44},{"ruleId":"504","severity":1,"message":"569","line":10,"column":8,"nodeType":"506","messageId":"507","endLine":10,"endColumn":16},{"ruleId":"504","severity":1,"message":"570","line":1,"column":36,"nodeType":"506","messageId":"507","endLine":1,"endColumn":39},{"ruleId":"504","severity":1,"message":"571","line":7,"column":10,"nodeType":"506","messageId":"507","endLine":7,"endColumn":21},{"ruleId":"504","severity":1,"message":"572","line":9,"column":10,"nodeType":"506","messageId":"507","endLine":9,"endColumn":25},{"ruleId":"519","severity":1,"message":"573","line":41,"column":6,"nodeType":"521","endLine":41,"endColumn":14,"suggestions":"574"},{"ruleId":"575","severity":1,"message":"576","line":62,"column":13,"nodeType":"541","endLine":62,"endColumn":45},{"ruleId":"504","severity":1,"message":"558","line":2,"column":8,"nodeType":"506","messageId":"507","endLine":2,"endColumn":17},{"ruleId":"510","severity":1,"message":"511","line":93,"column":23,"nodeType":"512","messageId":"513","endLine":93,"endColumn":25},{"ruleId":"510","severity":1,"message":"511","line":96,"column":17,"nodeType":"512","messageId":"513","endLine":96,"endColumn":19},{"ruleId":"510","severity":1,"message":"511","line":105,"column":23,"nodeType":"512","messageId":"513","endLine":105,"endColumn":25},{"ruleId":"519","severity":1,"message":"577","line":153,"column":6,"nodeType":"521","endLine":153,"endColumn":28,"suggestions":"578"},{"ruleId":"519","severity":1,"message":"577","line":169,"column":6,"nodeType":"521","endLine":169,"endColumn":8,"suggestions":"579"},{"ruleId":"504","severity":1,"message":"580","line":2,"column":43,"nodeType":"506","messageId":"507","endLine":2,"endColumn":49},{"ruleId":"510","severity":1,"message":"511","line":109,"column":56,"nodeType":"512","messageId":"513","endLine":109,"endColumn":58},{"ruleId":"504","severity":1,"message":"581","line":233,"column":7,"nodeType":"506","messageId":"507","endLine":233,"endColumn":17},{"ruleId":"560","severity":1,"message":"561","line":1,"column":1,"nodeType":"562","endLine":30,"endColumn":2},{"ruleId":"504","severity":1,"message":"582","line":2,"column":10,"nodeType":"506","messageId":"507","endLine":2,"endColumn":20},{"ruleId":"504","severity":1,"message":"583","line":2,"column":27,"nodeType":"506","messageId":"507","endLine":2,"endColumn":33},{"ruleId":"504","severity":1,"message":"584","line":2,"column":41,"nodeType":"506","messageId":"507","endLine":2,"endColumn":46},{"ruleId":"504","severity":1,"message":"585","line":2,"column":48,"nodeType":"506","messageId":"507","endLine":2,"endColumn":54},{"ruleId":"504","severity":1,"message":"586","line":14,"column":8,"nodeType":"506","messageId":"507","endLine":14,"endColumn":20},{"ruleId":"510","severity":1,"message":"511","line":83,"column":23,"nodeType":"512","messageId":"513","endLine":83,"endColumn":25},{"ruleId":"510","severity":1,"message":"511","line":86,"column":17,"nodeType":"512","messageId":"513","endLine":86,"endColumn":19},{"ruleId":"510","severity":1,"message":"511","line":95,"column":23,"nodeType":"512","messageId":"513","endLine":95,"endColumn":25},{"ruleId":"504","severity":1,"message":"587","line":2,"column":8,"nodeType":"506","messageId":"507","endLine":2,"endColumn":15},{"ruleId":"504","severity":1,"message":"588","line":1,"column":17,"nodeType":"506","messageId":"507","endLine":1,"endColumn":25},{"ruleId":"504","severity":1,"message":"568","line":1,"column":27,"nodeType":"506","messageId":"507","endLine":1,"endColumn":36},{"ruleId":"510","severity":1,"message":"518","line":20,"column":34,"nodeType":"512","messageId":"513","endLine":20,"endColumn":36},{"ruleId":"510","severity":1,"message":"518","line":47,"column":34,"nodeType":"512","messageId":"513","endLine":47,"endColumn":36},{"ruleId":"504","severity":1,"message":"567","line":1,"column":27,"nodeType":"506","messageId":"507","endLine":1,"endColumn":33},{"ruleId":"504","severity":1,"message":"568","line":1,"column":35,"nodeType":"506","messageId":"507","endLine":1,"endColumn":44},{"ruleId":"504","severity":1,"message":"567","line":1,"column":39,"nodeType":"506","messageId":"507","endLine":1,"endColumn":45},{"ruleId":"504","severity":1,"message":"568","line":1,"column":47,"nodeType":"506","messageId":"507","endLine":1,"endColumn":56},{"ruleId":"504","severity":1,"message":"589","line":3,"column":59,"nodeType":"506","messageId":"507","endLine":3,"endColumn":75},{"ruleId":"510","severity":1,"message":"511","line":52,"column":59,"nodeType":"512","messageId":"513","endLine":52,"endColumn":61},{"ruleId":"510","severity":1,"message":"511","line":60,"column":19,"nodeType":"512","messageId":"513","endLine":60,"endColumn":21},{"ruleId":"510","severity":1,"message":"511","line":84,"column":21,"nodeType":"512","messageId":"513","endLine":84,"endColumn":23},{"ruleId":"510","severity":1,"message":"511","line":101,"column":21,"nodeType":"512","messageId":"513","endLine":101,"endColumn":23},{"ruleId":"519","severity":1,"message":"590","line":111,"column":6,"nodeType":"521","endLine":111,"endColumn":35,"suggestions":"591"},{"ruleId":"519","severity":1,"message":"592","line":111,"column":7,"nodeType":"593","endLine":111,"endColumn":34},{"ruleId":"510","severity":1,"message":"511","line":223,"column":19,"nodeType":"512","messageId":"513","endLine":223,"endColumn":21},{"ruleId":"510","severity":1,"message":"511","line":249,"column":19,"nodeType":"512","messageId":"513","endLine":249,"endColumn":21},{"ruleId":"510","severity":1,"message":"511","line":272,"column":19,"nodeType":"512","messageId":"513","endLine":272,"endColumn":21},"@typescript-eslint/no-unused-vars","'Image' is defined but never used.","Identifier","unusedVar","'isPublishing' is assigned a value but never used.","'setState' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Expected '!==' and instead saw '!='.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'props.match.params.id' and 'setBuilderState'. Either include them or remove the dependency array.","ArrayExpression",["594"],"'getMessageIndexWhichHasNextOfGivenMessageId' is assigned a value but never used.","no-native-reassign",["595"],"no-negated-in-lhs",["596"],"'uuidv4' is defined but never used.","React Hook useEffect has a missing dependency: 'register'. Either include it or remove the dependency array.",["597"],["595"],["596"],["595"],["596"],"'headingRef' is assigned a value but never used.",["598"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'AddTextButton' is defined but never used.","'toast' is defined but never used.","'isLoading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'bot' and 'getFlowsData'. Either include them or remove the dependency array.",["599"],["595"],["596"],"'Textarea' is defined but never used.","'saveMessage' is defined but never used.","'S_IFBLK' is defined but never used.","'GiButtonFinger' is defined but never used.","'errors' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'builderState', 'editorContent.next', 'editorContent.url', and 'setValue'. Either include them or remove the dependency array. If 'setNextUrl' needs the current value of 'editorContent.url', you can also switch to useReducer instead of useState and read 'editorContent.url' in the reducer.",["600"],["595"],["596"],"'AppLayout' is defined but never used.","'authContext' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'FormLink' is defined but never used.","'onRequestClose' is assigned a value but never used.","'grey' is defined but never used.","'AuthButton' is defined but never used.","'useRef' is defined but never used.","'useEffect' is defined but never used.","'feature2' is defined but never used.","'Ref' is defined but never used.","'TiFlowMerge' is defined but never used.","'IoSettingsSharp' is defined but never used.","React Hook useEffect has a missing dependency: 'handleSidebarState'. Either include it or remove the dependency array. If 'handleSidebarState' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["601"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","React Hook useEffect has a missing dependency: 'botId'. Either include it or remove the dependency array.",["602"],["603"],"'Circle' is defined but never used.","'onTouchEnd' is assigned a value but never used.","'darkerGrey' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'ConfigureBot' is defined but never used.","'Toolbar' is defined but never used.","'useState' is defined but never used.","'BtnEditorWrapper' is defined but never used.","React Hook React.useEffect has missing dependencies: 'builderState', 'objIndex', and 'setValue'. Either include them or remove the dependency array.",["604"],"React Hook React.useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","MemberExpression",{"desc":"605","fix":"606"},"no-global-assign","no-unsafe-negation",{"desc":"607","fix":"608"},{"desc":"609","fix":"610"},{"desc":"611","fix":"612"},{"desc":"613","fix":"614"},{"desc":"615","fix":"616"},{"desc":"617","fix":"618"},{"desc":"619","fix":"620"},{"desc":"621","fix":"622"},"Update the dependencies array to be: [props.match.params.id, setBuilderState]",{"range":"623","text":"624"},"Update the dependencies array to be: [register]",{"range":"625","text":"626"},"Update the dependencies array to be: [activeCardIndex, register]",{"range":"627","text":"628"},"Update the dependencies array to be: [pageNumber, lastPage, getFlowsData, bot]",{"range":"629","text":"630"},"Update the dependencies array to be: [builderState, editorContent.name, editorContent.next, editorContent.url, nextMessageName, nextUrl, setValue]",{"range":"631","text":"632"},"Update the dependencies array to be: [handleSidebarState, isOpen]",{"range":"633","text":"634"},"Update the dependencies array to be: [pageNumber, lastPage, botId]",{"range":"635","text":"636"},"Update the dependencies array to be: [botId]",{"range":"637","text":"638"},"Update the dependencies array to be: [builderState, objIndex, setValue]",{"range":"639","text":"640"},[23465,23467],"[props.match.params.id, setBuilderState]",[3089,3091],"[register]",[8845,8862],"[activeCardIndex, register]",[1398,1420],"[pageNumber, lastPage, getFlowsData, bot]",[7055,7101],"[builderState, editorContent.name, editorContent.next, editorContent.url, nextMessageName, nextUrl, setValue]",[1369,1377],"[handleSidebarState, isOpen]",[5033,5055],"[pageNumber, lastPage, botId]",[5773,5775],"[botId]",[3358,3387],"[builderState, objIndex, setValue]"]