[{"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Toolbar/index.tsx":"1","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Modals/ConnectFlow.tsx":"2","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Modals/styles.ts":"3","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Image/styles.ts":"4","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Text/index.tsx":"5","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Toolbar/styles.ts":"6","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Card/index.tsx":"7","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Card/styles.ts":"8","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Text/styles.ts":"9","/home/rabinson/Freelancing/ShipboardBot/frontend/src/styles/global.ts":"10","/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Auth/AuthProvider.tsx":"11","/home/rabinson/Freelancing/ShipboardBot/frontend/src/styles/mediaQueries.ts":"12","/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Auth/reducer.ts":"13","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/LandingPage.tsx":"14","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/error/404.tsx":"15","/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Modal/ModalProvider.tsx":"16","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Dashboard/index.tsx":"17","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Settings/index.tsx":"18","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Flows/index.tsx":"19","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/typography.ts":"20","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/buttons.ts":"21","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/grid.ts":"22","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Flows/styles.ts":"23","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/Dropdown/styles.ts":"24","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/layout/AuthLayout.tsx":"25","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/Pagination/index.tsx":"26","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Flows/DeleteModal.tsx":"27","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Flows/EditModal.tsx":"28","/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/buttons.ts":"29","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Flows/helper.tsx":"30","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/header/styles.ts":"31","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/navbar/index.tsx":"32","/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/images.ts":"33","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/footer/styles.ts":"34","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Toolbar/BtnEditor.tsx":"35","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Sidebar/styles.ts":"36","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/form.ts":"37","/home/rabinson/Freelancing/ShipboardBot/frontend/src/index.tsx":"38","/home/rabinson/Freelancing/ShipboardBot/frontend/src/utils/storage.ts":"39","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/auth/ForgotPasswordPage.tsx":"40","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Templates/index.tsx":"41","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Flows/builder.tsx":"42","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/CreateModal.tsx":"43","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/Configure/Telegram.tsx":"44","/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/messages.ts":"45","/home/rabinson/Freelancing/ShipboardBot/frontend/src/utils/request.ts":"46","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/footer/index.tsx":"47","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/Pagination/styles.ts":"48","/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/texts.ts":"49","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Sidebar/index.tsx":"50","/home/rabinson/Freelancing/ShipboardBot/frontend/src/App.tsx":"51","/home/rabinson/Freelancing/ShipboardBot/frontend/src/routes/ProtectedRoute.tsx":"52","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/auth/LoginPage.tsx":"53","/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/bots.ts":"54","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/header/index.tsx":"55","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/DeleteModal.tsx":"56","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Flows/CreateModal.tsx":"57","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/Configure/Messenger.tsx":"58","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/info/index.tsx":"59","/home/rabinson/Freelancing/ShipboardBot/frontend/src/utils/pagination.ts":"60","/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Auth/JWTValidator.ts":"61","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Bots/index.tsx":"62","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/table.ts":"63","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/EditModal.tsx":"64","/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Builder/BuilderProvider.tsx":"65","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/Configure/styles.ts":"66","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/info/styles.ts":"67","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/navbar/styles.ts":"68"},{"size":9213,"mtime":1612839726135,"results":"69","hashOfConfig":"70"},{"size":2919,"mtime":1612694265888,"results":"71","hashOfConfig":"70"},{"size":386,"mtime":1612599018149,"results":"72","hashOfConfig":"70"},{"size":1691,"mtime":1612625185277,"results":"73","hashOfConfig":"70"},{"size":4677,"mtime":1612836634935,"results":"74","hashOfConfig":"70"},{"size":4275,"mtime":1612803540319,"results":"75","hashOfConfig":"70"},{"size":10895,"mtime":1612840010182,"results":"76","hashOfConfig":"70"},{"size":2734,"mtime":1610160143779,"results":"77","hashOfConfig":"70"},{"size":1226,"mtime":1612753801902,"results":"78","hashOfConfig":"70"},{"size":1243,"mtime":1612754206496,"results":"79","hashOfConfig":"70"},{"size":1534,"mtime":1607842467004,"results":"80","hashOfConfig":"70"},{"size":437,"mtime":1607357171179,"results":"81","hashOfConfig":"70"},{"size":442,"mtime":1607166058000,"results":"82","hashOfConfig":"70"},{"size":395,"mtime":1606572185322,"results":"83","hashOfConfig":"70"},{"size":467,"mtime":1608091184084,"results":"84","hashOfConfig":"70"},{"size":3582,"mtime":1612584637978,"results":"85","hashOfConfig":"70"},{"size":159,"mtime":1607998049825,"results":"86","hashOfConfig":"70"},{"size":218,"mtime":1607998072129,"results":"87","hashOfConfig":"70"},{"size":7308,"mtime":1612693803067,"results":"88","hashOfConfig":"70"},{"size":1320,"mtime":1609667047505,"results":"89","hashOfConfig":"70"},{"size":2591,"mtime":1612611015356,"results":"90","hashOfConfig":"70"},{"size":2292,"mtime":1612667221062,"results":"91","hashOfConfig":"70"},{"size":1334,"mtime":1612721735370,"results":"92","hashOfConfig":"70"},{"size":603,"mtime":1611407912500,"results":"93","hashOfConfig":"70"},{"size":3062,"mtime":1607357777066,"results":"94","hashOfConfig":"70"},{"size":1583,"mtime":1611403993930,"results":"95","hashOfConfig":"70"},{"size":1488,"mtime":1611506630557,"results":"96","hashOfConfig":"70"},{"size":2316,"mtime":1612681211971,"results":"97","hashOfConfig":"70"},{"size":1105,"mtime":1612716373558,"results":"98","hashOfConfig":"70"},{"size":7511,"mtime":1612841004445,"results":"99","hashOfConfig":"70"},{"size":2194,"mtime":1607358477789,"results":"100","hashOfConfig":"70"},{"size":717,"mtime":1607357496043,"results":"101","hashOfConfig":"70"},{"size":765,"mtime":1611888511608,"results":"102","hashOfConfig":"70"},{"size":758,"mtime":1607358268935,"results":"103","hashOfConfig":"70"},{"size":3134,"mtime":1612807706134,"results":"104","hashOfConfig":"70"},{"size":2446,"mtime":1612319962325,"results":"105","hashOfConfig":"70"},{"size":1603,"mtime":1612803710437,"results":"106","hashOfConfig":"70"},{"size":515,"mtime":1607764359769,"results":"107","hashOfConfig":"70"},{"size":330,"mtime":1606965896953,"results":"108","hashOfConfig":"70"},{"size":2699,"mtime":1607850305009,"results":"109","hashOfConfig":"70"},{"size":210,"mtime":1610158645219,"results":"110","hashOfConfig":"70"},{"size":29414,"mtime":1612752673982,"results":"111","hashOfConfig":"70"},{"size":2305,"mtime":1611506040626,"results":"112","hashOfConfig":"70"},{"size":4654,"mtime":1612691873198,"results":"113","hashOfConfig":"70"},{"size":1279,"mtime":1612715948412,"results":"114","hashOfConfig":"70"},{"size":494,"mtime":1607840291044,"results":"115","hashOfConfig":"70"},{"size":795,"mtime":1607276608868,"results":"116","hashOfConfig":"70"},{"size":739,"mtime":1612585684875,"results":"117","hashOfConfig":"70"},{"size":670,"mtime":1611717938172,"results":"118","hashOfConfig":"70"},{"size":3424,"mtime":1612664150234,"results":"119","hashOfConfig":"70"},{"size":2168,"mtime":1611544707887,"results":"120","hashOfConfig":"70"},{"size":944,"mtime":1611287624293,"results":"121","hashOfConfig":"70"},{"size":3083,"mtime":1608089518101,"results":"122","hashOfConfig":"70"},{"size":1168,"mtime":1612687540178,"results":"123","hashOfConfig":"70"},{"size":962,"mtime":1607398449634,"results":"124","hashOfConfig":"70"},{"size":1475,"mtime":1611506512498,"results":"125","hashOfConfig":"70"},{"size":2347,"mtime":1611495697651,"results":"126","hashOfConfig":"70"},{"size":5846,"mtime":1612691858790,"results":"127","hashOfConfig":"70"},{"size":1029,"mtime":1607690783508,"results":"128","hashOfConfig":"70"},{"size":570,"mtime":1607912715680,"results":"129","hashOfConfig":"70"},{"size":299,"mtime":1607173241742,"results":"130","hashOfConfig":"70"},{"size":5737,"mtime":1612693872474,"results":"131","hashOfConfig":"70"},{"size":1454,"mtime":1611403637931,"results":"132","hashOfConfig":"70"},{"size":2326,"mtime":1611505989860,"results":"133","hashOfConfig":"70"},{"size":1239,"mtime":1611592415760,"results":"134","hashOfConfig":"70"},{"size":587,"mtime":1612689058653,"results":"135","hashOfConfig":"70"},{"size":1251,"mtime":1607358308147,"results":"136","hashOfConfig":"70"},{"size":596,"mtime":1607358244451,"results":"137","hashOfConfig":"70"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"v8ty68",{"filePath":"140","messages":"141","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"164"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"164"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"184"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"143"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"198","messages":"199","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"184"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"164"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"164"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":46,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"143"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"253","messages":"254","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"164"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"274","messages":"275","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"276","messages":"277","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"280","messages":"281","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"282","messages":"283","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Toolbar/index.tsx",["290","291","292","293","294","295","296","297","298","299","300","301"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Modals/ConnectFlow.tsx",["302","303","304","305"],"import React, { useEffect, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { getFlows } from '../../../../apis/flows';\nimport { GridWrapper } from '../../../common/grid';\nimport { ConnectFlowWrapper } from './styles';\nimport Pagination from '../../../common/Pagination/index';\nimport flowCover from '../../../../assets/images/flow-cover.png';\n\ntype FlowType = {\n  id: string;\n  name: string;\n  message_count: string\n};\n\nconst ConnectFlowModal = ({bot, flow, hideModal, handleSelect}) => {\n  const [flows, setFlows] = useState<Array<FlowType>>();\n  const [pageNumber, setPageNumber] = useState(1);\n  const [isLoading, setIsLoading] = useState(true);\n  const [lastPage, setLastPage] = useState(1);\n\n  const getFlowsData = (bot:string, pageNumber: number) => {\n    getFlows(bot, pageNumber)\n      .then((response) => {\n        var otherFlowsThanOneInside = response.data.filter(item => (item.id != flow) && item.message_count > 0)\n        setFlows(otherFlowsThanOneInside);\n        setPageNumber(response.meta.current_page);\n        setLastPage(response.meta.last_page);\n      })\n      .catch((err) => {\n        console.log(\"Something went wrong\");\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n\n  const handlePageChange = (pageNumber: number) => {\n    setPageNumber(pageNumber);\n  };\n\n  useEffect(() => {\n    getFlowsData(bot, pageNumber);\n  }, [pageNumber, lastPage]);\n\n  const getFlowGrid = () => {\n    if (flows.length > 0) {\n      return flows.map((data: FlowType) => {\n        return (\n          <React.Fragment key={data.id}>\n              <div className=\"grid-item\" onClick={ () => handleSelect(data.id, data.name)}>\n                <div className=\"grid-item-wrapper\">\n                <div className=\"grid-item-container\">\n                  <div className=\"image\">\n                  <img src={flowCover} alt=\"Flow Cover\" />\n                  </div>\n                  <div className=\"tag\">\n                    <p>{data.name}</p>\n                  </div>           \n                </div>\n              </div>\n            </div>\n          </React.Fragment>\n        );\n      })\n    } else {\n     return  (<p>There are no other flows or they don't have messages</p>);\n    }\n  }\n\n  return (\n    <ConnectFlowWrapper>\n      <div className=\"modal-body\">\n        <button className=\"modal-exit\" onClick={hideModal}></button>\n        <div className=\"modal-title\">\n         Connect Modal\n        </div>\n        <div className=\"modal-content\">\n          <GridWrapper>\n            <div className=\"grid-row\">\n              {flows && getFlowGrid()}\n            </div>\n          </GridWrapper>\n          {(flows && flows.length > 0) && \n            <Pagination\n            activePage={pageNumber}\n            total={lastPage}\n            onChange={handlePageChange}\n          />}\n        </div>\n      </div>\n    </ConnectFlowWrapper>\n  );\n};\n\nexport default ConnectFlowModal;\n",["306","307"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Modals/styles.ts",[],["308","309"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Image/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Text/index.tsx",["310","311","312","313","314","315","316","317","318","319"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Toolbar/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Card/index.tsx",["320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Card/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Text/styles.ts",[],["354","355"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/styles/global.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Auth/AuthProvider.tsx",[],["356","357"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/styles/mediaQueries.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Auth/reducer.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/LandingPage.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/error/404.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Modal/ModalProvider.tsx",["358"],"import React, { createContext, useContext, useState } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\ntype ModalStateContextType = {\n  View?: React.FC<{ hideModal: () => void }>;\n  isOpen: boolean;\n  onRequestClose?: () => void;\n};\n\ntype ModalStateModifierContextType = {\n  showModal: (View: React.FC, onRequestClose?: () => void) => void;\n  hideModal: () => void;\n};\n\nconst ModalStateContext = createContext<\n  ModalStateContextType | null | undefined\n>(null);\n\nconst ModalStateModifierContext = createContext<ModalStateModifierContextType>({\n  showModal: () => {},\n  hideModal: () => {},\n});\n\nconst ModalProvider = ({ children }: { children: React.ReactNode }) => {\n  const [modalState, setModalState] = useState<ModalStateContextType | null>();\n  const { isOpen, View, onRequestClose } = modalState || {\n    View: undefined,\n    onRequestClose: undefined,\n  };\n\n  const showModal = (\n    View?: React.FC<{ hideModal: () => void }>,\n    onRequestClose?: () => void\n  ) => {\n    setModalState({ View, isOpen: true, onRequestClose });\n  };\n  const hideModal = () => {\n    setModalState({\n      View: undefined,\n      isOpen: false,\n      onRequestClose: undefined,\n    });\n  };\n  const modalSpring = useSpring({\n    from: { display: 'none' },\n    to: async (next: any) => {\n      if (isOpen) {\n        await next({\n          display: 'block',\n          transform: 'translate(0px,0px)',\n          opacity: 1,\n        });\n      } else {\n        await next({ transform: 'translate(0px,100px)', opacity: 0 });\n        await next({\n          display: 'none',\n        });\n      }\n    },\n  });\n  return (\n    <ModalStateContext.Provider value={modalState}>\n      <ModalStateModifierContext.Provider value={{ showModal, hideModal }}>\n        {children}\n        <ModalWrapper>\n          <animated.div style={modalSpring} className=\"modal\">\n            {View && <View hideModal={hideModal} />}\n          </animated.div>\n        </ModalWrapper>\n      </ModalStateModifierContext.Provider>\n    </ModalStateContext.Provider>\n  );\n};\nModalProvider.propTypes = {\n  children: PropTypes.element,\n};\n\nexport default ModalProvider;\n\nexport const useModal = () => {\n  const context = useContext(ModalStateModifierContext);\n  if (context === undefined) {\n    throw new Error('useModal must be used within a ModalProvider');\n  }\n  return context;\n};\n\nexport const ModalWrapper = styled.div`\n\n  .modal {\n    position: fixed;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100vh;\n    background: rgba(0, 0, 0, 0.7);\n    backdrop-filter: blur(5px);\n    overflow-y: scroll;\n    overflow-x: hidden;\n    padding: 4rem 0;\n    z-index: 10;\n    h1 {\n      padding-bottom: 1rem;\n    }\n    h2 {\n      margin-top: -1rem;\n    }\n    input {\n      margin-bottom: 1rem;\n      margin-top: 1rem;\n    }\n    .last-input {\n      margin-bottom: 3rem;\n    }\n    &-exit {\n      background: rgb(255, 0, 76, 0.7);\n      border-radius: 10rem;\n      border: 0;\n      cursor: pointer;\n      height: 1.5rem;\n      outline: none;\n      padding: 0.5rem;\n      position: absolute;\n      right: 2rem;\n      top: 2rem;\n      width: 1.5rem;\n      &:active {\n        filter: brightness(0.8);\n      }\n    }\n    &-body {\n      align-items: center;\n      background: #ffffff;\n      border-radius: 24px;\n      box-shadow: 0px 4px 24px rgba(0, 0, 0, 0.12);\n      margin: 0 auto;\n      max-width: 40rem;\n      min-height: 25rem;\n      padding: 4rem;\n      position: relative;\n      /* p,\n      h2 {\n        color: black;\n      } */\n    }\n  }\n`;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Dashboard/index.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Settings/index.tsx",["359"],"import React from 'react';\nimport AppLayout from '../../../components/layout/AppLayout';\n\nconst Settings = (props:any) => {\n  return (\n      <h1 className=\"main-heading\">Settings</h1>\n  );\n};\n\nexport default Settings;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Flows/index.tsx",["360","361","362","363"],"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { GridWrapper } from '../../../components/common/grid';\nimport { PrimaryButton } from './../../../components/common/buttons';\nimport { HiDotsVertical } from 'react-icons/hi';\nimport { DropdownWrapper } from '../../../components/common/Dropdown/styles';\nimport { useModal } from '../../../services/Modal/ModalProvider';\nimport { getFlows } from '../../../apis/flows';\nimport {withRouter} from 'react-router-dom'\nimport FlowCreateModal from '../../../components/dashboard/Flows/CreateModal';\nimport FlowEditModal from '../../../components/dashboard/Flows/EditModal';\nimport FlowDeleteModal from '../../../components/dashboard/Flows/DeleteModal';\nimport Pagination from '../../../components/common/Pagination/index';\nimport flowCover from '../../../assets/images/flow-cover.png';\nimport { PlatformWrapper } from './styles';\nimport messengerLogo from '../../../assets/images/platforms/messenger.png';\nimport telegramLogo from '../../../assets/images/platforms/telegram.png';\nimport slackLogo from '../../../assets/images/platforms/slack.png';\nimport MessengerConfigure from '../../../components/dashboard/Bots/Configure/Messenger';\nimport TelegramConfigure from '../../../components/dashboard/Bots/Configure/Telegram';\nimport SlackConfigure from '../../../components/dashboard/Bots/Configure/Slack';\nimport PuffLoader from \"react-spinners/PuffLoader\";\n\n\ntype FlowType = {\n  id: string;\n  name: string;\n  last_modified: string;\n};\n\nconst Flows = (props) => {\n  const { showModal, hideModal } = useModal();\n  const [flows, setFlows] = useState<Array<FlowType>>();\n  const [pageNumber, setPageNumber] = useState(1);\n  const [isLoading, setIsLoading] = useState(true);\n  const [lastPage, setLastPage] = useState(1);\n\n  const botId = props.match.params.id;\n\n  const getFlowsData = (bot:string, pageNumber: number) => {\n    getFlows(bot, pageNumber)\n      .then((response) => {\n        setFlows(response.data);\n        setPageNumber(response.meta.current_page);\n        setLastPage(response.meta.last_page);\n      })\n      .catch((err) => {\n        console.log(\"Something went wrong\");\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n  /**\n   * Flow Operations Starts\n   */\n  const handleCreateOpen = (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => {\n    showModal(() => (\n      <FlowCreateModal bot={botId} hideModal={hideModal} handleCreateFlow={ handleCreateFlow } />\n    ));\n  };\n\n  const handleEditOpen = (data: FlowType) => {\n    showModal(() => (\n      <FlowEditModal hideModal={hideModal} flow={data} handleEditFlow={ handleEditFlow } />\n    ));\n  };\n\n  const handleDeleteConfirmation = (data: FlowType) => {\n    showModal(() => (\n      <FlowDeleteModal hideModal={hideModal} flow={data} handleDeleteFlow={ handleDeleteFlow }/>\n    ));\n  };\n\n  const handlePageChange = (pageNumber: number) => {\n    setPageNumber(pageNumber);\n  };\n\n  const handleCreateFlow = (newFlow: FlowType) => { \n    const newFlowList = flows.concat(newFlow);\n    setFlows(newFlowList)\n  }\n\n  const handleEditFlow = (data) => {\n    const flowId = flows.findIndex(\n      (obj) => obj.id == data.id\n    );\n    setFlows(flows.map((item, index) => {\n      if (index == flowId) {\n        item.name = data.name\n      }\n      return item;\n    }));\n  }\n\n  const handleDeleteFlow = (id) => {\n    const flowId = flows.findIndex(\n      (obj) => obj.id == id\n    );\n    flows.splice(flowId, 1);\n  }\n  /**\n   * Flow Operations Ends\n   */\n\n  /**\n   * Configure Operations Starts\n   */\n\n  const openMessengerConfigure = () => {\n    showModal(() => (\n      <MessengerConfigure hideModal={hideModal} botId={botId} />\n    ));\n  }\n\n  const openTelegramConfigure = () => {\n    showModal(() => (\n      <TelegramConfigure hideModal={hideModal} botId={botId} />\n    ));\n  }\n\n  const openSlackConfigure = () => {\n    showModal(() => (\n      <SlackConfigure hideModal={hideModal} botId={botId}/>\n    ));\n  }\n  /**\n   * Configure Operations Ends\n   */\n  \n  \n  useEffect(() => {\n    getFlowsData(botId, pageNumber);\n  }, [pageNumber, lastPage]);\n\n  if (isLoading) {\n    return (\n      <div className=\"loader-wrapper\">\n          <PuffLoader color={' #5850EC'}  size={75} />\n      </div>\n    );\n  } else {\n    return (\n      <React.Fragment>\n        <div className=\"page-header\">\n          <h1 className=\"main-heading\">Bot Details</h1>\n            <PrimaryButton onClick={handleCreateOpen}>Add Flow</PrimaryButton>\n          </div>\n          <PlatformWrapper>\n            <div className=\"platform_btn\" onClick={openMessengerConfigure}>\n              <img src={messengerLogo} alt=\"Messenger Logo\" />\n              <p>Messenger</p>\n            </div>\n            <div className=\"platform_btn\" onClick={openTelegramConfigure}>\n              <img src={telegramLogo} alt=\"Telegram Logo\" />\n              <p>Telegram</p>\n            </div>\n            <div className=\"platform_btn\" onClick={openSlackConfigure}>\n              <img src={slackLogo} alt=\"Slack Logo\" />\n              <p>Slack</p>\n            </div>\n          </PlatformWrapper>\n          <GridWrapper>\n            <div className=\"grid-row\">\n              {flows && flows.map((data: FlowType) => {\n                return (\n                  <React.Fragment key={data.id}>\n                    <Link to={'flow/' + data.id}>\n                      <div className=\"grid-item\">\n                        <div className=\"grid-item-wrapper\">\n                          <div className=\"grid-item-container\">\n                            <div className=\"image\">\n                              <img src={flowCover} alt=\"Flow Cover\" />\n                            </div>\n                            <div className=\"tag\">\n                              <p>{data.name}</p>\n                              <DropdownWrapper>\n                                <label className=\"dropbtn\">\n                                  <HiDotsVertical />\n                                </label>\n                                <div className=\"dropdown-content\">\n                                  <p\n                                    onClick={(e) => {\n                                      e.preventDefault();\n                                      handleEditOpen(data);\n                                    }}>\n                                    Edit\n                                  </p>\n                                  <p\n                                    onClick={(e) => {\n                                      e.preventDefault();\n                                      handleDeleteConfirmation(data);\n                                    }}>\n                                    Delete\n                                  </p>\n                                </div>\n                              </DropdownWrapper>\n                            </div>           \n                        </div>\n                      </div>\n                    </div>\n                    </Link>\n                  </React.Fragment>\n                );\n              })}\n          </div>\n        </GridWrapper>\n    \n        <Pagination\n          activePage={pageNumber}\n          total={lastPage}\n          onChange={handlePageChange}\n        />\n      </React.Fragment>\n    );\n  }\n};\n\nexport default withRouter(Flows);\n",["364","365"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/typography.ts",["366","367"],"import styled from 'styled-components';\nimport { darkerGrey } from '../../styles/theme';\nimport { media } from '../../styles/mediaQueries';\n\nexport const PrimaryHeader = styled.h1`\n  font-family: Comic Neue, Roboto, sans-serif;\n  font-weight: 700;\n  font-size: 3.6rem;\n  color: #000;\n`;\n\nexport const FormHeader = styled(PrimaryHeader)`\n  font-size: 2.6rem;\n  text-align: center;\n`;\n\nexport const FormSubHeader = styled.h2`\n  font-family: Roboto, sans-serif;\n  font-weight: 300;\n  font-size: 1.6rem;\n  color: #000;\n  text-align: center;\n`;\n\nexport const SecondaryHeader = styled.h1`\n  font-family: Roboto, sans-serif;\n  font-weight: 500;\n  line-height: 5.6rem;\n  color: #000;\n  font-size: 2.4rem;\n`; \n\nexport const Paragraph = styled.p`\n  font-family: inherit;\n  font-size: 1.5rem;\n  color: ${(props) => props.theme.darkerGrey};\n  line-height: 2.8rem;\n`;\n\nexport const ToolbarHeading = styled.h2`\n  font-family: Roboto, sans-serif;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 1.8rem;\n  line-height: 2.1rem;\n  color: #797979;\n`;\n\nexport const VerticalGap = styled.div<{size: string}>`\n  width: auto;\n  height: ${(props) => props.size}rem;\n  display: block;\n  flex-shrink: 0;\n`;\n\nexport const HorizontalGap = styled.div<{size: string}>`\n  width: ${(props) => props.size}rem;\n  height: auto;\n  display: block;\n`;","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/buttons.ts",["368"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/grid.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Flows/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/Dropdown/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/layout/AuthLayout.tsx",["369"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/Pagination/index.tsx",["370","371","372","373"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Flows/DeleteModal.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Flows/EditModal.tsx",["374","375"],"import React, { useState, useRef, useEffect } from 'react';\nimport { FormHeader } from '../../common/typography';\nimport { InputField } from '../../common/form';\nimport { FormButton } from '../../common/buttons';\nimport { useForm } from \"react-hook-form\";\nimport { updateFlow } from './../../../apis/flows';\nimport { toast } from 'react-toastify';\n\nconst FlowCreateModal = ({flow, hideModal, handleEditFlow}) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const { register, handleSubmit, errors, setError } = useForm();  \n\n  const onSubmit = data => {\n    updateFlow({ name: data.name }, flow.id)\n      .then((response) => {\n        hideModal();\n        toast.success(response.message);\n        handleEditFlow(response.data)\n      }).catch((err) => { \n        if (err.response.status === 422) {\n          if (err.response.data.errors.name) {\n            setError('name', {\n              type: 'server',\n              message: err.response.data.errors.name[0]\n            })\n          } \n        } else {\n          toast.error('Something went wrong')\n        }\n      }).finally(() => { \n        setIsLoading(false);\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"modal-body\">\n        <button className=\"modal-exit\" onClick={hideModal}></button>\n        <div className=\"modal-title\">\n          <FormHeader>Edit Flow</FormHeader>\n        </div>\n        <div className=\"modal-content\">\n          <form className=\"bot-create-form\" onSubmit={handleSubmit(onSubmit)}>\n            <InputField\n              isError={!!errors.name}\n              defaultValue={flow.name}\n              name=\"name\"\n              ref={register({required: true, minLength: 3})}\n            />\n            {errors.name && errors.name.type === 'required' && (<p className=\"form-error\">This field is required</p>)}\n            {errors.name && errors.name.type === 'minLength' && (<p className=\"form-error\">This field is required min length of 3</p>)}\n            {errors.name && errors.name.type === 'server' && (<p className=\"form-error\">{ errors.name.message}</p>)}\n\n            <FormButton type=\"submit\" disabled={isLoading}>\n              {isLoading ? 'Loading...' : 'Save'}\n            </FormButton>\n          </form>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default FlowCreateModal;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/buttons.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Flows/helper.tsx",["376","377","378"],"import React from 'react';\nimport { Rect, Image, Text, Group, Shape, Circle } from 'react-konva';\nimport useImage from 'use-image';\n\nexport const Edge = ({ height, node1, node2, width = 0 }) => {\n  node1 = {\n    x: node1.x + 350 - width,\n    y: node1.y + height - 20\n  }\n  node2 = {\n    x: node2.x,\n    y: node2.y + 20\n  }\n  const p1 = { x: (node1.x + node2.x) / 2, y: node1.y };\n  const p2 = { x: (node1.x + node2.x) / 2, y: node2.y };\n  return (\n    <Shape\n      sceneFunc={(context, shape) => {\n        context.beginPath();\n        context.moveTo(node1.x, node1.y);\n        context.bezierCurveTo(p1.x, p1.y, p2.x, p2.y, node2.x, node2.y);\n        // (!) Konva specific method, it is very important\n        context.fillStrokeShape(shape);\n      }}\n      stroke=\"black\"\n      strokeWidth={2}\n    />\n  );\n};\n\nexport const calculateHeightOfMessageBox = (message) => {\n  var height = 110;\n\n  if (typeof message == 'object') {\n    if (message.length > 0) {\n      message.forEach((item) => {\n        if (item.type === 'card') {\n          var activeCard = getActiveCard(item.cards);\n          console.log('active card height', item.cards[activeCard].height)\n          height +=(item.cards[activeCard].height * 1.01) + 20;\n        } else if (item.type === 'text') { \n          const buttons = item.buttons.length;\n          height += (item.height * 1.05) + (buttons * 40) + 20;\n        } else {\n          height += item.height + 20;\n        }\n      });\n    } else {\n      height += 90;\n    }\n  }\n  return height;\n};\nexport const getImage = (children, lastPosition) => {\n  if (children.imagePreviewUrl) {\n    return (\n      <URLImage\n        x={25}\n        y={lastPosition}\n        image={children.imagePreviewUrl}\n        height={180}\n        width={300}\n      />\n    );\n  } else {\n    return (\n      <Group>\n        <Rect\n          x={20}\n          y={lastPosition}\n          cornerRadius={5}\n          height={children.height}\n          width={300}\n          fill=\"#E1E5EA\"\n          stroke=\"#8392AB\"\n          dash={[10, 5]}\n          strokeWidth={1}\n          shadowColor=\"#95bbdf\"\n          shadowOpacity={0.5}\n          shadowBlur={7}\n        />\n        <Text\n          x={120}\n          y={lastPosition + 65}\n          text={'Upload Image'}\n          fontSize={16}\n        />\n      </Group>\n    );\n  }\n};\n\nexport const handleRenderingCards = (children) => {\n  var activeCard = getActiveCard(children.cards);\n\n  return (\n    <React.Fragment>\n      <Rect\n        x={0}\n        y={0}\n        cornerRadius={5}\n        fill=\"#F2F5F7\"\n        height={(children.cards[activeCard].height * 1.05) - 40}\n        width={300}\n        stroke=\"lightGrey\"\n        strokeWidth={1}\n        shadowColor=\"#95bbdf\"\n        shadowOpacity={0.5}\n        shadowBlur={7}\n      />\n      {getCardImage(children.cards[activeCard])}\n      <Text\n        x={10}\n        width={260}\n        y={185}\n        text={children.cards[activeCard].heading}\n        fontFamily={'Roboto'}\n        fontSize={16}\n        fontStyle={'bold'}\n        fill={'black'}\n      />\n      <Text\n        x={10}\n        y={210}\n        width={280}\n        text={children.cards[activeCard].body}\n        fontFamily={'Roboto'}\n        fontSize={15}\n        fill={'black'}\n        lineHeight={1.2}\n      />\n    </React.Fragment>\n  );\n};\nconst getCardImage = (children) => {\n  if (children.imagePreviewUrl) {\n    return (\n      <URLImage\n        x={0}\n        y={0}\n        image={children.imagePreviewUrl}\n        height={160}\n        width={300}\n      />\n    );\n  } else {\n    return (\n      <Group>\n        <Rect\n          x={20}\n          y={20}\n          fill=\"#E1E5EA\"\n          stroke=\"#8392AB\"\n          cornerRadius={5}\n          height={150}\n          width={260}\n          dash={[10, 5]}\n          strokeWidth={1}\n          shadowColor=\"#95bbdf\"\n          shadowOpacity={0.5}\n          shadowBlur={7}\n        />\n        <Text x={100} y={85} text={'Upload Image'} fontSize={16} />\n      </Group>\n    );\n  }\n};\n\ntype URLImageType = {\n  x: any,\n  y: any,\n  image: any,\n  height: any,\n  width: any,\n  onMouseOver?: any,\n  onMouseOut?: any,\n  onClick?: any\n}\nexport const URLImage = (props:URLImageType) => {\n  const [img] = useImage(props.image);\n  return <Image image={img} x={props.x} y={props.y} height={props.height} width={props.width} onMouseOver={props.onMouseOver} onMouseOut={props.onMouseOut} onClick={props.onClick}/>;\n};\n\nexport const getActiveCard = (cards) => {\n  var activeCard = cards.findIndex((obj) => obj.active == true);\n  return activeCard;\n};\n\n/**\n * Stage zoom pan\n */\nexport const handleWheel = (e) => {\n  e.evt.preventDefault();\n\n  const scaleBy = 0.9;\n  const stage = e.target.getStage();\n  const layer = stage.find('.layer_1')[0];\n\n  const oldScale = layer.scaleX();\n  const newScale = e.evt.deltaY > 0 ? oldScale * scaleBy : oldScale / scaleBy;\n  layer.scale({ x: newScale, y: newScale });\n\n  const layerPointerPosition = getRelativePointerPosition(layer);\n  const correctedLayerPointerPosition = {\n    x: layer.x() + layerPointerPosition.x * newScale,\n    y: layer.y() + layerPointerPosition.y * newScale,\n  };\n\n  const mousePointTo = {\n    x: correctedLayerPointerPosition.x / oldScale - layer.x() / oldScale,\n    y: correctedLayerPointerPosition.y / oldScale - layer.y() / oldScale,\n  };\n\n  const newLayerPos = {\n    x:\n      -(mousePointTo.x - correctedLayerPointerPosition.x / newScale) * newScale,\n    y:\n      -(mousePointTo.y - correctedLayerPointerPosition.y / newScale) * newScale,\n  };\n\n  layer.position(newLayerPos);\n  stage.draw();\n};\n\nexport const getRelativePointerPosition = (node) => {\n  // returns mouse pointer position relative to the input node\n  var transform = node.getAbsoluteTransform().copy();\n  transform.invert();\n  var pos = node.getStage().getPointerPosition();\n  return transform.point(pos);\n};\n\n/** Touch Pinch Zooom */\nfunction getDistance(p1, p2) {\n  return Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2));\n}\n\nfunction getCenter(p1, p2) {\n  return {\n    x: (p1.x + p2.x) / 2,\n    y: (p1.y + p2.y) / 2,\n  };\n}\nvar lastCenter = null;\nvar lastDist = 0;\n\nexport const onTouchPinch = (e) => {\n  e.evt.preventDefault();\n  var touch1 = e.evt.touches[0];\n  var touch2 = e.evt.touches[1];\n  const stage = e.target.getStage();\n  \n  if (touch1 && touch2) {\n    // if the stage was under Konva's drag&drop\n    // we need to stop it, and implement our own pan logic with two pointers\n    if (stage.isDragging()) {\n      stage.stopDrag();\n    }\n\n    var p1 = {\n      x: touch1.clientX,\n      y: touch1.clientY,\n    };\n    var p2 = {\n      x: touch2.clientX,\n      y: touch2.clientY,\n    };\n\n    if (!lastCenter) {\n      lastCenter = getCenter(p1, p2);\n      return;\n    }\n    var newCenter = getCenter(p1, p2);\n\n    var dist = getDistance(p1, p2);\n\n    if (!lastDist) {\n      lastDist = dist;\n    }\n\n    // local coordinates of center point\n    var pointTo = {\n      x: (newCenter.x - stage.x()) / stage.scaleX(),\n      y: (newCenter.y - stage.y()) / stage.scaleX(),\n    };\n\n    var scale = stage.scaleX() * (dist / lastDist);\n\n    stage.scaleX(scale);\n    stage.scaleY(scale);\n\n    // calculate new position of the stage\n    var dx = newCenter.x - lastCenter.x;\n    var dy = newCenter.y - lastCenter.y;\n\n    var newPos = {\n      x: newCenter.x - pointTo.x * scale + dx,\n      y: newCenter.y - pointTo.y * scale + dy,\n    };\n\n    stage.position(newPos);\n    stage.batchDraw();\n\n    lastDist = dist;\n    lastCenter = newCenter;\n  }\n};\n\nconst onTouchEnd = (e) => {\n  lastDist = 0;\n  lastCenter = null;\n}","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/header/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/navbar/index.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/images.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/footer/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Toolbar/BtnEditor.tsx",["379","380","381","382","383","384","385","386","387","388","389"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Sidebar/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/form.ts",["390"],"import styled from 'styled-components'\nimport { grey } from '../../styles/theme';\n\nexport const InputField = styled.input<{isError?: boolean}>`\n  background: ${props => props.isError ? '#FFE4E4' : '#F7F7F7'};\n  border-radius: 7px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.1);\n  box-sizing: border-box;\n  min-height: 3.8rem;\n  min-width: 30rem;\n  padding: .8rem;\n  outline: none;\n  font-family: Roboto, sans-serif;\n  font-style: normal;\n  font-weight: 400;\n  font-size: 1.4rem;\n  color: #000;\n  width: 100%;\n\n\n  &:focus {\n    font-weight: 400;\n    box-shadow: 0 0 0 3px rgba(164, 202, 254, 0.45);\n    border-color: #5850EC;\n  }\n\n  &::placeholder {\n    color: #d7d7d7;\n    font-size: 1.2rem;\n  }\n`;\n\nexport const SelectField = styled.select<{isError?: boolean}>`\n  background: ${props => props.isError ? '#FFE4E4' : '#F7F7F7'};\n  border-radius: 7px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.1);\n  box-sizing: border-box;\n  min-height: 3.8rem;\n  min-width: 30rem;\n  padding: .8rem;\n  outline: none;\n  font-family: Roboto, sans-serif;\n  font-style: normal;\n  font-weight: 400;\n  font-size: 1.4rem;\n  color: #000;\n  width: 100%;\n\n\n  &:focus {\n    font-weight: 400;\n    box-shadow: 0 0 0 3px rgba(164, 202, 254, 0.45);\n    border-color: #5850EC;\n  }\n\n  &::placeholder {\n    color: #d7d7d7;\n    font-size: 1.2rem;\n  }\n`;\n\nexport const FormLink = styled.a`\n  text-decoration: none;\n  font-size: 1.2rem;\n  font-family: Roboto, sans-serif;\n  color: #565252;\n\n  &:hover{\n    text-decoration-line: underline;\n    color: #000;\n  }\n`;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/index.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/utils/storage.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/auth/ForgotPasswordPage.tsx",["391"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Templates/index.tsx",["392"],"import React from 'react';\nimport AppLayout from '../../../components/layout/AppLayout';\n\nconst Templates = (props: any) => {\n  return <h1 className=\"main-heading\">Templates</h1>;\n};\n\nexport default Templates;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Flows/builder.tsx",["393","394","395","396","397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438"],"import React, { useState } from 'react';\nimport {withRouter} from 'react-router-dom'\nimport { FlowBuilderWrapper } from './styles';\nimport { Stage, Layer, Rect, Image, Text, Group, Circle } from 'react-konva';\nimport Toolbar from '../../../components/dashboard/builder/Toolbar/index';\nimport PuffLoader from \"react-spinners/PuffLoader\";\n\nimport {\n  handleRenderingCards,\n  getImage,\n  calculateHeightOfMessageBox,\n  handleWheel,\n  onTouchPinch,\n  Edge,\n  URLImage,\n} from './helper';\nimport {\n  useBuilder,\n} from '../../../services/Builder/BuilderProvider';\nimport { BiMessageSquareAdd } from 'react-icons/bi';\nimport { saveMessage, getMessages, updateMessage, deleteMessage, createAndConnectMessage } from '../../../apis/messages';\nimport { toast } from 'react-toastify';\nimport { getFlow } from '../../../apis/flows';\nimport { createAndConnectWithButton, updateButton } from '../../../apis/buttons';\nimport Konva from 'konva';\n\nconst FlowBuilder = (props) => {\n  const [isToolbarActive, setIsToolbarActive] = useState(null);\n  const [builderState, setBuilderState, sidebar] = useBuilder();\n  const [flow, setFlow] = useState(null);\n  const [id, setId] = useState(null);\n  const [mousePosition, setMousePosition] = useState({\n    x: 0,\n    y: 0,\n  });\n  const [isEdging, setIsSetting] = useState(false);\n  const [showToolOption, setShowToolOption] = useState(false);\n  const [edgingMessageId, setEdgingMessageId] = useState(null);\n  const [edgingButtonId, setEdgingButtonId] = useState(null);\n  const [edgingButtonMessageId, setEdgingButtonMessageId] = useState(null);\n  const [edgingButtonChildId, setEdgingButtonChildId] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const [state, setState] = useState({\n    layerScale: 1,\n    layerX: 0,\n    layerY: 0,\n  });\n\n  const TrashIcon = \"data:image/svg+xml;base64,\" + window.btoa('<svg stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" viewBox=\"0 0 24 24\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"none\" d=\"M17.004 20L17.003 8h-1-8-1v12H17.004zM13.003 10h2v8h-2V10zM9.003 10h2v8h-2V10zM9.003 4H15.003V6H9.003z\"></path><path d=\"M5.003,20c0,1.103,0.897,2,2,2h10c1.103,0,2-0.897,2-2V8h2V6h-3h-1V4c0-1.103-0.897-2-2-2h-6c-1.103,0-2,0.897-2,2v2h-1h-3 v2h2V20z M9.003,4h6v2h-6V4z M8.003,8h8h1l0.001,12H7.003V8H8.003z\"></path><path d=\"M9.003 10H11.003V18H9.003zM13.003 10H15.003V18H13.003z\"></path></svg>');\n\n  const getNextNode = (id) => {\n    if (id) {\n      const nextIndex = builderState.findIndex((obj) => obj.id == id);\n      if (nextIndex == -1) {\n        return mousePosition;\n      }\n      return builderState[nextIndex].position;\n    }\n  };\n\n  const hideToolbar = () => {\n    setIsToolbarActive(false);\n    setId(0);\n  };\n\n  const showToolbar = (id) => {\n    setId(id);\n    setIsToolbarActive(true);\n  };\n\n \nconst handleRenderingChildrens = (message) => {\n  var lastPosition = 70;\n  return message.children.map(function (child) {\n    var yposition = lastPosition;\n    if (child.type === 'card') {\n      lastPosition = lastPosition + child.cards[0].height;\n    } else if (child.type === 'text') {\n      const buttons = child.buttons.length;\n      lastPosition = lastPosition + child.height + (buttons * 40) + 40;\n    } else if (child.type === 'image') {\n      lastPosition = lastPosition + child.height + 20;\n    }\n    return getChildren(message, child, yposition);\n  });\n};\n  \n  const getChildren = (message, child, lastPosition) => {\n    // var messageHeight = calculateHeightOfMessageBox(message.children);\n  if (child.type === 'text') {\n    var textButtons = child.buttons;\n    var boxHeight = (child.height * 1.05) + (textButtons.length * 40) + 10;\n    return (\n      <Group x={20} y={lastPosition}>\n        <Rect\n          fill=\"#F0F4F7\"\n          cornerRadius={5}\n          height={boxHeight}\n          width={300}\n          stroke=\"lightGrey\"\n          strokeWidth={1}\n          shadowColor=\"#95bbdf\"\n          shadowOpacity={0.5}\n          shadowBlur={7}\n        />\n        <Text\n          x={15}\n          y={7}\n          text={child.value}\n          fontSize={15}\n          lineHeight={1.2}\n          width={280}\n        />\n        {child.buttons.map((button, index) => {\n          var y = (child.height * 1.05) + (40 * index) + 10;\n          var node2 = getNextNode(button.next);\n          return (\n            <Group key={button.id}>\n              { button.next &&\n                  <Edge\n                    height={boxHeight}\n                    node1={{ x: -60, y: - boxHeight + 30 + (y)}}\n                    node2={{ x: node2.x - message.position.x -20, y: node2.y - message.position.y - 80}}\n                    width={20}\n                  />\n              }\n              <Rect\n                x={25}\n                y={y}\n                fill=\"#FFFFFF\"\n                cornerRadius={5}\n                height={30}\n                width={250}\n                shadowOpacity={0.5}\n                shadowBlur={7}\n                align={\"center\"}\n              />\n              <Text\n                x={10}\n                y={y + 3}\n                text={button.name}\n                fontSize={15}\n                width={280}\n                lineHeight={1.5}\n                align={\"center\"}\n              />\n              <Circle x={260} y={y + 14} radius={9} fill=\"#8392AB\" strokeWidth={1}\n                onMouseOver={() => { document.body.style.cursor = 'pointer' }}\n                onMouseOut={() => { document.body.style.cursor = 'default' }}\n                onClick={(e) => {\n                  e.cancelBubble = true;\n                  connectButtonEdge(message.id, child.id, button.id)\n                }}\n             />\n            </Group>\n          );\n         })}\n      </Group>\n    );\n  } else if (child.type === 'image') {\n    return getImage(child, lastPosition);\n  } else if (child.type === 'card') {\n    return (\n      <Group x={20} y={lastPosition}>\n        {handleRenderingCards(child)}\n      </Group>\n    );\n  }\n};\n\n  const getStageWidth = () => {\n    return sidebar ? window.innerWidth - 280 : window.innerWidth - 90;\n  };\n\n  const setSelectedTrue = (messageId) => {\n    var previousSelected = getSelectedNode(builderState);\n    if (previousSelected >= 0) {\n      setBuilderState(\n        builderState.map((item, index) => {\n          if (index == messageId) {\n            item.isSelected = true;\n          }\n          if (index == previousSelected) {\n            item.isSelected = false;\n          }\n          return item;\n        })\n      );\n    } else {\n      setBuilderState(\n        builderState.map((item, index) => {\n          if (index == messageId) {\n            item.isSelected = true;\n          }\n          return item;\n        })\n      );\n    }\n  };\n\n  const setHoverTrue = (messageId) => {\n    var previousHover = getHoveredNode(builderState);\n    if (previousHover >= 0) {\n      setBuilderState(\n        builderState.map((item, index) => {\n          if (index == messageId) {\n            item.isHover = true;\n          }\n          if (index == previousHover) {\n            item.isHover = false;\n          }\n          return item;\n        })\n      );\n    } else {\n      setBuilderState(\n        builderState.map((item, index) => {\n          if (index == messageId) {\n            item.isHover = true;\n          }\n          return item;\n        })\n      );\n    }\n  };\n\n  const setHoverFalse = (messageId) => {\n    setBuilderState(\n      builderState.map((item, index) => {\n        if (index == messageId) {\n          item.isHover = false;\n        }\n        return item;\n      })\n    );\n  };\n\n  const connectEdge = (messageId) => {\n    setEdgingButtonId(null);\n    setEdgingMessageId(null);\n\n    if (!showToolOption) {\n      setIsSetting(true);\n      setEdgingMessageId(messageId);\n      setBuilderState(\n        builderState.map((item) => {\n          if (item.id == messageId) {\n            item.next = 'dummy';\n          }\n          return item;\n        })\n      );\n    }\n  };\n\n  const connectButtonEdge = (messageId, childId, buttonId) => {\n    setEdgingButtonId(null);\n    setEdgingMessageId(null);\n    if (!showToolOption) {\n      setIsSetting(true);\n      setEdgingButtonId(buttonId);\n      setEdgingButtonMessageId(messageId);\n      setEdgingButtonChildId(childId);\n\n      setBuilderState(\n        builderState.map((item) => {\n          if (item.id == messageId) {\n            item.children.map((child) => {\n              if (child.id == childId) {\n                child.buttons.map((button) => {\n                  if (button.id == buttonId) {\n                    button.next = \"dummy\"\n                  }\n                  return button;\n                })\n              }\n              return child;\n            })\n          }\n          return item;\n        })\n      );\n    }\n  }\n\n  const handleMousePosition = (event) => {\n    if (!showToolOption) {\n      var point = event.target.getStage().getPointerPosition();\n      setMousePosition({\n        x: point.x,\n        y: point.y,\n      });\n    }\n  };\n\n  const handleClickOnCanvas = () => {\n    if (isEdging) {\n      var hoveredIndex = getHoveredNode(builderState);\n      if (hoveredIndex > 0) {\n        //If the edging is hovered over another message and connect that message\n        var messageIdOfHover = builderState[hoveredIndex].id\n        if (messageIdOfHover != edgingMessageId) {\n          if (edgingMessageId) {\n            updateMessage({\n              next: messageIdOfHover\n            }, edgingMessageId).then((response) => { \n              setBuilderState(\n                builderState.map((item, index) => {\n                  if (item.id == edgingMessageId) {\n                    item.next = messageIdOfHover\n                  }\n                  return item;\n                })\n              );\n            }).catch((err) => {\n              toast.error(\"Something went wrong\");\n            }).finally(() => {\n              setEdgingMessageId(null);\n            })\n           } else if (edgingButtonId) {\n            updateButton({\n              next: messageIdOfHover\n            }, edgingButtonId).then((response) => {\n              setBuilderState(\n                builderState.map((item, index) => {\n                  if (item.id == edgingButtonMessageId) {\n                    item.children.map((child) => {\n                      if (child.id == edgingButtonChildId) {\n                        child.buttons.map((button) => {\n                          if (button.id == edgingButtonId) {\n                            button.next = messageIdOfHover\n                          }\n                        })\n                      }\n                    })\n                  }  \n                  return item;\n                })\n              );\n            }).catch((err) => {\n              toast.error(\"Something went wrong\")\n            }).finally(() => {\n              setEdgingButtonId(null);\n            })\n          }\n        } \n      } else {\n        setShowToolOption(true);\n      }\n    }\n  };\n\n  const handleAddMessage = () => {\n    let number = builderState.length + 1;\n    saveMessage({\n      name: 'Send Message #' + number,\n      type: 'default',\n      position_x: 1200,\n      position_y: 60,\n      flow: props.match.params.id\n    }).then((response) => {\n       setBuilderState([...builderState, response.data]);\n\n    }).catch((err) => {\n      toast.error(\"Something went wrong\")\n    })\n  }\n\n  const handleDeleteMessage = (item, index) => {\n    if (index > 0) {\n      //Delete the message\n    builderState.splice(index, 1);\n    //Delete the edging where this message belongs to\n    const messageIndexHavingNextOfDeleteMessage = getMessageIndexWhichHasNextOfGivenMessageId(builderState, item.id);\n    setBuilderState(\n      builderState.map((item, index) => {\n        if (index == messageIndexHavingNextOfDeleteMessage) {\n          item.next = \"\"\n        }\n        return item;\n      })\n    );\n    deleteMessage(item.id).then(() => {\n      setShowToolOption(false);\n      setEdgingMessageId(null);\n      setEdgingButtonId(null);\n      setIsSetting(false);\n    }).catch((err) => {\n        toast.error(\"Something went wrong\");\n      })\n    } else {\n      toast.info(\"You cannot delete the start message\")\n    }\n  }\n\n  const handleDragMessage = (e, item, index) =>  {\n    var updatedPosition = {\n      x: e.target.x(),\n      y: e.target.y(),\n    };\n\n    setBuilderState(\n      builderState.map((item, ind) => {\n        if (ind == index) {\n          item.position = updatedPosition;\n        }\n        return item;\n      })\n    );\n  }\n\n  const updateMessagePosition = (item) => {\n    updateMessage({\n      position_x: item.position.x,\n      position_y: item.position.y\n    }, item.id).catch((err) => {\n      toast.error('Something went wrong')\n    })    \n  }\n\n  const handleToolOptionNewMessageAction = () => {\n    setIsSetting(false);\n    setShowToolOption(false);\n    let number = builderState.length + 1;\n    var newMessage = {\n      name: 'Send Message #' + number,\n      type: 'default',\n      position_x: mousePosition.x,\n      position_y: mousePosition.y,\n      flow: props.match.params.id\n    }\n\n    if (edgingMessageId) {\n      createAndConnectMessage(newMessage, edgingMessageId)\n        .then((response) => {\n          setBuilderState(\n            builderState.map((item) => {\n              if (item.id == edgingMessageId) {\n                item.next = response.data.id;\n              }\n              return item;\n            })\n          );\n          setBuilderState([...builderState, response.data]);\n        }).catch((err) => {\n          toast.error(\"Something went wrong\")\n        }).finally(() => {\n          setEdgingMessageId(null);\n        })\n    } else if (edgingButtonId) {\n      createAndConnectWithButton(newMessage, edgingButtonId)\n        .then((response) => {\n          setBuilderState(\n            builderState.map((item) => {\n              if (item.id == edgingButtonMessageId) {\n                item.children.map((child) => {\n                  if (child.id == edgingButtonChildId) {\n                    child.buttons.map((button) => {\n                      if (button.id == edgingButtonId) {\n                        button.next = response.data.id\n                      }\n                      return button;\n                    })\n                  }\n                  return child;\n                })\n              }\n              return item;\n            })\n          );\n          setBuilderState([...builderState, response.data]);\n        }).catch((err) => {\n          toast.error(\"Something went wrong\")\n        }).finally(() => {\n          setEdgingButtonId(null);\n          setEdgingButtonMessageId(null);\n          setEdgingButtonChildId(null);\n        })\n    }\n  }\n\n  const handleToolOptionConnectFlow = () => {\n    setIsSetting(false);\n    setShowToolOption(false);\n    let number = builderState.length + 1;\n    var newFlow = {\n      name: 'Connect Flow #' + number,\n      type: 'flow',\n      position_x: mousePosition.x,\n      position_y: mousePosition.y,\n      flow: props.match.params.id\n    }\n    if (edgingMessageId) {\n      createAndConnectMessage(newFlow, edgingMessageId).then((response) => {\n        setBuilderState(\n          builderState.map((item) => {\n            if (item.id == edgingMessageId) {\n              item.next = response.data.id;\n            }\n            return item;\n          })\n        );\n        setBuilderState([...builderState, response.data]);\n       \n      }).catch((err) => {\n        toast.error(\"Something went wrong\")\n      }).finally(() => {\n        setEdgingMessageId(null);\n      });\n    } else if (edgingButtonId) {\n      createAndConnectWithButton(newFlow, edgingButtonId)\n        .then((response) => {\n          setBuilderState(\n            builderState.map((item) => {\n              if (item.id == edgingButtonMessageId) {\n                item.children.map((child) => {\n                  if (child.id == edgingButtonChildId) {\n                    child.buttons.map((button) => {\n                      if (button.id == edgingButtonId) {\n                        button.next = response.data.id\n                      }\n                      return button;\n                    })\n                  }\n                  return child;\n                })\n              }\n              return item;\n            })\n          );\n          setBuilderState([...builderState, response.data]);\n        }).catch((err) => {\n          toast.error(\"Something went wrong\")\n        }).finally(() => {\n          setEdgingButtonId(null);\n          setEdgingButtonMessageId(null);\n          setEdgingButtonChildId(null);\n        })\n    }\n  }\n\n  const handleToolOptionCancel = () => {\n    setShowToolOption(false);\n    if (isEdging) setIsSetting(false);\n    if (edgingMessageId) {\n      setBuilderState(\n        builderState.map((item) => {\n          if (item.id == edgingMessageId) {\n            item.next = \"\"\n          }\n          return item;\n        })\n      );\n      if (edgingMessageId) setEdgingMessageId(null);\n    } else if (edgingButtonId) {\n        setBuilderState(\n          builderState.map((item) => {\n            if (item.id == edgingButtonMessageId) {\n              item.children.map((child) => {\n                if (child.id == edgingButtonChildId) {\n                  child.buttons.map((button) => {\n                    if (button.id == edgingButtonId) {\n                      button.next = null\n                    }\n                    return button;\n                  })\n                }\n                return child;\n              })\n            }\n            return item;\n          })\n        );\n        if(edgingButtonId) setEdgingButtonId(null);\n        if(edgingButtonChildId) setEdgingButtonChildId(null);\n        if(edgingButtonMessageId) setEdgingButtonMessageId(null);\n      }          \n    }\n  React.useEffect(() => {\n    setIsLoading(true);\n    getMessages(props.match.params.id)\n      .then((response) => {\n        setBuilderState(response.data)\n      })\n      .catch((err) => {\n        toast.error(\"Something went wrong\")\n      }).finally(() => {\n        setIsLoading(false);\n      })\n    getFlow(props.match.params.id)\n      .then((response) => {  \n        setFlow(response.data);\n    }).catch((err) => {\n      toast.error(\"Something went wrong\")   \n    })\n    Konva.hitOnDragEnabled = true;\n  }, []);\n\n  const getToolOption = () => {\n    return (\n      <Group  x={mousePosition.x} y={mousePosition.y} zIndex={200}\n        onMouseOver={() => { document.body.style.cursor = 'pointer' }}\n        onMouseOut={() => { document.body.style.cursor = 'default' }}\n      >\n        <Group onClick={handleToolOptionNewMessageAction}>\n          <Rect\n            width={200}\n            height={50}\n            fill=\"#FDFDFD\"\n            strokeWidth={2}\n            shadowColor=\"gray\"\n            shadowOpacity={0.7}\n            shadowBlur={2}\n            onMouseDown={(e) => {\n              e.target.setAttr('fill', ' #eef1f4');\n            }}\n          />\n          <Text\n            x={15}\n            y={15}\n            text=\"+ New Message\"\n            fontFamily={'Roboto'}\n            fontSize={20}\n            fill={'#5850eb'}\n          />\n        </Group>\n        <Group y={50} onClick={handleToolOptionConnectFlow}>\n          <Rect\n            width={200}\n            height={50}\n            fill=\"#FDFDFD\"\n            strokeWidth={2}\n            shadowColor=\"gray\"\n            shadowOpacity={0.7}\n            shadowBlur={2}\n            onMouseDown={(e) => {\n              e.target.setAttr('fill', ' #eef1f4');\n            }}\n          />\n          <Text\n            x={15}\n            y={15}\n            text=\"+ Connect Flow\"\n            fontFamily={'Roboto'}\n            fontSize={20}\n            fill={'#5850eb'}\n          />\n        </Group>\n        <Group y={100}  onClick={handleToolOptionCancel}>\n          <Rect\n            width={200}\n            height={50}\n            fill=\"#FDFDFD\"\n            strokeWidth={2}\n            shadowColor=\"gray\"\n            shadowOpacity={0.7}\n            shadowBlur={2}\n            onMouseDown={(e) => {\n              e.target.setAttr('fill', ' #eef1f4');\n            }}\n          />\n          <Text\n            x={15}\n            y={15}\n            text=\"- Cancel\"\n            fontFamily={'Roboto'}\n            fontSize={20}\n            fill={'#5850eb'}\n          />\n        </Group>\n      </Group>\n    );\n  }\n  const getDefaultMessage = (item, index, messageHeight) => {\n    return (\n      <Group\n        x={item.position?.x}\n        y={item.position?.y}\n        draggable\n        onClick={(e) => {\n          showToolbar(item.id);\n          setSelectedTrue(index);\n        }}\n        onMouseEnter={(e) => {\n          setHoverTrue(index);\n        }}\n        onMouseLeave={(e) => {\n          setHoverFalse(index);\n        }}\n        hitOnDragEnabled={true}\n        onDragMove={(e) => {\n          handleDragMessage(e, item, index)\n        }}\n        onDragEnd={() => { updateMessagePosition(item) }}\n      >\n        {index === 0 &&\n          <Group x={10} y={-40}>\n            <Rect cornerRadius={7} stroke={\"green\"} strokeWidth={2} fill=\"#FDFDFD\" width={60} height={30} />\n            <Text\n              x={13}\n              y={8}\n              text={\"Start\"}\n              fontFamily={'Roboto'}\n              fontSize={15}\n              fill={'green'}\n            />\n          </Group>\n        }\n        <Rect\n          cornerRadius={16}\n          height={messageHeight}\n          width={340}\n          fill=\"#FDFDFD\"\n          strokeWidth={1}\n          stroke={ \"#5850EB\"}\n          shadowColor={getShadowColor(item)}\n          shadowOpacity={1}\n          shadowBlur={7}\n        />\n        {item.isHover &&\n          <>\n            <Rect\n              width={50} height={30} x={330} y={10} />\n            <URLImage\n              onMouseOver={() => { document.body.style.cursor = 'pointer' }}\n              onMouseOut={() => { document.body.style.cursor = 'default' }}\n              onClick={() => { handleDeleteMessage(item, index) }}\n              image={TrashIcon} x={345} y={10} height={25} width={25} />\n          </>\n        }\n        <Circle x={30} y={30} radius={15} fill=\"#5850EB\" />\n        <Text\n          x={55}\n          y={22}\n          text={item.name}\n          fontFamily={'Roboto'}\n          fontSize={20}\n          fill={'gray'}\n        />\n        <Group\n          x={340}\n          y={messageHeight - 20}\n          onMouseOver={() => { document.body.style.cursor = 'pointer' }}\n          onMouseOut={() => { document.body.style.cursor = 'default' }}\n          onClick={(e) => {\n            e.cancelBubble = true;\n            connectEdge(item.id)\n          }}>\n          <Circle radius={9} fill=\"#8392AB\" strokeWidth={1} />\n          <Text\n            x={-80}\n            y={-8}\n            text=\"Next Step\"\n            fontFamily={'Roboto'}\n            fontSize={15}\n            fontWeight={300}\n            fill={'gray'}\n          />\n        </Group>\n        {typeof item.children == 'object' ? (\n          <>\n            {item.children.length > 0 ? (\n              handleRenderingChildrens(item)\n            ) : (\n                <React.Fragment key={item}>\n                  <Group>\n                    <Rect\n                      x={20}\n                      y={75}\n                      height={60}\n                      width={300}\n                      fill=\"#EEF1F4\"\n                      cornerRadius={16}\n                    />\n                    <Text\n                      text=\"No Content\"\n                      x={110}\n                      y={95}\n                      fontFamily={'Roboto'}\n                      fontSize={20}\n                      fontWeight={300}\n                      fill={'blue'}\n                    />\n                  </Group>\n                </React.Fragment>\n              )}\n          </>\n        ) : null}\n      </Group>\n    );\n  }\n  const getFlowMessage = (item, index) => {\n    return (\n      <Group\n      x={item.position?.x}\n      y={item.position?.y}\n      draggable\n      onClick={(e) => {\n        showToolbar(item.id);\n        setSelectedTrue(index);\n      }}\n      onMouseEnter={(e) => {\n        setHoverTrue(index);\n      }}\n      onMouseLeave={(e) => {\n        setHoverFalse(index);\n      }}\n      hitOnDragEnabled={true}\n      onDragMove={(e) => {\n        handleDragMessage(e, item, index)\n      }}\n      onDragEnd={() => { updateMessagePosition(item) }}\n    >\n      <Rect\n        cornerRadius={16}\n        height={200}\n        width={340}\n        fill=\"#FDFDFD\"\n        stroke={ \"#f9bf3b\"}\n        strokeWidth={1}\n        shadowColor={getShadowColor(item)}\n        shadowOpacity={1}\n        shadowBlur={7}\n      />\n      {item.isHover &&\n        <>\n          <Rect\n            width={50} height={30} x={330} y={10} />\n          <URLImage\n            onMouseOver={() => { document.body.style.cursor = 'pointer' }}\n            onMouseOut={() => { document.body.style.cursor = 'default' }}\n            onClick={() => { handleDeleteMessage(item, index) }}\n            image={TrashIcon} x={345} y={10} height={25} width={25} />\n        </>\n      }\n      <Circle x={30} y={30} radius={15} fill=\"#f9bf3b\" />\n      <Text\n        x={55}\n        y={22}\n        text={item.name}\n        fontFamily={'Roboto'}\n        fontSize={20}\n        fill={'gray'}\n        />\n        {item.children.length > 0 ? (\n          <Group>\n          <Rect\n            x={20}\n            y={75}\n            height={60}\n            width={300}\n            stroke=\"green\"\n            strokeWidth={1}\n            fill=\"#EEF1F4\"\n            cornerRadius={16}\n          />\n          <Text\n            text={item.children[0].name}\n            x={40}\n            y={95}\n            fontFamily={'Roboto'}\n            fontSize={20}\n            fontWeight={300}\n              fill={\"#f9bf3b\"}\n              align={\"center\"}\n          />\n        </Group>\n        ) : (\n            <React.Fragment key={item}>\n              <Group>\n                <Rect\n                  x={20}\n                  y={75}\n                  height={60}\n                  width={300}\n                  fill=\"#EEF1F4\"\n                  cornerRadius={16}\n                />\n                <Text\n                  text=\"Select Flow\"\n                  x={110}\n                  y={95}\n                  fontFamily={'Roboto'}\n                  fontSize={20}\n                  fontWeight={300}\n                  fill={\"#f9bf3b\"}\n                  align={\"center\"}\n                />\n              </Group>\n            </React.Fragment>\n          )}\n    </Group>\n    );\n  }\n  const getMessageBox = (item, index, messageHeight) => {\n    if (item.type == \"default\") {\n      return getDefaultMessage(item, index, messageHeight);\n    } else if (item.type == \"flow\") {\n      return getFlowMessage(item, index);\n    }\n  }\n  \n  if (isLoading) {\n    return (\n      <div className=\"loader-wrapper\">\n        <PuffLoader color={' #5850EC'} loading={isLoading} size={75} />\n      </div>\n    );\n  } else {\n    return (\n      <FlowBuilderWrapper>\n        {flow && <div className=\"header\"><p>{flow.name}</p></div>}\n        <div className=\"stage-action\">\n          <BiMessageSquareAdd\n            onClick={handleAddMessage}\n          />\n        </div>\n        {isToolbarActive && <Toolbar id={id} hideToolbar={hideToolbar} bot={flow.bot} flow={flow.id} />}\n        <Stage\n          width={getStageWidth()}\n          height={window.innerHeight - 70}\n          scaleX={state.layerScale}\n          scaleY={state.layerScale}\n          onMouseMove={handleMousePosition}\n          x={0}\n          y={0}\n          onClick={handleClickOnCanvas}>\n          <Layer name=\"layer_1\" draggable onTouchMove={onTouchPinch} onWheel={handleWheel}>\n            <Rect\n              x={-window.innerWidth}\n              y={-window.innerHeight}\n              width={window.innerWidth * 3}\n              height={window.innerHeight * 3}\n              fill=\"\"\n            />\n            {showToolOption && getToolOption()}\n            {builderState &&\n              typeof builderState == 'object' &&\n              builderState.map((item, index) => {\n                var messageHeight = calculateHeightOfMessageBox(item.children);\n                return (\n                  <React.Fragment key={item.id}>\n                    {(item.type === \"default\" && item.next) ? (\n                      <Edge\n                        height={messageHeight}\n                        node1={item.position}\n                        node2={getNextNode(item.next)}\n                      />\n                    ) : null}\n                    {getMessageBox(item, index, messageHeight)}\n                  </React.Fragment>\n                );\n              })}\n          </Layer>\n        </Stage>\n      </FlowBuilderWrapper>\n    );\n  }\n};\nconst getShadowColor = (item) => {\n  if (item.isSelected) {\n    if (item.type == \"default\") {\n      return '#1e824c';\n    } else if (item.type == \"flow\") {\n      return \"#f9ae23\";\n    }\n   \n  } else if (item.isHover) {\n    if (item.type == \"default\") {\n      return '#8078FF';\n    } else if (item.type == \"flow\") {\n      return \"#f9bf3b\";\n    }\n  } else {\n    return '#95bbdf';\n  }\n};\n\nconst getSelectedNode = (state) => {\n  return state.findIndex((obj) => obj.isSelected == true);\n};\n\nconst getMessageIndexWhichHasNextOfGivenMessageId = (state, messageId) => {\n  return state.findIndex((obj) => obj.next == messageId);\n}\n\nconst getHoveredNode = (state) => {\n  return state.findIndex((obj) => obj.isHover == true);\n};\n\nexport default withRouter(FlowBuilder);\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/CreateModal.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/Configure/Telegram.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/messages.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/utils/request.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/footer/index.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/Pagination/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/texts.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Sidebar/index.tsx",["439","440","441","442","443"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/App.tsx",["444","445"],"import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport LandingPage from './pages/LandingPage';\nimport GlobalStyle from './styles/global';\nimport RegisterPage from './pages/auth/RegisterPage';\nimport LoginPage from './pages/auth/LoginPage';\nimport ForgotPassworPage from './pages/auth/ForgotPasswordPage';\nimport { ProtectedRoute } from './routes/ProtectedRoute';\nimport Dashboard from './pages/main/Dashboard/index';\nimport NotFound from './pages/error/404';\nimport { useAuthContext } from './services/Auth/AuthProvider';\nimport Bots from './pages/main/Bots/index';\nimport Flows from './pages/main/Flows/index';\nimport FlowBuilder from './pages/main/Flows/builder';\nimport Templates from './pages/main/Templates/index';\nimport Settings from './pages/main/Settings/index';\nimport ModalProvider from './services/Modal/ModalProvider';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport AppLayout from './components/layout/AppLayout';\n\nconst App: React.FC = () => {\n  const authContext = useAuthContext();\n  return (\n    <ModalProvider>\n      <BrowserRouter>\n        <GlobalStyle />\n        <>\n          <ToastContainer />\n          <Switch>\n            <Route exact path=\"/\" component={LandingPage} />\n            <Route exact path=\"/register\" component={RegisterPage} />\n            <Route exact path=\"/login\" component={LoginPage} />\n            <Route\n              exact\n              path=\"/forgot-password\"\n              component={ForgotPassworPage}\n            />\n            <ProtectedRoute exact path=\"/app\" component={Dashboard} />\n            <ProtectedRoute exact path=\"/bots\" component={Bots} />\n            <ProtectedRoute exact path=\"/bot/:id\" component={Flows} />\n            <ProtectedRoute exact path=\"/bot/flow/:id\" component={ FlowBuilder } />\n            <ProtectedRoute exact path=\"/templates\" component={Templates} />\n            <ProtectedRoute exact path=\"/settings\" component={Settings} />\n            <Route path=\"*\" component={NotFound} />\n          </Switch>\n        </>\n      </BrowserRouter>\n    </ModalProvider>\n  );\n};\n\nexport default App;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/routes/ProtectedRoute.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/auth/LoginPage.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/bots.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/header/index.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/DeleteModal.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Flows/CreateModal.tsx",["446","447"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/Configure/Messenger.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/info/index.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/utils/pagination.ts",["448"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Auth/JWTValidator.ts",["449"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Bots/index.tsx",["450","451","452","453","454","455","456"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/table.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/EditModal.tsx",["457","458"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Builder/BuilderProvider.tsx",["459","460"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/Configure/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/info/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/navbar/styles.ts",[],{"ruleId":"461","severity":1,"message":"462","line":1,"column":39,"nodeType":"463","messageId":"464","endLine":1,"endColumn":45},{"ruleId":"461","severity":1,"message":"465","line":1,"column":47,"nodeType":"463","messageId":"464","endLine":1,"endColumn":56},{"ruleId":"461","severity":1,"message":"466","line":3,"column":59,"nodeType":"463","messageId":"464","endLine":3,"endColumn":75},{"ruleId":"467","severity":1,"message":"468","line":38,"column":59,"nodeType":"469","messageId":"470","endLine":38,"endColumn":61},{"ruleId":"467","severity":1,"message":"468","line":46,"column":19,"nodeType":"469","messageId":"470","endLine":46,"endColumn":21},{"ruleId":"467","severity":1,"message":"468","line":70,"column":21,"nodeType":"469","messageId":"470","endLine":70,"endColumn":23},{"ruleId":"467","severity":1,"message":"468","line":87,"column":21,"nodeType":"469","messageId":"470","endLine":87,"endColumn":23},{"ruleId":"471","severity":1,"message":"472","line":97,"column":6,"nodeType":"473","endLine":97,"endColumn":35,"suggestions":"474"},{"ruleId":"471","severity":1,"message":"475","line":97,"column":7,"nodeType":"476","endLine":97,"endColumn":34},{"ruleId":"467","severity":1,"message":"468","line":209,"column":19,"nodeType":"469","messageId":"470","endLine":209,"endColumn":21},{"ruleId":"467","severity":1,"message":"468","line":235,"column":19,"nodeType":"469","messageId":"470","endLine":235,"endColumn":21},{"ruleId":"467","severity":1,"message":"468","line":258,"column":19,"nodeType":"469","messageId":"470","endLine":258,"endColumn":21},{"ruleId":"461","severity":1,"message":"477","line":2,"column":10,"nodeType":"463","messageId":"464","endLine":2,"endColumn":15},{"ruleId":"461","severity":1,"message":"478","line":18,"column":10,"nodeType":"463","messageId":"464","endLine":18,"endColumn":19},{"ruleId":"467","severity":1,"message":"479","line":24,"column":77,"nodeType":"469","messageId":"470","endLine":24,"endColumn":79},{"ruleId":"471","severity":1,"message":"480","line":44,"column":6,"nodeType":"473","endLine":44,"endColumn":28,"suggestions":"481"},{"ruleId":"482","replacedBy":"483"},{"ruleId":"484","replacedBy":"485"},{"ruleId":"482","replacedBy":"486"},{"ruleId":"484","replacedBy":"487"},{"ruleId":"461","severity":1,"message":"488","line":11,"column":16,"nodeType":"463","messageId":"464","endLine":11,"endColumn":22},{"ruleId":"467","severity":1,"message":"468","line":24,"column":21,"nodeType":"469","messageId":"470","endLine":24,"endColumn":23},{"ruleId":"467","severity":1,"message":"468","line":35,"column":21,"nodeType":"469","messageId":"470","endLine":35,"endColumn":23},{"ruleId":"489","severity":1,"message":"490","line":36,"column":44,"nodeType":"491","messageId":"492","endLine":36,"endColumn":46},{"ruleId":"467","severity":1,"message":"468","line":37,"column":23,"nodeType":"469","messageId":"470","endLine":37,"endColumn":25},{"ruleId":"467","severity":1,"message":"468","line":57,"column":23,"nodeType":"469","messageId":"470","endLine":57,"endColumn":25},{"ruleId":"467","severity":1,"message":"468","line":79,"column":21,"nodeType":"469","messageId":"470","endLine":79,"endColumn":23},{"ruleId":"489","severity":1,"message":"490","line":80,"column":39,"nodeType":"491","messageId":"492","endLine":80,"endColumn":41},{"ruleId":"467","severity":1,"message":"468","line":81,"column":28,"nodeType":"469","messageId":"470","endLine":81,"endColumn":30},{"ruleId":"471","severity":1,"message":"493","line":98,"column":6,"nodeType":"473","endLine":98,"endColumn":8,"suggestions":"494"},{"ruleId":"461","severity":1,"message":"465","line":1,"column":27,"nodeType":"463","messageId":"464","endLine":1,"endColumn":36},{"ruleId":"461","severity":1,"message":"495","line":5,"column":10,"nodeType":"463","messageId":"464","endLine":5,"endColumn":23},{"ruleId":"461","severity":1,"message":"488","line":7,"column":16,"nodeType":"463","messageId":"464","endLine":7,"endColumn":22},{"ruleId":"461","severity":1,"message":"496","line":25,"column":9,"nodeType":"463","messageId":"464","endLine":25,"endColumn":19},{"ruleId":"461","severity":1,"message":"497","line":26,"column":9,"nodeType":"463","messageId":"464","endLine":26,"endColumn":21},{"ruleId":"467","severity":1,"message":"468","line":31,"column":21,"nodeType":"469","messageId":"470","endLine":31,"endColumn":23},{"ruleId":"467","severity":1,"message":"468","line":40,"column":25,"nodeType":"469","messageId":"470","endLine":40,"endColumn":27},{"ruleId":"467","severity":1,"message":"479","line":50,"column":25,"nodeType":"469","messageId":"470","endLine":50,"endColumn":27},{"ruleId":"467","severity":1,"message":"468","line":65,"column":23,"nodeType":"469","messageId":"470","endLine":65,"endColumn":25},{"ruleId":"489","severity":1,"message":"490","line":66,"column":49,"nodeType":"491","messageId":"492","endLine":66,"endColumn":51},{"ruleId":"467","severity":1,"message":"468","line":67,"column":25,"nodeType":"469","messageId":"470","endLine":67,"endColumn":27},{"ruleId":"467","severity":1,"message":"468","line":71,"column":27,"nodeType":"469","messageId":"470","endLine":71,"endColumn":29},{"ruleId":"467","severity":1,"message":"468","line":91,"column":21,"nodeType":"469","messageId":"470","endLine":91,"endColumn":23},{"ruleId":"467","severity":1,"message":"468","line":93,"column":23,"nodeType":"469","messageId":"470","endLine":93,"endColumn":25},{"ruleId":"467","severity":1,"message":"468","line":95,"column":27,"nodeType":"469","messageId":"470","endLine":95,"endColumn":29},{"ruleId":"467","severity":1,"message":"468","line":98,"column":27,"nodeType":"469","messageId":"470","endLine":98,"endColumn":29},{"ruleId":"467","severity":1,"message":"468","line":114,"column":48,"nodeType":"469","messageId":"470","endLine":114,"endColumn":50},{"ruleId":"467","severity":1,"message":"468","line":127,"column":28,"nodeType":"469","messageId":"470","endLine":127,"endColumn":30},{"ruleId":"467","severity":1,"message":"468","line":143,"column":23,"nodeType":"469","messageId":"470","endLine":143,"endColumn":25},{"ruleId":"467","severity":1,"message":"468","line":145,"column":25,"nodeType":"469","messageId":"470","endLine":145,"endColumn":27},{"ruleId":"467","severity":1,"message":"468","line":147,"column":27,"nodeType":"469","messageId":"470","endLine":147,"endColumn":29},{"ruleId":"467","severity":1,"message":"468","line":178,"column":21,"nodeType":"469","messageId":"470","endLine":178,"endColumn":23},{"ruleId":"489","severity":1,"message":"490","line":179,"column":44,"nodeType":"491","messageId":"492","endLine":179,"endColumn":46},{"ruleId":"467","severity":1,"message":"468","line":180,"column":23,"nodeType":"469","messageId":"470","endLine":180,"endColumn":25},{"ruleId":"489","severity":1,"message":"490","line":181,"column":43,"nodeType":"491","messageId":"492","endLine":181,"endColumn":45},{"ruleId":"467","severity":1,"message":"468","line":182,"column":25,"nodeType":"469","messageId":"470","endLine":182,"endColumn":27},{"ruleId":"467","severity":1,"message":"468","line":208,"column":21,"nodeType":"469","messageId":"470","endLine":208,"endColumn":23},{"ruleId":"489","severity":1,"message":"490","line":209,"column":44,"nodeType":"491","messageId":"492","endLine":209,"endColumn":46},{"ruleId":"467","severity":1,"message":"468","line":210,"column":23,"nodeType":"469","messageId":"470","endLine":210,"endColumn":25},{"ruleId":"489","severity":1,"message":"490","line":211,"column":43,"nodeType":"491","messageId":"492","endLine":211,"endColumn":45},{"ruleId":"467","severity":1,"message":"468","line":212,"column":25,"nodeType":"469","messageId":"470","endLine":212,"endColumn":27},{"ruleId":"467","severity":1,"message":"468","line":232,"column":21,"nodeType":"469","messageId":"470","endLine":232,"endColumn":23},{"ruleId":"489","severity":1,"message":"498","line":255,"column":70,"nodeType":"491","messageId":"499","endLine":255,"endColumn":72},{"ruleId":"500","severity":1,"message":"501","line":263,"column":23,"nodeType":"502","endLine":263,"endColumn":74},{"ruleId":"482","replacedBy":"503"},{"ruleId":"484","replacedBy":"504"},{"ruleId":"482","replacedBy":"505"},{"ruleId":"484","replacedBy":"506"},{"ruleId":"461","severity":1,"message":"507","line":28,"column":25,"nodeType":"463","messageId":"464","endLine":28,"endColumn":39},{"ruleId":"461","severity":1,"message":"508","line":2,"column":8,"nodeType":"463","messageId":"464","endLine":2,"endColumn":17},{"ruleId":"467","severity":1,"message":"468","line":88,"column":23,"nodeType":"469","messageId":"470","endLine":88,"endColumn":25},{"ruleId":"467","severity":1,"message":"468","line":91,"column":17,"nodeType":"469","messageId":"470","endLine":91,"endColumn":19},{"ruleId":"467","severity":1,"message":"468","line":100,"column":23,"nodeType":"469","messageId":"470","endLine":100,"endColumn":25},{"ruleId":"471","severity":1,"message":"509","line":136,"column":6,"nodeType":"473","endLine":136,"endColumn":28,"suggestions":"510"},{"ruleId":"482","replacedBy":"511"},{"ruleId":"484","replacedBy":"512"},{"ruleId":"461","severity":1,"message":"513","line":2,"column":10,"nodeType":"463","messageId":"464","endLine":2,"endColumn":20},{"ruleId":"461","severity":1,"message":"514","line":3,"column":10,"nodeType":"463","messageId":"464","endLine":3,"endColumn":15},{"ruleId":"461","severity":1,"message":"515","line":2,"column":8,"nodeType":"463","messageId":"464","endLine":2,"endColumn":15},{"ruleId":"461","severity":1,"message":"516","line":5,"column":10,"nodeType":"463","messageId":"464","endLine":5,"endColumn":20},{"ruleId":"461","severity":1,"message":"517","line":1,"column":17,"nodeType":"463","messageId":"464","endLine":1,"endColumn":25},{"ruleId":"461","severity":1,"message":"465","line":1,"column":27,"nodeType":"463","messageId":"464","endLine":1,"endColumn":36},{"ruleId":"467","severity":1,"message":"479","line":20,"column":34,"nodeType":"469","messageId":"470","endLine":20,"endColumn":36},{"ruleId":"467","severity":1,"message":"479","line":47,"column":34,"nodeType":"469","messageId":"470","endLine":47,"endColumn":36},{"ruleId":"461","severity":1,"message":"462","line":1,"column":27,"nodeType":"463","messageId":"464","endLine":1,"endColumn":33},{"ruleId":"461","severity":1,"message":"465","line":1,"column":35,"nodeType":"463","messageId":"464","endLine":1,"endColumn":44},{"ruleId":"461","severity":1,"message":"518","line":2,"column":43,"nodeType":"463","messageId":"464","endLine":2,"endColumn":49},{"ruleId":"467","severity":1,"message":"468","line":185,"column":56,"nodeType":"469","messageId":"470","endLine":185,"endColumn":58},{"ruleId":"461","severity":1,"message":"519","line":309,"column":7,"nodeType":"463","messageId":"464","endLine":309,"endColumn":17},{"ruleId":"461","severity":1,"message":"520","line":11,"column":35,"nodeType":"463","messageId":"464","endLine":11,"endColumn":41},{"ruleId":"467","severity":1,"message":"468","line":19,"column":28,"nodeType":"469","messageId":"470","endLine":19,"endColumn":30},{"ruleId":"489","severity":1,"message":"490","line":20,"column":44,"nodeType":"491","messageId":"492","endLine":20,"endColumn":46},{"ruleId":"467","severity":1,"message":"468","line":21,"column":30,"nodeType":"469","messageId":"470","endLine":21,"endColumn":32},{"ruleId":"489","severity":1,"message":"490","line":22,"column":46,"nodeType":"491","messageId":"492","endLine":22,"endColumn":48},{"ruleId":"467","severity":1,"message":"468","line":23,"column":35,"nodeType":"469","messageId":"470","endLine":23,"endColumn":37},{"ruleId":"467","severity":1,"message":"468","line":51,"column":25,"nodeType":"469","messageId":"470","endLine":51,"endColumn":27},{"ruleId":"489","severity":1,"message":"490","line":52,"column":45,"nodeType":"491","messageId":"492","endLine":52,"endColumn":47},{"ruleId":"467","severity":1,"message":"468","line":53,"column":26,"nodeType":"469","messageId":"470","endLine":53,"endColumn":28},{"ruleId":"467","severity":1,"message":"468","line":55,"column":33,"nodeType":"469","messageId":"470","endLine":55,"endColumn":35},{"ruleId":"471","severity":1,"message":"521","line":76,"column":6,"nodeType":"473","endLine":76,"endColumn":26,"suggestions":"522"},{"ruleId":"461","severity":1,"message":"523","line":2,"column":10,"nodeType":"463","messageId":"464","endLine":2,"endColumn":14},{"ruleId":"461","severity":1,"message":"524","line":5,"column":22,"nodeType":"463","messageId":"464","endLine":5,"endColumn":30},{"ruleId":"461","severity":1,"message":"508","line":2,"column":8,"nodeType":"463","messageId":"464","endLine":2,"endColumn":17},{"ruleId":"461","severity":1,"message":"525","line":4,"column":30,"nodeType":"463","messageId":"464","endLine":4,"endColumn":35},{"ruleId":"461","severity":1,"message":"526","line":44,"column":17,"nodeType":"463","messageId":"464","endLine":44,"endColumn":25},{"ruleId":"467","severity":1,"message":"468","line":54,"column":64,"nodeType":"469","messageId":"470","endLine":54,"endColumn":66},{"ruleId":"467","severity":1,"message":"468","line":55,"column":21,"nodeType":"469","messageId":"470","endLine":55,"endColumn":23},{"ruleId":"467","severity":1,"message":"468","line":181,"column":21,"nodeType":"469","messageId":"470","endLine":181,"endColumn":23},{"ruleId":"467","severity":1,"message":"468","line":184,"column":21,"nodeType":"469","messageId":"470","endLine":184,"endColumn":23},{"ruleId":"467","severity":1,"message":"468","line":193,"column":21,"nodeType":"469","messageId":"470","endLine":193,"endColumn":23},{"ruleId":"467","severity":1,"message":"468","line":207,"column":21,"nodeType":"469","messageId":"470","endLine":207,"endColumn":23},{"ruleId":"467","severity":1,"message":"468","line":210,"column":21,"nodeType":"469","messageId":"470","endLine":210,"endColumn":23},{"ruleId":"467","severity":1,"message":"468","line":219,"column":21,"nodeType":"469","messageId":"470","endLine":219,"endColumn":23},{"ruleId":"467","severity":1,"message":"468","line":231,"column":19,"nodeType":"469","messageId":"470","endLine":231,"endColumn":21},{"ruleId":"467","severity":1,"message":"468","line":248,"column":23,"nodeType":"469","messageId":"470","endLine":248,"endColumn":25},{"ruleId":"467","severity":1,"message":"468","line":268,"column":23,"nodeType":"469","messageId":"470","endLine":268,"endColumn":25},{"ruleId":"467","severity":1,"message":"468","line":270,"column":28,"nodeType":"469","messageId":"470","endLine":270,"endColumn":30},{"ruleId":"467","severity":1,"message":"468","line":272,"column":33,"nodeType":"469","messageId":"470","endLine":272,"endColumn":35},{"ruleId":"467","severity":1,"message":"479","line":303,"column":30,"nodeType":"469","messageId":"470","endLine":303,"endColumn":32},{"ruleId":"467","severity":1,"message":"468","line":310,"column":31,"nodeType":"469","messageId":"470","endLine":310,"endColumn":33},{"ruleId":"467","severity":1,"message":"468","line":327,"column":31,"nodeType":"469","messageId":"470","endLine":327,"endColumn":33},{"ruleId":"489","severity":1,"message":"490","line":328,"column":47,"nodeType":"491","messageId":"492","endLine":328,"endColumn":49},{"ruleId":"467","severity":1,"message":"468","line":329,"column":36,"nodeType":"469","messageId":"470","endLine":329,"endColumn":38},{"ruleId":"489","severity":1,"message":"490","line":330,"column":52,"nodeType":"491","messageId":"492","endLine":330,"endColumn":54},{"ruleId":"467","severity":1,"message":"468","line":331,"column":41,"nodeType":"469","messageId":"470","endLine":331,"endColumn":43},{"ruleId":"467","severity":1,"message":"468","line":378,"column":19,"nodeType":"469","messageId":"470","endLine":378,"endColumn":21},{"ruleId":"467","severity":1,"message":"468","line":405,"column":17,"nodeType":"469","messageId":"470","endLine":405,"endColumn":19},{"ruleId":"467","severity":1,"message":"468","line":439,"column":27,"nodeType":"469","messageId":"470","endLine":439,"endColumn":29},{"ruleId":"467","severity":1,"message":"468","line":456,"column":27,"nodeType":"469","messageId":"470","endLine":456,"endColumn":29},{"ruleId":"467","severity":1,"message":"468","line":458,"column":32,"nodeType":"469","messageId":"470","endLine":458,"endColumn":34},{"ruleId":"467","severity":1,"message":"468","line":460,"column":37,"nodeType":"469","messageId":"470","endLine":460,"endColumn":39},{"ruleId":"467","severity":1,"message":"468","line":498,"column":25,"nodeType":"469","messageId":"470","endLine":498,"endColumn":27},{"ruleId":"467","severity":1,"message":"468","line":516,"column":27,"nodeType":"469","messageId":"470","endLine":516,"endColumn":29},{"ruleId":"467","severity":1,"message":"468","line":518,"column":32,"nodeType":"469","messageId":"470","endLine":518,"endColumn":34},{"ruleId":"467","severity":1,"message":"468","line":520,"column":37,"nodeType":"469","messageId":"470","endLine":520,"endColumn":39},{"ruleId":"467","severity":1,"message":"468","line":549,"column":23,"nodeType":"469","messageId":"470","endLine":549,"endColumn":25},{"ruleId":"467","severity":1,"message":"468","line":559,"column":25,"nodeType":"469","messageId":"470","endLine":559,"endColumn":27},{"ruleId":"467","severity":1,"message":"468","line":561,"column":30,"nodeType":"469","messageId":"470","endLine":561,"endColumn":32},{"ruleId":"467","severity":1,"message":"468","line":563,"column":35,"nodeType":"469","messageId":"470","endLine":563,"endColumn":37},{"ruleId":"471","severity":1,"message":"527","line":598,"column":6,"nodeType":"473","endLine":598,"endColumn":8,"suggestions":"528"},{"ruleId":"467","severity":1,"message":"468","line":897,"column":19,"nodeType":"469","messageId":"470","endLine":897,"endColumn":21},{"ruleId":"467","severity":1,"message":"468","line":899,"column":26,"nodeType":"469","messageId":"470","endLine":899,"endColumn":28},{"ruleId":"467","severity":1,"message":"468","line":963,"column":19,"nodeType":"469","messageId":"470","endLine":963,"endColumn":21},{"ruleId":"467","severity":1,"message":"468","line":965,"column":26,"nodeType":"469","messageId":"470","endLine":965,"endColumn":28},{"ruleId":"467","severity":1,"message":"468","line":970,"column":19,"nodeType":"469","messageId":"470","endLine":970,"endColumn":21},{"ruleId":"467","severity":1,"message":"468","line":972,"column":26,"nodeType":"469","messageId":"470","endLine":972,"endColumn":28},{"ruleId":"467","severity":1,"message":"468","line":981,"column":50,"nodeType":"469","messageId":"470","endLine":981,"endColumn":52},{"ruleId":"467","severity":1,"message":"468","line":985,"column":44,"nodeType":"469","messageId":"470","endLine":985,"endColumn":46},{"ruleId":"467","severity":1,"message":"468","line":989,"column":47,"nodeType":"469","messageId":"470","endLine":989,"endColumn":49},{"ruleId":"461","severity":1,"message":"529","line":1,"column":36,"nodeType":"463","messageId":"464","endLine":1,"endColumn":39},{"ruleId":"461","severity":1,"message":"530","line":7,"column":10,"nodeType":"463","messageId":"464","endLine":7,"endColumn":21},{"ruleId":"461","severity":1,"message":"531","line":9,"column":10,"nodeType":"463","messageId":"464","endLine":9,"endColumn":25},{"ruleId":"471","severity":1,"message":"532","line":41,"column":6,"nodeType":"473","endLine":41,"endColumn":14,"suggestions":"533"},{"ruleId":"534","severity":1,"message":"535","line":62,"column":13,"nodeType":"502","endLine":62,"endColumn":45},{"ruleId":"461","severity":1,"message":"508","line":20,"column":8,"nodeType":"463","messageId":"464","endLine":20,"endColumn":17},{"ruleId":"461","severity":1,"message":"536","line":23,"column":9,"nodeType":"463","messageId":"464","endLine":23,"endColumn":20},{"ruleId":"461","severity":1,"message":"462","line":1,"column":27,"nodeType":"463","messageId":"464","endLine":1,"endColumn":33},{"ruleId":"461","severity":1,"message":"465","line":1,"column":35,"nodeType":"463","messageId":"464","endLine":1,"endColumn":44},{"ruleId":"537","severity":1,"message":"538","line":1,"column":1,"nodeType":"539","endLine":30,"endColumn":2},{"ruleId":"537","severity":1,"message":"538","line":3,"column":1,"nodeType":"539","endLine":12,"endColumn":3},{"ruleId":"461","severity":1,"message":"540","line":2,"column":27,"nodeType":"463","messageId":"464","endLine":2,"endColumn":33},{"ruleId":"461","severity":1,"message":"541","line":2,"column":41,"nodeType":"463","messageId":"464","endLine":2,"endColumn":46},{"ruleId":"461","severity":1,"message":"542","line":2,"column":48,"nodeType":"463","messageId":"464","endLine":2,"endColumn":54},{"ruleId":"461","severity":1,"message":"543","line":14,"column":8,"nodeType":"463","messageId":"464","endLine":14,"endColumn":20},{"ruleId":"467","severity":1,"message":"468","line":83,"column":23,"nodeType":"469","messageId":"470","endLine":83,"endColumn":25},{"ruleId":"467","severity":1,"message":"468","line":86,"column":17,"nodeType":"469","messageId":"470","endLine":86,"endColumn":19},{"ruleId":"467","severity":1,"message":"468","line":95,"column":23,"nodeType":"469","messageId":"470","endLine":95,"endColumn":25},{"ruleId":"461","severity":1,"message":"462","line":1,"column":27,"nodeType":"463","messageId":"464","endLine":1,"endColumn":33},{"ruleId":"461","severity":1,"message":"465","line":1,"column":35,"nodeType":"463","messageId":"464","endLine":1,"endColumn":44},{"ruleId":"461","severity":1,"message":"544","line":2,"column":10,"nodeType":"463","messageId":"464","endLine":2,"endColumn":23},{"ruleId":"461","severity":1,"message":"488","line":3,"column":16,"nodeType":"463","messageId":"464","endLine":3,"endColumn":22},"@typescript-eslint/no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'BtnEditorWrapper' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'builderState', 'objIndex', and 'setValue'. Either include them or remove the dependency array.","ArrayExpression",["545"],"React Hook React.useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","MemberExpression","'toast' is defined but never used.","'isLoading' is assigned a value but never used.","Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'bot' and 'getFlowsData'. Either include them or remove the dependency array.",["546"],"no-native-reassign",["547"],"no-negated-in-lhs",["548"],["547"],["548"],"'uuidv4' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'register'. Either include it or remove the dependency array.",["549"],"'AddTextButton' is defined but never used.","'headingRef' is assigned a value but never used.","'paragraphRef' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",["547"],["548"],["547"],["548"],"'onRequestClose' is assigned a value but never used.","'AppLayout' is defined but never used.","React Hook useEffect has a missing dependency: 'botId'. Either include it or remove the dependency array.",["550"],["547"],["548"],"'darkerGrey' is defined but never used.","'media' is defined but never used.","'Toolbar' is defined but never used.","'AuthButton' is defined but never used.","'useState' is defined but never used.","'Circle' is defined but never used.","'onTouchEnd' is assigned a value but never used.","'errors' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'setValue'. Either include it or remove the dependency array.",["551"],"'grey' is defined but never used.","'FormLink' is defined but never used.","'Image' is defined but never used.","'setState' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'props.match.params.id' and 'setBuilderState'. Either include them or remove the dependency array.",["552"],"'Ref' is defined but never used.","'TiFlowMerge' is defined but never used.","'IoSettingsSharp' is defined but never used.","React Hook useEffect has a missing dependency: 'handleSidebarState'. Either include it or remove the dependency array. If 'handleSidebarState' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["553"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'authContext' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'ConfigureBot' is defined but never used.","'FlowStateType' is defined but never used.",{"desc":"554","fix":"555"},{"desc":"556","fix":"557"},"no-global-assign","no-unsafe-negation",{"desc":"558","fix":"559"},{"desc":"560","fix":"561"},{"desc":"562","fix":"563"},{"desc":"564","fix":"565"},{"desc":"566","fix":"567"},"Update the dependencies array to be: [builderState, objIndex, setValue]",{"range":"568","text":"569"},"Update the dependencies array to be: [pageNumber, lastPage, getFlowsData, bot]",{"range":"570","text":"571"},"Update the dependencies array to be: [register]",{"range":"572","text":"573"},"Update the dependencies array to be: [pageNumber, lastPage, botId]",{"range":"574","text":"575"},"Update the dependencies array to be: [editorContent.name, setValue]",{"range":"576","text":"577"},"Update the dependencies array to be: [props.match.params.id, setBuilderState]",{"range":"578","text":"579"},"Update the dependencies array to be: [handleSidebarState, isOpen]",{"range":"580","text":"581"},[3102,3131],"[builderState, objIndex, setValue]",[1398,1420],"[pageNumber, lastPage, getFlowsData, bot]",[3089,3091],"[register]",[4112,4134],"[pageNumber, lastPage, botId]",[2393,2413],"[editorContent.name, setValue]",[18229,18231],"[props.match.params.id, setBuilderState]",[1369,1377],"[handleSidebarState, isOpen]"]