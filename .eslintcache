[{"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Flows/builder.tsx":"1","/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/bots.ts":"2","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Flows/index.tsx":"3","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Flows/CreateModal.tsx":"4","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Flows/EditModal.tsx":"5","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/Configure/Messenger.tsx":"6","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/Configure/Slack.tsx":"7","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Flows/DeleteModal.tsx":"8","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/Configure/Telegram.tsx":"9","/home/rabinson/Freelancing/ShipboardBot/frontend/src/index.tsx":"10","/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Auth/AuthProvider.tsx":"11","/home/rabinson/Freelancing/ShipboardBot/frontend/src/utils/storage.ts":"12","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/LandingPage.tsx":"13","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/auth/ForgotPasswordPage.tsx":"14","/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Modal/ModalProvider.tsx":"15","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/typography.ts":"16","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/form.ts":"17","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/header/index.tsx":"18","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/Pagination/index.tsx":"19","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Flows/styles.ts":"20","/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/messages.ts":"21","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/DeleteModal.tsx":"22","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Toolbar/index.tsx":"23","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/Pagination/styles.ts":"24","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/navbar/index.tsx":"25","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Toolbar/styles.ts":"26","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Toolbar/BtnEditor.tsx":"27","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Text/index.tsx":"28","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/feature/styles.ts":"29","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/footer/styles.ts":"30","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Image/styles.ts":"31","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Card/styles.ts":"32","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Card/index.tsx":"33","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Modals/ConnectFlow.tsx":"34","/home/rabinson/Freelancing/ShipboardBot/frontend/src/App.tsx":"35","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/auth/RegisterPage.tsx":"36","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Templates/index.tsx":"37","/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/auth.ts":"38","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/Dropdown/styles.ts":"39","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/CreateModal.tsx":"40","/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/buttons.ts":"41","/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Builder/BuilderProvider.tsx":"42","/home/rabinson/Freelancing/ShipboardBot/frontend/src/utils/request.ts":"43","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/header/styles.ts":"44","/home/rabinson/Freelancing/ShipboardBot/frontend/src/utils/pagination.ts":"45","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/footer/index.tsx":"46","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/info/index.tsx":"47","/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/images.ts":"48","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Image/index.tsx":"49","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Sidebar/index.tsx":"50","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Text/styles.ts":"51","/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Auth/reducer.ts":"52","/home/rabinson/Freelancing/ShipboardBot/frontend/src/routes/ProtectedRoute.tsx":"53","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/auth/LoginPage.tsx":"54","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Settings/index.tsx":"55","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/buttons.ts":"56","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/table.ts":"57","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/layout/AuthLayout.tsx":"58","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/EditModal.tsx":"59","/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/texts.ts":"60","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Sidebar/styles.ts":"61","/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Auth/JWTValidator.ts":"62","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Dashboard/index.tsx":"63","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/layout/AppLayout.tsx":"64","/home/rabinson/Freelancing/ShipboardBot/frontend/src/constants/urls.ts":"65","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Modals/styles.ts":"66","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/error/404.tsx":"67","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Bots/index.tsx":"68","/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/flows.ts":"69","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/feature/index.tsx":"70","/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/cards.ts":"71","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/navbar/styles.ts":"72","/home/rabinson/Freelancing/ShipboardBot/frontend/src/styles/mediaQueries.ts":"73","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/info/styles.ts":"74","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/grid.ts":"75"},{"size":29768,"mtime":1612891090396,"results":"76","hashOfConfig":"77"},{"size":1387,"mtime":1612885626225,"results":"78","hashOfConfig":"77"},{"size":8928,"mtime":1612887533074,"results":"79","hashOfConfig":"77"},{"size":2347,"mtime":1611495697651,"results":"80","hashOfConfig":"77"},{"size":2316,"mtime":1612681211971,"results":"81","hashOfConfig":"77"},{"size":6227,"mtime":1613011646803,"results":"82","hashOfConfig":"77"},{"size":4641,"mtime":1613011788960,"results":"83","hashOfConfig":"77"},{"size":1488,"mtime":1611506630557,"results":"84","hashOfConfig":"77"},{"size":4972,"mtime":1612887697390,"results":"85","hashOfConfig":"77"},{"size":515,"mtime":1607764359769,"results":"86","hashOfConfig":"77"},{"size":1534,"mtime":1607842467004,"results":"87","hashOfConfig":"77"},{"size":330,"mtime":1606965896953,"results":"88","hashOfConfig":"77"},{"size":395,"mtime":1606572185322,"results":"89","hashOfConfig":"77"},{"size":2699,"mtime":1607850305009,"results":"90","hashOfConfig":"77"},{"size":3582,"mtime":1612584637978,"results":"91","hashOfConfig":"77"},{"size":1320,"mtime":1609667047505,"results":"92","hashOfConfig":"77"},{"size":1603,"mtime":1612803710437,"results":"93","hashOfConfig":"77"},{"size":962,"mtime":1607398449634,"results":"94","hashOfConfig":"77"},{"size":1583,"mtime":1611403993930,"results":"95","hashOfConfig":"77"},{"size":1334,"mtime":1612721735370,"results":"96","hashOfConfig":"77"},{"size":1279,"mtime":1612715948412,"results":"97","hashOfConfig":"77"},{"size":1475,"mtime":1611506512498,"results":"98","hashOfConfig":"77"},{"size":9213,"mtime":1612927498787,"results":"99","hashOfConfig":"77"},{"size":739,"mtime":1612585684875,"results":"100","hashOfConfig":"77"},{"size":717,"mtime":1607357496043,"results":"101","hashOfConfig":"77"},{"size":4275,"mtime":1612803540319,"results":"102","hashOfConfig":"77"},{"size":3134,"mtime":1612807706134,"results":"103","hashOfConfig":"77"},{"size":4677,"mtime":1612836634935,"results":"104","hashOfConfig":"77"},{"size":707,"mtime":1606842094420,"results":"105","hashOfConfig":"77"},{"size":758,"mtime":1607358268935,"results":"106","hashOfConfig":"77"},{"size":1691,"mtime":1612625185277,"results":"107","hashOfConfig":"77"},{"size":2734,"mtime":1610160143779,"results":"108","hashOfConfig":"77"},{"size":10895,"mtime":1612840010182,"results":"109","hashOfConfig":"77"},{"size":2919,"mtime":1612694265888,"results":"110","hashOfConfig":"77"},{"size":2168,"mtime":1611544707887,"results":"111","hashOfConfig":"77"},{"size":4457,"mtime":1607849994798,"results":"112","hashOfConfig":"77"},{"size":210,"mtime":1610158645219,"results":"113","hashOfConfig":"77"},{"size":1159,"mtime":1607840479831,"results":"114","hashOfConfig":"77"},{"size":603,"mtime":1611407912500,"results":"115","hashOfConfig":"77"},{"size":2305,"mtime":1611506040626,"results":"116","hashOfConfig":"77"},{"size":1105,"mtime":1612716373558,"results":"117","hashOfConfig":"77"},{"size":1239,"mtime":1611592415760,"results":"118","hashOfConfig":"77"},{"size":494,"mtime":1607840291044,"results":"119","hashOfConfig":"77"},{"size":2194,"mtime":1607358477789,"results":"120","hashOfConfig":"77"},{"size":570,"mtime":1607912715680,"results":"121","hashOfConfig":"77"},{"size":795,"mtime":1607276608868,"results":"122","hashOfConfig":"77"},{"size":1029,"mtime":1607690783508,"results":"123","hashOfConfig":"77"},{"size":765,"mtime":1611888511608,"results":"124","hashOfConfig":"77"},{"size":3108,"mtime":1612614260275,"results":"125","hashOfConfig":"77"},{"size":3424,"mtime":1612664150234,"results":"126","hashOfConfig":"77"},{"size":1226,"mtime":1612753801902,"results":"127","hashOfConfig":"77"},{"size":442,"mtime":1607166058000,"results":"128","hashOfConfig":"77"},{"size":944,"mtime":1611287624293,"results":"129","hashOfConfig":"77"},{"size":3083,"mtime":1608089518101,"results":"130","hashOfConfig":"77"},{"size":218,"mtime":1607998072129,"results":"131","hashOfConfig":"77"},{"size":2591,"mtime":1612611015356,"results":"132","hashOfConfig":"77"},{"size":1454,"mtime":1611403637931,"results":"133","hashOfConfig":"77"},{"size":3062,"mtime":1607357777066,"results":"134","hashOfConfig":"77"},{"size":2326,"mtime":1611505989860,"results":"135","hashOfConfig":"77"},{"size":670,"mtime":1611717938172,"results":"136","hashOfConfig":"77"},{"size":2446,"mtime":1612319962325,"results":"137","hashOfConfig":"77"},{"size":299,"mtime":1607173241742,"results":"138","hashOfConfig":"77"},{"size":159,"mtime":1607998049825,"results":"139","hashOfConfig":"77"},{"size":1229,"mtime":1612693589486,"results":"140","hashOfConfig":"77"},{"size":678,"mtime":1612687519777,"results":"141","hashOfConfig":"77"},{"size":386,"mtime":1612599018149,"results":"142","hashOfConfig":"77"},{"size":467,"mtime":1608091184084,"results":"143","hashOfConfig":"77"},{"size":5737,"mtime":1612693872474,"results":"144","hashOfConfig":"77"},{"size":1159,"mtime":1612595843755,"results":"145","hashOfConfig":"77"},{"size":2469,"mtime":1607354234054,"results":"146","hashOfConfig":"77"},{"size":1341,"mtime":1612234206822,"results":"147","hashOfConfig":"77"},{"size":596,"mtime":1607358244451,"results":"148","hashOfConfig":"77"},{"size":437,"mtime":1607357171179,"results":"149","hashOfConfig":"77"},{"size":1251,"mtime":1607358308147,"results":"150","hashOfConfig":"77"},{"size":2292,"mtime":1612667221062,"results":"151","hashOfConfig":"77"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":51,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"155"},"v8ty68",{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"162"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"169"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"162"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"169"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"162"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"158"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"162"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"221"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"169"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"169"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","errorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"186"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"162"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"169"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"162"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"169"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"266"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"186"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"186"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"286","messages":"287","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"158"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"169"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"155"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"158"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"162"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"309","messages":"310","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"169"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"158"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Flows/builder.tsx",["335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385"],"import React, { useState } from 'react';\nimport {withRouter} from 'react-router-dom'\nimport { FlowBuilderWrapper } from './styles';\nimport { Stage, Layer, Rect, Image, Text, Group, Circle } from 'react-konva';\nimport Toolbar from '../../../components/dashboard/builder/Toolbar/index';\nimport PuffLoader from \"react-spinners/PuffLoader\";\n\nimport {\n  handleRenderingCards,\n  getImage,\n  calculateHeightOfMessageBox,\n  handleWheel,\n  onTouchPinch,\n  Edge,\n  URLImage,\n} from './helper';\nimport {\n  useBuilder,\n} from '../../../services/Builder/BuilderProvider';\nimport { BiMessageSquareAdd } from 'react-icons/bi';\nimport { saveMessage, getMessages, updateMessage, deleteMessage, createAndConnectMessage } from '../../../apis/messages';\nimport { toast } from 'react-toastify';\nimport { getFlow } from '../../../apis/flows';\nimport { createAndConnectWithButton, updateButton } from '../../../apis/buttons';\nimport Konva from 'konva';\n\nconst FlowBuilder = (props) => {\n  const [isToolbarActive, setIsToolbarActive] = useState(null);\n  const [builderState, setBuilderState, sidebar] = useBuilder();\n  const [flow, setFlow] = useState(null);\n  const [id, setId] = useState(null);\n  const [mousePosition, setMousePosition] = useState({\n    x: 0,\n    y: 0,\n  });\n  const [isEdging, setIsSetting] = useState(false);\n  const [showToolOption, setShowToolOption] = useState(false);\n  const [edgingMessageId, setEdgingMessageId] = useState(null);\n  const [edgingButtonId, setEdgingButtonId] = useState(null);\n  const [edgingButtonMessageId, setEdgingButtonMessageId] = useState(null);\n  const [edgingButtonChildId, setEdgingButtonChildId] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const [state, setState] = useState({\n    layerScale: 1,\n    layerX: 0,\n    layerY: 0,\n  });\n\n  const TrashIcon = \"data:image/svg+xml;base64,\" + window.btoa('<svg stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" viewBox=\"0 0 24 24\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"none\" d=\"M17.004 20L17.003 8h-1-8-1v12H17.004zM13.003 10h2v8h-2V10zM9.003 10h2v8h-2V10zM9.003 4H15.003V6H9.003z\"></path><path d=\"M5.003,20c0,1.103,0.897,2,2,2h10c1.103,0,2-0.897,2-2V8h2V6h-3h-1V4c0-1.103-0.897-2-2-2h-6c-1.103,0-2,0.897-2,2v2h-1h-3 v2h2V20z M9.003,4h6v2h-6V4z M8.003,8h8h1l0.001,12H7.003V8H8.003z\"></path><path d=\"M9.003 10H11.003V18H9.003zM13.003 10H15.003V18H13.003z\"></path></svg>');\n\n  const getNextNode = (id) => {\n    if (id) {\n      const nextIndex = builderState.findIndex((obj) => obj.id == id);\n      if (nextIndex == -1) {\n        return mousePosition;\n      }\n      return builderState[nextIndex].position;\n    }\n  };\n\n  const hideToolbar = () => {\n    setIsToolbarActive(false);\n    setId(0);\n  };\n\n  const showToolbar = (id) => {\n    setId(id);\n    setIsToolbarActive(true);\n  };\n\n \nconst handleRenderingChildrens = (message) => {\n  var lastPosition = 70;\n  return message.children.map(function (child) {\n    var yposition = lastPosition;\n    if (child.type === 'card') {\n      lastPosition = lastPosition + child.cards[0].height;\n    } else if (child.type === 'text') {\n      const buttons = child.buttons.length;\n      lastPosition = lastPosition + child.height + (buttons * 40) + 40;\n    } else if (child.type === 'image') {\n      lastPosition = lastPosition + child.height + 20;\n    }\n    return getChildren(message, child, yposition);\n  });\n};\n  \n  const getChildren = (message, child, lastPosition) => {\n    // var messageHeight = calculateHeightOfMessageBox(message.children);\n  if (child.type === 'text') {\n    var textButtons = child.buttons;\n    var boxHeight = (child.height * 1.05) + (textButtons.length * 40) + 10;\n    return (\n      <Group x={20} y={lastPosition}>\n        <Rect\n          fill=\"#F0F4F7\"\n          cornerRadius={5}\n          height={boxHeight}\n          width={300}\n          stroke=\"lightGrey\"\n          strokeWidth={1}\n          shadowColor=\"#95bbdf\"\n          shadowOpacity={0.5}\n          shadowBlur={7}\n        />\n        <Text\n          x={15}\n          y={7}\n          text={child.value}\n          fontSize={15}\n          lineHeight={1.2}\n          width={280}\n        />\n        {child.buttons.map((button, index) => {\n          var y = (child.height * 1.05) + (40 * index) + 10;\n          var node2 = getNextNode(button.next);\n          return (\n            <Group key={button.id}>\n              { button.next &&\n                  <Edge\n                    height={boxHeight}\n                    node1={{ x: -60, y: - boxHeight + 30 + (y)}}\n                    node2={{ x: node2.x - message.position.x -20, y: node2.y - message.position.y - 80}}\n                    width={20}\n                  />\n              }\n              <Rect\n                x={25}\n                y={y}\n                fill=\"#FFFFFF\"\n                cornerRadius={5}\n                height={30}\n                width={250}\n                shadowOpacity={0.5}\n                shadowBlur={7}\n                align={\"center\"}\n              />\n              <Text\n                x={10}\n                y={y + 3}\n                text={button.name}\n                fontSize={15}\n                width={280}\n                lineHeight={1.5}\n                align={\"center\"}\n              />\n              <Circle x={260} y={y + 14} radius={9} fill=\"#8392AB\" strokeWidth={1}\n                onMouseOver={() => { document.body.style.cursor = 'pointer' }}\n                onMouseOut={() => { document.body.style.cursor = 'default' }}\n                onClick={(e) => {\n                  e.cancelBubble = true;\n                  connectButtonEdge(message.id, child.id, button.id)\n                }}\n             />\n            </Group>\n          );\n         })}\n      </Group>\n    );\n  } else if (child.type === 'image') {\n    return getImage(child, lastPosition);\n  } else if (child.type === 'card') {\n    return (\n      <Group x={20} y={lastPosition}>\n        {handleRenderingCards(child)}\n      </Group>\n    );\n  }\n};\n\n  const getStageWidth = () => {\n    return sidebar ? window.innerWidth - 280 : window.innerWidth - 90;\n  };\n\n  const setSelectedTrue = (messageId) => {\n    var previousSelected = getSelectedNode(builderState);\n    if (previousSelected >= 0) {\n      setBuilderState(\n        builderState.map((item, index) => {\n          if (index == messageId) {\n            item.isSelected = true;\n          }\n          if (index == previousSelected) {\n            item.isSelected = false;\n          }\n          return item;\n        })\n      );\n    } else {\n      setBuilderState(\n        builderState.map((item, index) => {\n          if (index == messageId) {\n            item.isSelected = true;\n          }\n          return item;\n        })\n      );\n    }\n  };\n\n  const setHoverTrue = (messageId) => {\n    var previousHover = getHoveredNode(builderState);\n    if (previousHover >= 0) {\n      setBuilderState(\n        builderState.map((item, index) => {\n          if (index == messageId) {\n            item.isHover = true;\n          }\n          if (index == previousHover) {\n            item.isHover = false;\n          }\n          return item;\n        })\n      );\n    } else {\n      setBuilderState(\n        builderState.map((item, index) => {\n          if (index == messageId) {\n            item.isHover = true;\n          }\n          return item;\n        })\n      );\n    }\n  };\n\n  const setHoverFalse = (messageId) => {\n    setBuilderState(\n      builderState.map((item, index) => {\n        if (index == messageId) {\n          item.isHover = false;\n        }\n        return item;\n      })\n    );\n  };\n\n  const connectEdge = (messageId) => {\n    setEdgingButtonId(null);\n    setEdgingMessageId(null);\n\n    if (!showToolOption) {\n      setIsSetting(true);\n      setEdgingMessageId(messageId);\n      setBuilderState(\n        builderState.map((item) => {\n          if (item.id == messageId) {\n            item.next = 'dummy';\n          }\n          return item;\n        })\n      );\n    }\n  };\n\n  const connectButtonEdge = (messageId, childId, buttonId) => {\n    setEdgingButtonId(null);\n    setEdgingMessageId(null);\n    if (!showToolOption) {\n      setIsSetting(true);\n      setEdgingButtonId(buttonId);\n      setEdgingButtonMessageId(messageId);\n      setEdgingButtonChildId(childId);\n\n      setBuilderState(\n        builderState.map((item) => {\n          if (item.id == messageId) {\n            item.children.map((child) => {\n              if (child.id == childId) {\n                child.buttons.map((button) => {\n                  if (button.id == buttonId) {\n                    button.next = \"dummy\"\n                  }\n                  return button;\n                })\n              }\n              return child;\n            })\n          }\n          return item;\n        })\n      );\n    }\n  }\n\n  const handleMousePosition = (event) => {\n    if (!showToolOption) {\n      var point = event.target.getStage().getPointerPosition();\n      setMousePosition({\n        x: point.x,\n        y: point.y,\n      });\n    }\n  };\n\n  const handleClickOnCanvas = () => {\n    if (isEdging) {\n      var hoveredIndex = getHoveredNode(builderState);\n      if (hoveredIndex > 0) {\n        //If the edging is hovered over another message and connect that message\n        var messageIdOfHover = builderState[hoveredIndex].id\n        if (messageIdOfHover != edgingMessageId) {\n          if (edgingMessageId) {\n            updateMessage({\n              next: messageIdOfHover\n            }, edgingMessageId).then((response) => { \n              setBuilderState(\n                builderState.map((item, index) => {\n                  if (item.id == edgingMessageId) {\n                    item.next = messageIdOfHover\n                  }\n                  return item;\n                })\n              );\n            }).catch((err) => {\n              toast.error(\"Something went wrong\");\n            }).finally(() => {\n              setEdgingMessageId(null);\n            })\n           } else if (edgingButtonId) {\n            updateButton({\n              next: messageIdOfHover\n            }, edgingButtonId).then((response) => {\n              setBuilderState(\n                builderState.map((item, index) => {\n                  if (item.id == edgingButtonMessageId) {\n                    item.children.map((child) => {\n                      if (child.id == edgingButtonChildId) {\n                        child.buttons.map((button) => {\n                          if (button.id == edgingButtonId) {\n                            button.next = messageIdOfHover\n                          }\n                        })\n                      }\n                    })\n                  }  \n                  return item;\n                })\n              );\n            }).catch((err) => {\n              toast.error(\"Something went wrong\")\n            }).finally(() => {\n              setEdgingButtonId(null);\n            })\n          }\n        } \n      } else {\n        setShowToolOption(true);\n      }\n    }\n  };\n\n  const handleAddMessage = () => {\n    let number = builderState.length + 1;\n    saveMessage({\n      name: 'Send Message #' + number,\n      type: 'default',\n      position_x: 1200,\n      position_y: 60,\n      flow: props.match.params.id\n    }).then((response) => {\n       setBuilderState([...builderState, response.data]);\n\n    }).catch((err) => {\n      toast.error(\"Something went wrong\")\n    })\n  }\n\n  const handleDeleteMessage = (item, index) => {\n    setIsToolbarActive(false);\n    if (index > 0) {\n      \n      //Delete the message\n    builderState.splice(index, 1);\n    //Delete the edging where this message belongs to\n      // const messageIndexHavingNextOfDeleteMessage = getMessageIndexWhichHasNextOfGivenMessageId(builderState, item.id);\n      //Remove the edging to the button when message deleted\n    setBuilderState(\n      builderState.map((message) => {\n        if (message.next == item.id) {\n          message.next = null\n        }\n        message.children.map((child) => {\n          if (child.type == 'text') {\n            child.buttons.map((button) => {\n              if (button.next == item.id) {\n                 button.next = null\n               }\n             })\n           }\n        })\n        return message;\n      })\n    );\n      \n    deleteMessage(item.id).then(() => {\n      setShowToolOption(false);\n      setEdgingMessageId(null);\n      setEdgingButtonId(null);\n      setIsSetting(false);\n    }).catch((err) => {\n        toast.error(\"Something went wrong\");\n      })\n    } else {\n      toast.info(\"You cannot delete the start message\")\n    }\n  }\n\n  const handleDragMessage = (e, item, index) =>  {\n    var updatedPosition = {\n      x: e.target.x(),\n      y: e.target.y(),\n    };\n\n    setBuilderState(\n      builderState.map((item, ind) => {\n        if (ind == index) {\n          item.position = updatedPosition;\n        }\n        return item;\n      })\n    );\n  }\n\n  const updateMessagePosition = (item) => {\n    updateMessage({\n      position_x: item.position.x,\n      position_y: item.position.y\n    }, item.id).catch((err) => {\n      toast.error('Something went wrong')\n    })    \n  }\n\n  const handleToolOptionNewMessageAction = () => {\n    setIsSetting(false);\n    setShowToolOption(false);\n    let number = builderState.length + 1;\n    var newMessage = {\n      name: 'Send Message #' + number,\n      type: 'default',\n      position_x: mousePosition.x,\n      position_y: mousePosition.y,\n      flow: props.match.params.id\n    }\n\n    if (edgingMessageId) {\n      createAndConnectMessage(newMessage, edgingMessageId)\n        .then((response) => {\n          setBuilderState(\n            builderState.map((item) => {\n              if (item.id == edgingMessageId) {\n                item.next = response.data.id;\n              }\n              return item;\n            })\n          );\n          setBuilderState([...builderState, response.data]);\n        }).catch((err) => {\n          toast.error(\"Something went wrong\")\n        }).finally(() => {\n          setEdgingMessageId(null);\n        })\n    } else if (edgingButtonId) {\n      createAndConnectWithButton(newMessage, edgingButtonId)\n        .then((response) => {\n          setBuilderState(\n            builderState.map((item) => {\n              if (item.id == edgingButtonMessageId) {\n                item.children.map((child) => {\n                  if (child.id == edgingButtonChildId) {\n                    child.buttons.map((button) => {\n                      if (button.id == edgingButtonId) {\n                        button.next = response.data.id\n                      }\n                      return button;\n                    })\n                  }\n                  return child;\n                })\n              }\n              return item;\n            })\n          );\n          setBuilderState([...builderState, response.data]);\n        }).catch((err) => {\n          toast.error(\"Something went wrong\")\n        }).finally(() => {\n          setEdgingButtonId(null);\n          setEdgingButtonMessageId(null);\n          setEdgingButtonChildId(null);\n        })\n    }\n  }\n\n  const handleToolOptionConnectFlow = () => {\n    setIsSetting(false);\n    setShowToolOption(false);\n    let number = builderState.length + 1;\n    var newFlow = {\n      name: 'Connect Flow #' + number,\n      type: 'flow',\n      position_x: mousePosition.x,\n      position_y: mousePosition.y,\n      flow: props.match.params.id\n    }\n    if (edgingMessageId) {\n      createAndConnectMessage(newFlow, edgingMessageId).then((response) => {\n        setBuilderState(\n          builderState.map((item) => {\n            if (item.id == edgingMessageId) {\n              item.next = response.data.id;\n            }\n            return item;\n          })\n        );\n        setBuilderState([...builderState, response.data]);\n       \n      }).catch((err) => {\n        toast.error(\"Something went wrong\")\n      }).finally(() => {\n        setEdgingMessageId(null);\n      });\n    } else if (edgingButtonId) {\n      createAndConnectWithButton(newFlow, edgingButtonId)\n        .then((response) => {\n          setBuilderState(\n            builderState.map((item) => {\n              if (item.id == edgingButtonMessageId) {\n                item.children.map((child) => {\n                  if (child.id == edgingButtonChildId) {\n                    child.buttons.map((button) => {\n                      if (button.id == edgingButtonId) {\n                        button.next = response.data.id\n                      }\n                      return button;\n                    })\n                  }\n                  return child;\n                })\n              }\n              return item;\n            })\n          );\n          setBuilderState([...builderState, response.data]);\n        }).catch((err) => {\n          toast.error(\"Something went wrong\")\n        }).finally(() => {\n          setEdgingButtonId(null);\n          setEdgingButtonMessageId(null);\n          setEdgingButtonChildId(null);\n        })\n    }\n  }\n\n  const handleToolOptionCancel = () => {\n    setShowToolOption(false);\n    if (isEdging) setIsSetting(false);\n    if (edgingMessageId) {\n      setBuilderState(\n        builderState.map((item) => {\n          if (item.id == edgingMessageId) {\n            item.next = \"\"\n          }\n          return item;\n        })\n      );\n      if (edgingMessageId) setEdgingMessageId(null);\n    } else if (edgingButtonId) {\n        setBuilderState(\n          builderState.map((item) => {\n            if (item.id == edgingButtonMessageId) {\n              item.children.map((child) => {\n                if (child.id == edgingButtonChildId) {\n                  child.buttons.map((button) => {\n                    if (button.id == edgingButtonId) {\n                      button.next = null\n                    }\n                    return button;\n                  })\n                }\n                return child;\n              })\n            }\n            return item;\n          })\n        );\n        if(edgingButtonId) setEdgingButtonId(null);\n        if(edgingButtonChildId) setEdgingButtonChildId(null);\n        if(edgingButtonMessageId) setEdgingButtonMessageId(null);\n      }          \n    }\n  React.useEffect(() => {\n    setIsLoading(true);\n    getMessages(props.match.params.id)\n      .then((response) => {\n        setBuilderState(response.data)\n      })\n      .catch((err) => {\n        toast.error(\"Something went wrong\")\n      }).finally(() => {\n        setIsLoading(false);\n      })\n    getFlow(props.match.params.id)\n      .then((response) => {  \n        setFlow(response.data);\n    }).catch((err) => {\n      toast.error(\"Something went wrong\")   \n    })\n    Konva.hitOnDragEnabled = true;\n  }, []);\n\n  const getToolOption = () => {\n    return (\n      <Group  x={mousePosition.x} y={mousePosition.y} zIndex={200}\n        onMouseOver={() => { document.body.style.cursor = 'pointer' }}\n        onMouseOut={() => { document.body.style.cursor = 'default' }}\n      >\n        <Group onClick={handleToolOptionNewMessageAction}>\n          <Rect\n            width={200}\n            height={50}\n            fill=\"#FDFDFD\"\n            strokeWidth={2}\n            shadowColor=\"gray\"\n            shadowOpacity={0.7}\n            shadowBlur={2}\n            onMouseDown={(e) => {\n              e.target.setAttr('fill', ' #eef1f4');\n            }}\n          />\n          <Text\n            x={15}\n            y={15}\n            text=\"+ New Message\"\n            fontFamily={'Roboto'}\n            fontSize={20}\n            fill={'#5850eb'}\n          />\n        </Group>\n        <Group y={50} onClick={handleToolOptionConnectFlow}>\n          <Rect\n            width={200}\n            height={50}\n            fill=\"#FDFDFD\"\n            strokeWidth={2}\n            shadowColor=\"gray\"\n            shadowOpacity={0.7}\n            shadowBlur={2}\n            onMouseDown={(e) => {\n              e.target.setAttr('fill', ' #eef1f4');\n            }}\n          />\n          <Text\n            x={15}\n            y={15}\n            text=\"+ Connect Flow\"\n            fontFamily={'Roboto'}\n            fontSize={20}\n            fill={'#5850eb'}\n          />\n        </Group>\n        <Group y={100}  onClick={handleToolOptionCancel}>\n          <Rect\n            width={200}\n            height={50}\n            fill=\"#FDFDFD\"\n            strokeWidth={2}\n            shadowColor=\"gray\"\n            shadowOpacity={0.7}\n            shadowBlur={2}\n            onMouseDown={(e) => {\n              e.target.setAttr('fill', ' #eef1f4');\n            }}\n          />\n          <Text\n            x={15}\n            y={15}\n            text=\"- Cancel\"\n            fontFamily={'Roboto'}\n            fontSize={20}\n            fill={'#5850eb'}\n          />\n        </Group>\n      </Group>\n    );\n  }\n  const getDefaultMessage = (item, index, messageHeight) => {\n    return (\n      <Group\n        x={item.position?.x}\n        y={item.position?.y}\n        draggable\n        onClick={(e) => {\n          showToolbar(item.id);\n          setSelectedTrue(index);\n        }}\n        onMouseEnter={(e) => {\n          setHoverTrue(index);\n        }}\n        onMouseLeave={(e) => {\n          setHoverFalse(index);\n        }}\n        hitOnDragEnabled={true}\n        onDragMove={(e) => {\n          handleDragMessage(e, item, index)\n        }}\n        onDragEnd={() => { updateMessagePosition(item) }}\n      >\n        {index === 0 &&\n          <Group x={10} y={-40}>\n            <Rect cornerRadius={7} stroke={\"green\"} strokeWidth={2} fill=\"#FDFDFD\" width={60} height={30} />\n            <Text\n              x={13}\n              y={8}\n              text={\"Start\"}\n              fontFamily={'Roboto'}\n              fontSize={15}\n              fill={'green'}\n            />\n          </Group>\n        }\n        <Rect\n          cornerRadius={16}\n          height={messageHeight}\n          width={340}\n          fill=\"#FDFDFD\"\n          strokeWidth={1}\n          stroke={ \"#5850EB\"}\n          shadowColor={getShadowColor(item)}\n          shadowOpacity={1}\n          shadowBlur={7}\n        />\n        {item.isHover &&\n          <>\n            <Rect\n              width={50} height={30} x={330} y={10} />\n            <URLImage\n              onMouseOver={() => { document.body.style.cursor = 'pointer' }}\n              onMouseOut={() => { document.body.style.cursor = 'default' }}\n              onClick={() => { handleDeleteMessage(item, index) }}\n              image={TrashIcon} x={345} y={10} height={25} width={25} />\n          </>\n        }\n        <Circle x={30} y={30} radius={15} fill=\"#5850EB\" />\n        <Text\n          x={55}\n          y={22}\n          text={item.name}\n          fontFamily={'Roboto'}\n          fontSize={20}\n          fill={'gray'}\n        />\n        <Group\n          x={340}\n          y={messageHeight - 20}\n          onMouseOver={() => { document.body.style.cursor = 'pointer' }}\n          onMouseOut={() => { document.body.style.cursor = 'default' }}\n          onClick={(e) => {\n            e.cancelBubble = true;\n            connectEdge(item.id)\n          }}>\n          <Circle radius={9} fill=\"#8392AB\" strokeWidth={1} />\n          <Text\n            x={-80}\n            y={-8}\n            text=\"Next Step\"\n            fontFamily={'Roboto'}\n            fontSize={15}\n            fontWeight={300}\n            fill={'gray'}\n          />\n        </Group>\n        {typeof item.children == 'object' ? (\n          <>\n            {item.children.length > 0 ? (\n              handleRenderingChildrens(item)\n            ) : (\n                <React.Fragment key={item}>\n                  <Group>\n                    <Rect\n                      x={20}\n                      y={75}\n                      height={60}\n                      width={300}\n                      fill=\"#EEF1F4\"\n                      cornerRadius={16}\n                    />\n                    <Text\n                      text=\"No Content\"\n                      x={110}\n                      y={95}\n                      fontFamily={'Roboto'}\n                      fontSize={20}\n                      fontWeight={300}\n                      fill={'blue'}\n                    />\n                  </Group>\n                </React.Fragment>\n              )}\n          </>\n        ) : null}\n      </Group>\n    );\n  }\n  const getFlowMessage = (item, index) => {\n    return (\n      <Group\n      x={item.position?.x}\n      y={item.position?.y}\n      draggable\n      onClick={(e) => {\n        showToolbar(item.id);\n        setSelectedTrue(index);\n      }}\n      onMouseEnter={(e) => {\n        setHoverTrue(index);\n      }}\n      onMouseLeave={(e) => {\n        setHoverFalse(index);\n      }}\n      hitOnDragEnabled={true}\n      onDragMove={(e) => {\n        handleDragMessage(e, item, index)\n      }}\n      onDragEnd={() => { updateMessagePosition(item) }}\n    >\n      <Rect\n        cornerRadius={16}\n        height={200}\n        width={340}\n        fill=\"#FDFDFD\"\n        stroke={ \"#f9bf3b\"}\n        strokeWidth={1}\n        shadowColor={getShadowColor(item)}\n        shadowOpacity={1}\n        shadowBlur={7}\n      />\n      {item.isHover &&\n        <>\n          <Rect\n            width={50} height={30} x={330} y={10} />\n          <URLImage\n            onMouseOver={() => { document.body.style.cursor = 'pointer' }}\n            onMouseOut={() => { document.body.style.cursor = 'default' }}\n            onClick={() => { handleDeleteMessage(item, index) }}\n            image={TrashIcon} x={345} y={10} height={25} width={25} />\n        </>\n      }\n      <Circle x={30} y={30} radius={15} fill=\"#f9bf3b\" />\n      <Text\n        x={55}\n        y={22}\n        text={item.name}\n        fontFamily={'Roboto'}\n        fontSize={20}\n        fill={'gray'}\n        />\n        {item.children.length > 0 ? (\n          <Group>\n          <Rect\n            x={20}\n            y={75}\n            height={60}\n            width={300}\n            stroke=\"green\"\n            strokeWidth={1}\n            fill=\"#EEF1F4\"\n            cornerRadius={16}\n          />\n          <Text\n            text={item.children[0].name}\n            x={40}\n            y={95}\n            fontFamily={'Roboto'}\n            fontSize={20}\n            fontWeight={300}\n              fill={\"#f9bf3b\"}\n              align={\"center\"}\n          />\n        </Group>\n        ) : (\n            <React.Fragment key={item}>\n              <Group>\n                <Rect\n                  x={20}\n                  y={75}\n                  height={60}\n                  width={300}\n                  fill=\"#EEF1F4\"\n                  cornerRadius={16}\n                />\n                <Text\n                  text=\"Select Flow\"\n                  x={110}\n                  y={95}\n                  fontFamily={'Roboto'}\n                  fontSize={20}\n                  fontWeight={300}\n                  fill={\"#f9bf3b\"}\n                  align={\"center\"}\n                />\n              </Group>\n            </React.Fragment>\n          )}\n    </Group>\n    );\n  }\n  const getMessageBox = (item, index, messageHeight) => {\n    if (item.type == \"default\") {\n      return getDefaultMessage(item, index, messageHeight);\n    } else if (item.type == \"flow\") {\n      return getFlowMessage(item, index);\n    }\n  }\n  \n  if (isLoading) {\n    return (\n      <div className=\"loader-wrapper\">\n        <PuffLoader color={' #5850EC'} loading={isLoading} size={75} />\n      </div>\n    );\n  } else {\n    return (\n      <FlowBuilderWrapper>\n        {flow && <div className=\"header\"><p>{flow.name}</p></div>}\n        <div className=\"stage-action\">\n          <BiMessageSquareAdd\n            onClick={handleAddMessage}\n          />\n        </div>\n        {isToolbarActive && <Toolbar id={id} hideToolbar={hideToolbar} bot={flow.bot} flow={flow.id} />}\n        <Stage\n          width={getStageWidth()}\n          height={window.innerHeight - 70}\n          scaleX={state.layerScale}\n          scaleY={state.layerScale}\n          onMouseMove={handleMousePosition}\n          x={0}\n          y={0}\n          onClick={handleClickOnCanvas}>\n          <Layer name=\"layer_1\" draggable onTouchMove={onTouchPinch} onWheel={handleWheel}>\n            <Rect\n              x={-window.innerWidth}\n              y={-window.innerHeight}\n              width={window.innerWidth * 3}\n              height={window.innerHeight * 3}\n              fill=\"\"\n            />\n            {showToolOption && getToolOption()}\n            {builderState &&\n              typeof builderState == 'object' &&\n              builderState.map((item, index) => {\n                var messageHeight = calculateHeightOfMessageBox(item.children);\n                return (\n                  <React.Fragment key={item.id}>\n                    {(item.type === \"default\" && item.next) ? (\n                      <Edge\n                        height={messageHeight}\n                        node1={item.position}\n                        node2={getNextNode(item.next)}\n                      />\n                    ) : null}\n                    {getMessageBox(item, index, messageHeight)}\n                  </React.Fragment>\n                );\n              })}\n          </Layer>\n        </Stage>\n      </FlowBuilderWrapper>\n    );\n  }\n};\nconst getShadowColor = (item) => {\n  if (item.isSelected) {\n    if (item.type == \"default\") {\n      return '#1e824c';\n    } else if (item.type == \"flow\") {\n      return \"#f9ae23\";\n    }\n   \n  } else if (item.isHover) {\n    if (item.type == \"default\") {\n      return '#8078FF';\n    } else if (item.type == \"flow\") {\n      return \"#f9bf3b\";\n    }\n  } else {\n    return '#95bbdf';\n  }\n};\n\nconst getSelectedNode = (state) => {\n  return state.findIndex((obj) => obj.isSelected == true);\n};\n\nconst getMessageIndexWhichHasNextOfGivenMessageId = (state, messageId) => {\n  return state.findIndex((obj) => obj.next == messageId);\n}\n\n\nconst getHoveredNode = (state) => {\n  return state.findIndex((obj) => obj.isHover == true);\n};\n\nexport default withRouter(FlowBuilder);\n",["386","387"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/bots.ts",[],["388","389"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Flows/index.tsx",["390","391","392","393","394"],"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { GridWrapper } from '../../../components/common/grid';\nimport { PrimaryButton } from './../../../components/common/buttons';\nimport { HiDotsVertical } from 'react-icons/hi';\nimport { DropdownWrapper } from '../../../components/common/Dropdown/styles';\nimport { useModal } from '../../../services/Modal/ModalProvider';\nimport { getFlows } from '../../../apis/flows';\nimport {withRouter} from 'react-router-dom'\nimport FlowCreateModal from '../../../components/dashboard/Flows/CreateModal';\nimport FlowEditModal from '../../../components/dashboard/Flows/EditModal';\nimport FlowDeleteModal from '../../../components/dashboard/Flows/DeleteModal';\nimport Pagination from '../../../components/common/Pagination/index';\nimport flowCover from '../../../assets/images/flow-cover.png';\nimport { PlatformWrapper } from './styles';\nimport messengerLogo from '../../../assets/images/platforms/messenger.png';\nimport telegramLogo from '../../../assets/images/platforms/telegram.png';\nimport slackLogo from '../../../assets/images/platforms/slack.png';\nimport MessengerConfigure from '../../../components/dashboard/Bots/Configure/Messenger';\nimport TelegramConfigure from '../../../components/dashboard/Bots/Configure/Telegram';\nimport SlackConfigure from '../../../components/dashboard/Bots/Configure/Slack';\nimport PuffLoader from \"react-spinners/PuffLoader\";\nimport { getPlatformConfigurations } from '../../../apis/bots';\nimport { toast } from 'react-toastify';\n\n\ntype FlowType = {\n  id: string;\n  name: string;\n  last_modified: string;\n};\n\nconst Flows = (props) => {\n  const { showModal, hideModal } = useModal();\n  const [flows, setFlows] = useState<Array<FlowType>>();\n  const [pageNumber, setPageNumber] = useState(1);\n  const [isLoading, setIsLoading] = useState(true);\n  const [lastPage, setLastPage] = useState(1);\n  const [messengerConfigurations, setMessengerConfigurations] = useState(null);\n  const [telegramConfigurations, setTelegramConfigurations] = useState(null);\n  const [slackConfigurations, setSlackConfigurations] = useState(null);\n\n  const botId = props.match.params.id;\n\n  const getFlowsData = (bot:string, pageNumber: number) => {\n    getFlows(bot, pageNumber)\n      .then((response) => {\n        setFlows(response.data);\n        setPageNumber(response.meta.current_page);\n        setLastPage(response.meta.last_page);\n      })\n      .catch((err) => {\n        console.log(\"Something went wrong\");\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n  /**\n   * Flow Operations Starts\n   */\n  const handleCreateOpen = (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => {\n    showModal(() => (\n      <FlowCreateModal bot={botId} hideModal={hideModal} handleCreateFlow={ handleCreateFlow } />\n    ));\n  };\n\n  const handleEditOpen = (data: FlowType) => {\n    showModal(() => (\n      <FlowEditModal hideModal={hideModal} flow={data} handleEditFlow={ handleEditFlow } />\n    ));\n  };\n\n  const handleDeleteConfirmation = (data: FlowType) => {\n    showModal(() => (\n      <FlowDeleteModal hideModal={hideModal} flow={data} handleDeleteFlow={ handleDeleteFlow }/>\n    ));\n  };\n\n  const handlePageChange = (pageNumber: number) => {\n    setPageNumber(pageNumber);\n  };\n\n  const handleCreateFlow = (newFlow: FlowType) => { \n    const newFlowList = flows.concat(newFlow);\n    setFlows(newFlowList)\n  }\n\n  const handleEditFlow = (data) => {\n    const flowId = flows.findIndex(\n      (obj) => obj.id == data.id\n    );\n    setFlows(flows.map((item, index) => {\n      if (index == flowId) {\n        item.name = data.name\n      }\n      return item;\n    }));\n  }\n\n  const handleDeleteFlow = (id) => {\n    const flowId = flows.findIndex(\n      (obj) => obj.id == id\n    );\n    flows.splice(flowId, 1);\n  }\n  /**\n   * Flow Operations Ends\n   */\n\n  /**\n   * Configure Operations Starts\n   */\n\n  const handleMessengerConfigurationUpdate = (config) => {\n    setMessengerConfigurations(config);\n  }\n\n  const handleTelegramConfigurationUpdate = (config) => {\n    setTelegramConfigurations(config);\n  }\n\n  const handleSlackConfigurationUpdate = (config) => {\n    setSlackConfigurations(config);\n  }\n\n  const openMessengerConfigure = () => {\n    showModal(() => (\n      <MessengerConfigure hideModal={hideModal} botId={botId} configuration={ messengerConfigurations } changeConfiguration={handleMessengerConfigurationUpdate} />\n    ));\n  }\n\n  const openTelegramConfigure = () => {\n    showModal(() => (\n      <TelegramConfigure hideModal={hideModal} botId={botId} configuration={ telegramConfigurations } changeConfiguration={handleTelegramConfigurationUpdate}/>\n    ));\n  }\n\n  const openSlackConfigure = () => {\n    showModal(() => (\n      <SlackConfigure hideModal={hideModal} botId={botId} configuration={ slackConfigurations} changeConfiguration={handleSlackConfigurationUpdate}/>\n    ));\n  }\n  /**\n   * Configure Operations Ends\n   */\n  \n  \n  useEffect(() => {\n    getFlowsData(botId, pageNumber);\n  }, [pageNumber, lastPage]);\n\n  useEffect(() => {\n    getPlatformConfigurations(botId)\n      .then((response) => {\n        \n        var indexOfMessengerConfig = response.data.findIndex(config => config.platform === 'messenger');\n        setMessengerConfigurations(response.data[indexOfMessengerConfig]);\n\n        var indexOfTelegramConfig = response.data.findIndex(config => config.platform === 'telegram');\n        setTelegramConfigurations(response.data[indexOfTelegramConfig]);\n\n        var indexOfSlackConfig = response.data.findIndex(config => config.platform === 'slack');\n        setSlackConfigurations(response.data[indexOfSlackConfig]);\n      })\n      .catch((err) => toast.error(\"Something went wrong\"));    \n  }, [])\n\n  if (isLoading) {\n    return (\n      <div className=\"loader-wrapper\">\n          <PuffLoader color={' #5850EC'}  size={75} />\n      </div>\n    );\n  } else {\n    return (\n      <React.Fragment>\n        <div className=\"page-header\">\n          <h1 className=\"main-heading\">Bot Details</h1>\n            <PrimaryButton onClick={handleCreateOpen}>Add Flow</PrimaryButton>\n          </div>\n          <PlatformWrapper>\n            <div className=\"platform_btn\" onClick={openMessengerConfigure}>\n              <img src={messengerLogo} alt=\"Messenger Logo\" />\n              <p>Messenger</p>\n            </div>\n            <div className=\"platform_btn\" onClick={openTelegramConfigure}>\n              <img src={telegramLogo} alt=\"Telegram Logo\" />\n              <p>Telegram</p>\n            </div>\n            <div className=\"platform_btn\" onClick={openSlackConfigure}>\n              <img src={slackLogo} alt=\"Slack Logo\" />\n              <p>Slack</p>\n            </div>\n          </PlatformWrapper>\n          <GridWrapper>\n            <div className=\"grid-row\">\n              {flows && flows.map((data: FlowType) => {\n                return (\n                  <React.Fragment key={data.id}>\n                    <Link to={'flow/' + data.id}>\n                      <div className=\"grid-item\">\n                        <div className=\"grid-item-wrapper\">\n                          <div className=\"grid-item-container\">\n                            <div className=\"image\">\n                              <img src={flowCover} alt=\"Flow Cover\" />\n                            </div>\n                            <div className=\"tag\">\n                              <p>{data.name}</p>\n                              <DropdownWrapper>\n                                <label className=\"dropbtn\">\n                                  <HiDotsVertical />\n                                </label>\n                                <div className=\"dropdown-content\">\n                                  <p\n                                    onClick={(e) => {\n                                      e.preventDefault();\n                                      handleEditOpen(data);\n                                    }}>\n                                    Edit\n                                  </p>\n                                  <p\n                                    onClick={(e) => {\n                                      e.preventDefault();\n                                      handleDeleteConfirmation(data);\n                                    }}>\n                                    Delete\n                                  </p>\n                                </div>\n                              </DropdownWrapper>\n                            </div>           \n                        </div>\n                      </div>\n                    </div>\n                    </Link>\n                  </React.Fragment>\n                );\n              })}\n          </div>\n        </GridWrapper>\n    \n        <Pagination\n          activePage={pageNumber}\n          total={lastPage}\n          onChange={handlePageChange}\n        />\n      </React.Fragment>\n    );\n  }\n};\n\nexport default withRouter(Flows);\n",["395","396"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Flows/CreateModal.tsx",["397","398"],"import React, { useState, useRef, useEffect } from 'react';\nimport { FormHeader } from '../../common/typography';\nimport { InputField } from '../../common/form';\nimport { FormButton } from '../../common/buttons';\nimport { useForm } from \"react-hook-form\";\nimport { saveFlow } from './../../../apis/flows';\nimport { toast } from 'react-toastify';\n\nconst FlowCreateModal = ({bot, hideModal, handleCreateFlow}) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const { register, handleSubmit, errors, setError } = useForm();  \n\n  const onSubmit = data => {\n    setIsLoading(true);\n    saveFlow({ name: data.name, bot: bot })\n      .then((response) => {\n        hideModal();\n        toast.success(response.message);\n        handleCreateFlow(response.data)\n      }).catch((err) => { \n        if (err.response.status === 422) {\n          if (err.response.data.errors.name) {\n            setError('name', {\n              type: 'server',\n              message: err.response.data.errors.name[0]\n            })\n          } \n        } else {\n          toast.error('Something went wrong')\n        }\n      }).finally(() => { \n        setIsLoading(false);\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"modal-body\">\n        <button className=\"modal-exit\" onClick={hideModal}></button>\n        <div className=\"modal-title\">\n          <FormHeader>Create Flow</FormHeader>\n        </div>\n        <div className=\"modal-content\">\n          <form className=\"bot-create-form\" onSubmit={handleSubmit(onSubmit)}>\n            <InputField\n              isError={!!errors.name}\n              name=\"name\"\n              placeholder=\"Enter flow name\"\n              ref={register({required: true, minLength: 3})}\n            />\n            {errors.name && errors.name.type === 'required' && (<p className=\"form-error\">This field is required</p>)}\n            {errors.name && errors.name.type === 'minLength' && (<p className=\"form-error\">This field is required min length of 3</p>)}\n            {errors.name && errors.name.type === 'server' && (<p className=\"form-error\">{ errors.name.message}</p>)}\n\n            <FormButton type=\"submit\" disabled={isLoading}>\n              {isLoading ? 'Loading...' : 'Save'}\n            </FormButton>\n          </form>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default FlowCreateModal;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Flows/EditModal.tsx",["399","400"],"import React, { useState, useRef, useEffect } from 'react';\nimport { FormHeader } from '../../common/typography';\nimport { InputField } from '../../common/form';\nimport { FormButton } from '../../common/buttons';\nimport { useForm } from \"react-hook-form\";\nimport { updateFlow } from './../../../apis/flows';\nimport { toast } from 'react-toastify';\n\nconst FlowCreateModal = ({flow, hideModal, handleEditFlow}) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const { register, handleSubmit, errors, setError } = useForm();  \n\n  const onSubmit = data => {\n    updateFlow({ name: data.name }, flow.id)\n      .then((response) => {\n        hideModal();\n        toast.success(response.message);\n        handleEditFlow(response.data)\n      }).catch((err) => { \n        if (err.response.status === 422) {\n          if (err.response.data.errors.name) {\n            setError('name', {\n              type: 'server',\n              message: err.response.data.errors.name[0]\n            })\n          } \n        } else {\n          toast.error('Something went wrong')\n        }\n      }).finally(() => { \n        setIsLoading(false);\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"modal-body\">\n        <button className=\"modal-exit\" onClick={hideModal}></button>\n        <div className=\"modal-title\">\n          <FormHeader>Edit Flow</FormHeader>\n        </div>\n        <div className=\"modal-content\">\n          <form className=\"bot-create-form\" onSubmit={handleSubmit(onSubmit)}>\n            <InputField\n              isError={!!errors.name}\n              defaultValue={flow.name}\n              name=\"name\"\n              ref={register({required: true, minLength: 3})}\n            />\n            {errors.name && errors.name.type === 'required' && (<p className=\"form-error\">This field is required</p>)}\n            {errors.name && errors.name.type === 'minLength' && (<p className=\"form-error\">This field is required min length of 3</p>)}\n            {errors.name && errors.name.type === 'server' && (<p className=\"form-error\">{ errors.name.message}</p>)}\n\n            <FormButton type=\"submit\" disabled={isLoading}>\n              {isLoading ? 'Loading...' : 'Save'}\n            </FormButton>\n          </form>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default FlowCreateModal;\n",["401","402"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/Configure/Messenger.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/Configure/Slack.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Flows/DeleteModal.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/Configure/Telegram.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/index.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Auth/AuthProvider.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/utils/storage.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/LandingPage.tsx",[],["403","404"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/auth/ForgotPasswordPage.tsx",["405"],"import React, { useState, useEffect, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport AuthLayout from '../../components/layout/AuthLayout';\nimport { FormHeader, FormSubHeader } from '../../components/common/typography';\nimport { InputField, FormLink } from '../../components/common/form';\nimport { FormButton } from '../../components/common/buttons';\nimport { IoArrowBack } from 'react-icons/io5';\nimport { forgotPassword } from '../../apis/auth';\n\nconst ForgotPassworPage = () => {\n  const [email, setEmail] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isEmailed, setIsEmailed] = useState(false);\n  const [errorMessage, setErrorMessage] = useState({ email: '' });\n\n  const emailRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    emailRef.current && emailRef.current.focus();\n  }, []);\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setIsLoading(true);\n\n    forgotPassword(email)\n      .then((response) => {\n        setIsEmailed(true);\n      })\n      .catch((err) => {\n        if (err.response.status === 422) {\n          setErrorMessage({\n            email: err.response.data.errors.email\n              ? err.response.data.errors.email[0]\n              : '',\n          });\n        }\n      })\n      .finally(() => {\n        setIsLoading(false);\n    })\n  };\n\n  return (\n    <AuthLayout>\n      {!isEmailed && (\n        <form onSubmit={handleSubmit}>\n          <FormHeader>Forgot password?</FormHeader>\n          <FormSubHeader>\n            No worries! We’ll send you secure email to reset your password.\n          </FormSubHeader>\n          <InputField\n            isError={!!errorMessage.email}\n            className=\"last-input\"\n            id=\"email\"\n            placeholder=\"Type your password\"\n            type=\"email\"\n            ref={emailRef}\n            onChange={(e) => {\n              setEmail(e.target.value);\n            }}\n          />\n          {errorMessage.email && (\n            <span className=\"form-error\">{errorMessage.email}</span>\n          )}\n          <FormButton type=\"submit\" disabled={isLoading}>\n            {isLoading ? 'Loading...' : 'Email me'}\n          </FormButton>\n        </form>\n      )}\n      {isEmailed && (\n        <div>\n          <FormHeader>Email is on the way!</FormHeader>\n          <FormSubHeader>\n            We will send you email with the reset password link if (\n            <strong>{email}</strong>) exists in Shipboard.\n          </FormSubHeader>\n        </div>\n      )}\n      <Link to=\"/login\" className=\"go-back\">\n        <IoArrowBack />\n        <h5>Go Back</h5>\n      </Link>\n    </AuthLayout>\n  );\n};\n\nexport default ForgotPassworPage;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Modal/ModalProvider.tsx",["406"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/typography.ts",["407","408"],"import styled from 'styled-components';\nimport { darkerGrey } from '../../styles/theme';\nimport { media } from '../../styles/mediaQueries';\n\nexport const PrimaryHeader = styled.h1`\n  font-family: Comic Neue, Roboto, sans-serif;\n  font-weight: 700;\n  font-size: 3.6rem;\n  color: #000;\n`;\n\nexport const FormHeader = styled(PrimaryHeader)`\n  font-size: 2.6rem;\n  text-align: center;\n`;\n\nexport const FormSubHeader = styled.h2`\n  font-family: Roboto, sans-serif;\n  font-weight: 300;\n  font-size: 1.6rem;\n  color: #000;\n  text-align: center;\n`;\n\nexport const SecondaryHeader = styled.h1`\n  font-family: Roboto, sans-serif;\n  font-weight: 500;\n  line-height: 5.6rem;\n  color: #000;\n  font-size: 2.4rem;\n`; \n\nexport const Paragraph = styled.p`\n  font-family: inherit;\n  font-size: 1.5rem;\n  color: ${(props) => props.theme.darkerGrey};\n  line-height: 2.8rem;\n`;\n\nexport const ToolbarHeading = styled.h2`\n  font-family: Roboto, sans-serif;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 1.8rem;\n  line-height: 2.1rem;\n  color: #797979;\n`;\n\nexport const VerticalGap = styled.div<{size: string}>`\n  width: auto;\n  height: ${(props) => props.size}rem;\n  display: block;\n  flex-shrink: 0;\n`;\n\nexport const HorizontalGap = styled.div<{size: string}>`\n  width: ${(props) => props.size}rem;\n  height: auto;\n  display: block;\n`;","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/form.ts",["409"],"import styled from 'styled-components'\nimport { grey } from '../../styles/theme';\n\nexport const InputField = styled.input<{isError?: boolean}>`\n  background: ${props => props.isError ? '#FFE4E4' : '#F7F7F7'};\n  border-radius: 7px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.1);\n  box-sizing: border-box;\n  min-height: 3.8rem;\n  min-width: 30rem;\n  padding: .8rem;\n  outline: none;\n  font-family: Roboto, sans-serif;\n  font-style: normal;\n  font-weight: 400;\n  font-size: 1.4rem;\n  color: #000;\n  width: 100%;\n\n\n  &:focus {\n    font-weight: 400;\n    box-shadow: 0 0 0 3px rgba(164, 202, 254, 0.45);\n    border-color: #5850EC;\n  }\n\n  &::placeholder {\n    color: #d7d7d7;\n    font-size: 1.2rem;\n  }\n`;\n\nexport const SelectField = styled.select<{isError?: boolean}>`\n  background: ${props => props.isError ? '#FFE4E4' : '#F7F7F7'};\n  border-radius: 7px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.1);\n  box-sizing: border-box;\n  min-height: 3.8rem;\n  min-width: 30rem;\n  padding: .8rem;\n  outline: none;\n  font-family: Roboto, sans-serif;\n  font-style: normal;\n  font-weight: 400;\n  font-size: 1.4rem;\n  color: #000;\n  width: 100%;\n\n\n  &:focus {\n    font-weight: 400;\n    box-shadow: 0 0 0 3px rgba(164, 202, 254, 0.45);\n    border-color: #5850EC;\n  }\n\n  &::placeholder {\n    color: #d7d7d7;\n    font-size: 1.2rem;\n  }\n`;\n\nexport const FormLink = styled.a`\n  text-decoration: none;\n  font-size: 1.2rem;\n  font-family: Roboto, sans-serif;\n  color: #565252;\n\n  &:hover{\n    text-decoration-line: underline;\n    color: #000;\n  }\n`;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/header/index.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/Pagination/index.tsx",["410","411","412","413"],"import React, { useState, useEffect } from 'react';\nimport { PaginationItem, PaginationWrapper } from './styles';\nimport { BiChevronLeft, BiChevronRight } from 'react-icons/bi';\nimport pagination from '../../../utils/pagination';\n\ninterface PaginationPropsInteface {\n  total: number;\n  activePage: number;\n  onChange: (pageNumber: number) => void;\n}\n\nconst Pagination: React.FC<PaginationPropsInteface> = (props) => {\n  const pageBtns = pagination(props.activePage, props.total);\n\n  return (\n    <PaginationWrapper>\n      <PaginationItem>\n        <BiChevronLeft\n          onClick={() => {\n            if (props.activePage != 0) {\n              props.onChange(props.activePage - 1);\n            }\n          }}\n        />\n      </PaginationItem>\n      {pageBtns &&\n        pageBtns.map((page, index) => {\n          if (typeof page !== 'string') {\n            var isActive = page === props.activePage ? 1 : 0;\n            return (\n              <PaginationItem\n                isActive={isActive}\n                onClick={() => {\n                  props.onChange(page);\n                }}\n              key={index}>\n                {page}\n              </PaginationItem>\n            );\n          } else {\n            return <PaginationItem>...</PaginationItem>;\n          }\n        })}\n      <PaginationItem>\n        <BiChevronRight\n          onClick={() => {\n            if (props.activePage != props.total) {\n              props.onChange(props.activePage + 1);\n            }\n          }}\n        />\n      </PaginationItem>\n    </PaginationWrapper>\n  );\n};\n\nexport default Pagination;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Flows/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/messages.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/DeleteModal.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Toolbar/index.tsx",["414","415","416","417","418","419","420","421","422","423","424","425"],"import React, { useContext, useState, useRef, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { ToolbarWrapper, ToolbarMenu, ToolbarButtonGroup, BtnEditorWrapper } from './styles';\nimport { VerticalGap } from '../../../common/typography';\nimport { ToolbarButton } from '../../../common/buttons';\nimport { BuilderContext } from '../../../../services/Builder/BuilderProvider';\nimport { GiCancel } from 'react-icons/gi';\nimport FormImage from '../Form/Image/index';\nimport FormText from '../Form/Text/index';\nimport FormCard from '../Form/Card/index';\nimport { connectFlowToMessage, updateMessage } from '../../../../apis/messages';\nimport { toast } from 'react-toastify';\nimport { saveText } from '../../../../apis/texts';\nimport { saveImage } from '../../../../apis/images';\nimport { addCardGroup } from '../../../../apis/cards';\nimport { useModal } from '../../../../services/Modal/ModalProvider';\nimport ConnectFlowModal from '../Modals/ConnectFlow';\nimport BtnEditor from './BtnEditor';\n\n\nconst Toolbar = ({ id, hideToolbar, bot, flow }) => {\n  const [builderState, setBuilderState] = useContext(BuilderContext);\n  const [isChangingTitle, setIsChangingTitle] = useState(false);\n  const { register, handleSubmit, setValue } = useForm({ mode: 'onChange' });\n  const { showModal, hideModal } = useModal();\n  const [isBtnEditorOpen, setIsBtnEditorOpen] = useState(false);\n  const [editorContent, setEditorContent] = useState({\n    position: null,\n    name: null,\n    id: null,\n    messageId: null,\n    childId: null\n  });\n\n  // const titleRef = useRef<HTMLInputElement>(null);\n\n  //Find index of specific object using findIndex method.\n  const objIndex = builderState.findIndex((obj) => obj.id == id);\n\n  const onChangeTitle = (data) => {\n    updateMessage({\n      name: data.title\n    }, id).then((response) => {\n      setBuilderState(\n        builderState.map((item, ind) => {\n          if (ind == objIndex) {\n           item.name = data.title\n          }\n          return item;\n        })\n      );\n    }).catch((err) => {\n      toast.error('Something went wrong')\n    })    \n  };\n  const openConnectFlowModal = () => {\n    showModal(() => (\n      <ConnectFlowModal flow={flow} bot={bot} hideModal={hideModal} handleSelect={handleSelect}/>\n    ));\n  }\n\n  const handleSelect = (flowId, flowName) => {\n    connectFlowToMessage({\n      flow: flowId\n    }, id).catch((err) => {\n      toast.error(\"Something went wrong\")\n    })\n    setBuilderState(\n      builderState.map((item, index) => {\n        if (item.id == id) {\n          item.children.push({\n            name: flowName\n          })\n        }\n        return item;\n      })\n    );\n    hideModal();\n  }\n\n  const removeConnetedFlow = () => {\n    connectFlowToMessage({}, id).catch((err) => {\n      toast.error(\"Something went wrong\")\n    })\n    setBuilderState(\n      builderState.map((item) => {\n        if (item.id == id) {\n          item.children.splice(0, 1);\n        }\n        return item;\n      })\n    );\n  }\n  \n  React.useEffect(() => {\n    setValue(\"title\", builderState[objIndex].name, {shouldValidate: true})\n  }, [builderState[objIndex].name])\n\n  const getContents = () => {\n    if (builderState[objIndex].type === \"default\") {\n      return (\n        <ToolbarMenu>\n          <div className={isChangingTitle ? 'header active' : 'header'}>\n            <form onBlur={handleSubmit(onChangeTitle)}>\n              <input\n                maxLength={35}\n                className=\"heading-input\"\n                ref={register({required: true, minLength: 3})}\n                id=\"title\"\n                name=\"title\"\n                onBlur={() => setIsChangingTitle(false)}\n              />\n            </form>\n          </div>\n          {builderState[objIndex].children.length > 0 ? (\n            builderState[objIndex].children.map((child) => {\n              return (\n                <React.Fragment key={child.id}>\n                  <VerticalGap size=\"3\" />\n                  {getChildren(child, objIndex, showBtnEditor, handleEditorContent)}\n                </React.Fragment>\n              );\n            })\n          ) : (\n              <React.Fragment>\n                <VerticalGap size=\"3\" />\n                <p className=\"no-content-text\">No content</p>\n              </React.Fragment>\n            )}\n          <VerticalGap size=\"3\" />\n        <ToolbarButtons id={id} index={objIndex} />\n        </ToolbarMenu>\n      );\n    } else if (builderState[objIndex].type === \"flow\") {\n      return (\n        <ToolbarMenu>\n          <div className='flow-header'>\n            <h4>Connect Flow </h4>\n          </div>\n          {builderState[objIndex].children.length > 0 ? (\n            builderState[objIndex].children.map((child) => {\n              return (\n                <React.Fragment key={child.id}>\n                  <VerticalGap size=\"3\" />\n                  <div className=\"flow-content\">\n                    {child.name}\n                    <button className=\"action-btn\">\n                      <GiCancel onClick={removeConnetedFlow} />\n                  </button>\n                  </div>\n                </React.Fragment>\n              );\n            })\n          ) : (\n              <React.Fragment>\n                <VerticalGap size=\"3\" />\n                <ToolbarButton height=\"4rem\" width=\"25rem\" onClick={openConnectFlowModal}>\n                  Select Flow\n                </ToolbarButton>\n              </React.Fragment>\n            )}\n        </ToolbarMenu>\n      );\n    }\n  }\n\n  const closeBtnEditor = () => {\n    setIsBtnEditorOpen(false);\n  }\n\n  const showBtnEditor = () => {\n    setIsBtnEditorOpen(true);\n  }\n\n  const handleEditorContent = ({ position, name, id, messageId, childId}) => {\n    setEditorContent({position, name, id, messageId, childId});\n  }\n\n\n  return (\n    <React.Fragment>\n      <ToolbarWrapper>\n      {builderState[objIndex] &&\n        getContents()\n      }\n      </ToolbarWrapper>\n      {isBtnEditorOpen && <BtnEditor handleClose={closeBtnEditor} editorContent={editorContent} />}\n    </React.Fragment>\n  );\n};\n\nexport default Toolbar;\n\nconst ToolbarButtons = ({ id, index }) => {\n  const [builderState, setBuilderState] = useContext(BuilderContext);\n\n  const addText = () => {\n    var height = builderState[index].height;\n    height = height + 50;\n    const positionIndex = builderState[index].children.length + 1;\n    saveText({\n      text: 'Change text',\n      message: id,\n      position: positionIndex,\n      height: 17\n    }).then((response) => {\n      setBuilderState(\n        builderState.map((item, ind) => {\n          if (ind == index) {\n            item.height = height;\n            item.children.push(response.data);\n          }\n          return item;\n        })\n      );\n    }).catch((err) => {\n      toast.error(\"Something went wrong\");\n    })\n  };\n\n  const addCard = () => {\n    let height = builderState[index].height;\n    height = height + 150;\n    const positionIndex = builderState[index].children.length + 1;\n\n\n    addCardGroup({\n      message: id,\n      position: positionIndex,\n      height: 150\n    }).then((response) => {\n      console.log(response.data);\n      setBuilderState(\n        builderState.map((item, ind) => {\n          if (ind == index) {\n            item.height = height;\n            item.children.push(response.data);\n          }\n          return item;\n        })\n      );\n    }).catch((err) => {\n      toast.error(\"Something went wrong\");\n    });\n  };\n\n  const addImage = () => {\n    let height = builderState[index].height;\n    height = height + 150;\n    const positionIndex = builderState[index].children.length + 1;\n\n    saveImage({\n      message: id,\n      position: positionIndex\n    }).then((response) => {\n      setBuilderState(\n        builderState.map((item, ind) => {\n          if (ind == index) {\n            item.height = height;\n            item.children.push(response.data);\n          }\n          return item;\n        })\n      );\n    }).catch((err) => {\n      toast.error(\"Something went wrong\");\n    })\n  };\n\n  return (\n    <React.Fragment>\n      <ToolbarButtonGroup>\n        <ToolbarButton\n          height=\"6rem\"\n          width=\"6rem\"\n          fontSize=\"1.2rem\"\n          onClick={addText}>\n          + Text\n        </ToolbarButton>\n        <ToolbarButton\n          height=\"6rem\"\n          width=\"6rem\"\n          fontSize=\"1.2rem\"\n          onClick={addCard}>\n          + Card\n        </ToolbarButton>\n        <ToolbarButton\n          height=\"6rem\"\n          width=\"6rem\"\n          fontSize=\"1.2rem\"\n          onClick={addImage}>\n          + Image\n        </ToolbarButton>\n        {/* <ToolbarButton height=\"4rem\" width=\"25rem\">\n          Next Button\n        </ToolbarButton> */}\n      </ToolbarButtonGroup>\n    </React.Fragment>\n  );\n};\n\nconst getChildren = (children, messageIndex, showBtnEditor, handleEditorContent) => {\n  if (children.type === 'text') {\n    return <FormText messageId={messageIndex} childId={children.id} showBtnEditor={showBtnEditor} setEditorContent={handleEditorContent}/>;\n  } else if (children.type === 'image') {\n    return <FormImage messageId={messageIndex} childId={children.id} />;\n  } else if (children.type === 'card') {\n    return <FormCard messageId={messageIndex} childId={children.id} />;\n  }\n};\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/Pagination/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/navbar/index.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Toolbar/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Toolbar/BtnEditor.tsx",["426","427","428","429","430","431","432","433","434","435","436"],"import React from 'react';\nimport { BtnEditorWrapper } from './styles';\nimport { useForm } from \"react-hook-form\";\nimport { InputField } from '../../../common/form';\nimport { toast } from 'react-toastify';\nimport { BuilderContext } from '../../../../services/Builder/BuilderProvider';\nimport { updateButton, deleteButton } from '../../../../apis/buttons';\n\n\nconst BtnEditor = ({ handleClose, editorContent }) => {\n  const { register, handleSubmit, errors, setError, setValue } = useForm(); \n  const [builderState, setBuilderState] = React.useContext(BuilderContext);\n\n  const onSubmit = data => {\n    updateButton({ name: data.name }, editorContent.id)\n      .then((response) => {\n        setBuilderState(\n          builderState.map((message) => {\n            if (message.id == editorContent.messageId) {\n              message.children.map((child) => {\n                if (child.id == editorContent.childId) {\n                  child.buttons.map((button) => {\n                    if (button.id == editorContent.id) {\n                      button.name = response.data.name\n                    }\n                  })\n                }\n              })\n            }\n            return message;\n          })\n        );\n      }).catch((err) => { \n        if (err.response.status === 422) {\n          if (err.response.data.errors.name) {\n            setError('name', {\n              type: 'server',\n              message: err.response.data.errors.name[0]\n            })\n          } \n        } else {\n          toast.error('Something went wrong')\n        }\n      })\n  }\n\n  const handleDelete = () => {\n    console.log('deleted')\n    setBuilderState(\n      builderState.map((message, mix) => {\n        if ( message.id == editorContent.messageId) {\n          message.children.map((child, cix) => {\n            if (child.id == editorContent.childId) {\n              const  buttonIndex = builderState[mix].children[cix].buttons.findIndex(\n                (obj) => obj.id == editorContent.id\n              );\n              child.buttons.splice(buttonIndex, 1)\n            }\n          })\n        }\n        return message;\n      })\n    );\n    deleteButton(editorContent.id)\n      .then(() => {\n      })\n      .catch((err) => {\n        toast.error(\"Something went wrong\");\n      }).finally(() => {\n        handleClose()\n      });\n  }\n\n  React.useEffect(() => {\n    setValue(\"name\", editorContent.name)\n  }, [editorContent.name])\n\n\n  return (\n    <BtnEditorWrapper position={editorContent.position}>\n      <div className=\"title\">\n        Edit Button\n      </div>\n      <hr />\n      <form className=\"content\" onBlur={handleSubmit(onSubmit)}>\n        <label>Name</label>\n        <InputField\n          name=\"name\"\n          id=\"name\"\n          ref={register({ required: true })}\n        />\n        <div className=\"bottom\">\n          <button className=\"btn btn-delete\" onClick={(e) => {\n            e.preventDefault();\n            handleDelete()\n          }\n          }>Delete</button>\n        <button className=\"btn btn-done\" onClick={handleClose}>Done</button>\n      </div>\n      </form>\n     \n    </BtnEditorWrapper>\n  );\n}\n\nexport default BtnEditor;",["437","438"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Text/index.tsx",["439","440","441","442","443","444","445","446","447","448"],"import React, { useEffect, useState, useRef, useContext } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { BuilderContext } from '../../../../../services/Builder/BuilderProvider';\nimport { AddTextWrapper } from './styles';\nimport { AddTextButton, ContentButton } from '../../../../common/buttons';\nimport { BiTrash } from 'react-icons/bi';\nimport Textarea from 'react-expanding-textarea';\nimport { updateText, deleteText } from '../../../../../apis/texts';\nimport { toast } from 'react-toastify';\nimport { saveButton } from '../../../../../apis/buttons';\nimport { v4 as uuidv4 } from 'uuid';\n\n\nconst FormText = ({ messageId, childId , showBtnEditor, setEditorContent}) => {\n  const [builderState, setBuilderState] = useContext(BuilderContext);\n  const { register, handleSubmit } = useForm({ mode: 'onChange' });\n  const [isChangingBody, setIsChangingBody] = useState(false);\n\n  const textAreaRef = useRef<HTMLTextAreaElement>(null);\n  const buttonRef = useRef<HTMLButtonElement>(null);\n\n  //Find index of specific object using findIndex method.\n  const childIndex = builderState[messageId].children.findIndex(\n    (obj) => obj.id == childId\n  );\n\n  const onTextChange = (data) => {\n    var height = textAreaRef.current.scrollHeight;\n    updateText({\n      text: data.text,\n      height: height\n    }, childId).then((response) => {\n      setBuilderState(\n        builderState.map((item, index) => {\n          if (index == messageId) {\n            item.children.map((child, ind) => {\n              if (ind == childIndex) {\n                child.value = data.text;\n                child.height = height;\n              }\n            });\n          }\n          return item;\n        })\n      );\n    }).catch((err) => {\n      toast.error(\"Something went wrong\");\n    })\n  };\n\n  const handleDelete = () => {\n    var height = builderState[messageId].height - textAreaRef.current.scrollHeight;\n    deleteText(childId)\n      .then(() => {\n        setBuilderState(\n          builderState.map((item, index) => {\n            if (index == messageId) {\n              item.height = height;\n              item.children.splice(childIndex,1)\n            }\n            return item;\n          })\n        );\n      })\n      .catch((err) => {\n        toast.error(\"Something went wrong\");\n    })\n  };\n\n  const handleAddButton = () => {\n    const buttonNumber = builderState[messageId].children[childIndex].buttons.length + 1;\n    saveButton({\n      name: 'Button #' + buttonNumber,\n      parent_type: 'text',\n      parent: childId\n    }).then((response) => {\n      setBuilderState(\n        builderState.map((item, index) => {\n          if (index == messageId) {\n            item.children.map((child) => {\n              if (child.id == childId) {\n                child.buttons.push(response.data);\n              }\n            });\n          }\n          return item;\n        })\n      );\n    }).catch((err) => {\n      toast.error(\"Something went wrong\")\n    })      \n  }\n\n  useEffect(() => {\n    if (textAreaRef.current) {\n      register(textAreaRef.current, {required: true, minLength: 3});\n    }\n  }, []);\n\n  return (\n    <AddTextWrapper>\n      <button className=\"action-btn\">\n        <BiTrash onClick={handleDelete} />\n      </button>\n      <div className={isChangingBody ? 'card-body active' : 'card-body'}>\n        <form onBlur={handleSubmit(onTextChange)}>\n          <Textarea\n            maxLength={500}\n            placeholder=\"Enter your text here\"\n            onBlur={() => setIsChangingBody(false)}\n            defaultValue={builderState[messageId].children[childIndex].value}\n            id=\"text\"\n            name=\"text\"\n            ref={textAreaRef}\n            onClick={() => setIsChangingBody(true)}\n          />\n        </form>\n      </div>\n      <div className=\"card-base\">\n        {builderState[messageId].children[childIndex].buttons && builderState[messageId].children[childIndex].buttons.map((button, index) => {\n          return (\n            <React.Fragment key={button.id}>\n              <ContentButton\n                ref={buttonRef}\n                onClick={(event) => {\n                setEditorContent({\n                  position: buttonRef.current.scrollTop,\n                  name: button.name,\n                  id: button.id,\n                  messageId: builderState[messageId].id,\n                  childId: childId\n                });\n                showBtnEditor();\n            }}>{button.name}</ContentButton>\n            </React.Fragment>\n          );\n        })}\n      <AddTextButton height=\"4rem\" width=\"100%\" onClick={handleAddButton}>\n        Add Button\n      </AddTextButton>\n      </div>\n    </AddTextWrapper>\n  );\n};\n\nexport default FormText;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/feature/styles.ts",["449"],"import styled from 'styled-components';\nimport { darkerGrey } from '../../../styles/theme';\n\nexport const FeatureWrapper = styled.section`\n  margin: auto;\n  max-width: 120rem;\n  margin-top: 3rem;\n  \n  .heading {\n    text-align: center;\n    margin-top: 2rem;\n  }\n`;\n\nexport const FeatureGrid = styled.div`\nmargin-top:1rem;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  text-align: none;\n\n  .feature {\n    background-color: ${props => props.theme.white};\n    border-radius: 20px;\n    box-shadow: 0px 4px 24px rgba(0, 0, 0, 0.25);    height: 24rem;\n    margin: 2rem;\n    padding: 2rem;\n    width: 35rem;\n\n    img {\n      width: 4rem;\n      height: auto;\n      margin-top: 1rem;\n    }\n  }\n`;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/footer/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Image/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Card/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Card/index.tsx",["450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483"],"import React, { useState, useEffect, useRef, useContext } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { CardSlider, CardWrapper } from './styles';\nimport { BuilderContext } from '../../../../../services/Builder/BuilderProvider';\nimport { AddTextButton } from '../../../../common/buttons';\nimport { ImageWrapper } from '../Image/styles';\nimport { v4 as uuidv4 } from 'uuid';\nimport Textarea from 'react-expanding-textarea';\nimport {\n  BiImageAdd,\n  BiTrash,\n  BiChevronRight,\n  BiChevronLeft,\n  BiPlus,\n} from 'react-icons/bi';\nimport { addCard, deleteCardGroup, updateCard, uploadImage } from '../../../../../apis/cards';\nimport { toast } from 'react-toastify';\n\nconst FormCard = ({ messageId, childId }) => {\n  const [builderState, setBuilderState] = useContext(BuilderContext);\n  const { register, handleSubmit } = useForm({ mode: 'onChange' });\n  const [isChangingHeading, setIsChangingHeading] = useState(false);\n  const [isChangingBody, setIsChangingBody] = useState(false);\n\n  const headingRef = useRef<HTMLInputElement>(null);\n  const paragraphRef = useRef<HTMLTextAreaElement>(null);\n  const cardRef = useRef<HTMLDivElement>(null);\n\n  //Find index of specific object using findIndex method.\n  const childIndex = builderState[messageId].children.findIndex(\n    (obj) => obj.id == childId\n  );\n\n  //Card Navigation functions\n  const handleNextButton = (id) => {\n    const cards = builderState[messageId].children[childIndex].cards;\n    const length = cards.length - 1;\n    const activeCardIndex = getActiveCardIndex(cards);\n\n    if (activeCardIndex == length) {\n      makeCardActive(activeCardIndex + 1, activeCardIndex, length + 2, true);\n    } else {\n      makeCardActive(activeCardIndex + 1, activeCardIndex);\n    }\n  };\n\n  const handlePreviousButton = () => {\n    const cards = builderState[messageId].children[childIndex].cards;\n    const activeCardIndex = getActiveCardIndex(cards);\n    if (activeCardIndex != 0) {\n      makeCardActive(activeCardIndex - 1, activeCardIndex);\n    }\n  };\n\n  const makeCardActive = (\n    cardIndex,\n    activeCardIndex,\n    length = 0,\n    addNew = false\n  ) => {\n    if (addNew) {\n      addCard(childId).then((response) => {\n        setBuilderState(\n          builderState.map((message, index) => { \n            if (index == messageId) { \n              message.children.map((child, ind) => { \n                if (ind == childIndex) {\n                  //First set active card to inactive\n                  child.cards.map((card, inx) => {\n                    console.log(activeCardIndex);\n                  if (inx == activeCardIndex) {\n                    card.active = false\n                  }\n                    return card;\n                })\n                //Then push a new card with active true;\n                  child.cards.push(response.data)\n                }\n              })\n            }\n            return message;\n          })\n        );\n      }).catch((err) => {\n        console.log(err);\n        toast.error(\"Something went wrong\");\n      });\n    } else {\n      setBuilderState(\n        builderState.map((message, index) => { \n          if (index == messageId) { \n            message.children.map((child, ind) => { \n              if (ind == childIndex) {\n                child.cards.map((card, inx) => { \n                  if (inx == cardIndex) { \n                    card.active = true\n                  }\n                  if (inx == activeCardIndex) { \n                    card.active = false\n                  }\n                  return card;\n                })\n              }\n              return child;\n            })\n          }\n          return message;\n        })\n      );\n    }\n  };\n\n  const getActiveCardIndex = (cards) => {\n    return cards.findIndex((obj) => obj.active == true);\n  };\n\n  const getCardIndex = (id) => {\n    return builderState[messageId].children[childIndex].cards.findIndex(\n      (obj) => obj.id === id\n    );\n  };\n\n  const isLastCard = () => {\n    const cards = builderState[messageId].children[childIndex].cards;\n    const length = cards.length - 1;\n    const activeCardIndex = getActiveCardIndex(cards);\n    return activeCardIndex == length;\n  };\n\n  //Form input submit methods\n  const onUploadImage = (data, id) => {\n    let cardIndex = getCardIndex(id);\n    let reader = new FileReader();\n    const formData = new FormData();\n    formData.append('image', data.image[0]);\n    formData.append('name', data.image[0].name);\n\n    reader.onloadend = () => {\n      var height = cardRef.current.scrollHeight;\n      uploadImage(formData, id).then((response) => {\n        setBuilderState(\n          builderState.map((item, index) => {\n            if (index == messageId) {\n              item.children.map((child, ind) => {\n                if (ind == childIndex) {\n                  child.cards.map((card, s) => {\n                    if (s == cardIndex) {\n                      card.selectedImage = data.image[0];\n                      card.imagePreviewUrl = reader.result;\n                      card.height = height;\n                    }\n                    return card;\n                  });\n                }\n                return child;\n              });\n            }\n            return item;\n          })\n        );\n      }).catch((err) => {\n        toast.error(\"Something went wrong\");\n      })\n    };\n\n    reader.readAsDataURL(data.image[0]);\n  };\n\n  const onHeadingChange = (data, id) => {\n    let cardIndex = getCardIndex(id);\n    var height = cardRef.current.scrollHeight;\n    updateCard({\n      heading: data.heading,\n      height: height\n    }, id).then((response) => {\n      setBuilderState(\n        builderState.map((item, index) => {\n          if (index == messageId) {\n            item.children.map((child, ind) => {\n              if (ind == childIndex) {\n                child.cards.map((card, s) => {\n                  if (s == cardIndex) {\n                    card.heading = data.heading;\n                    card.height = height;\n                  }\n                });\n              }\n            });\n          }\n          return item;\n        })\n      );\n    }).catch((err) => {\n      toast.error(\"Something went wrong\");\n    })\n  };\n\n  const onParagraphChange = (data, id) => {\n    let cardIndex = getCardIndex(id);\n    var height = cardRef.current.scrollHeight;\n\n    updateCard({\n      body: data.body,\n      height: height\n    }, id).then((response) => {\n      setBuilderState(\n        builderState.map((item, index) => {\n          if (index == messageId) {\n            item.children.map((child, ind) => {\n              if (ind == childIndex) {\n                child.cards.map((card, s) => {\n                  if (s == cardIndex) {\n                    card.body = data.body;\n                    card.height = height;\n                  }\n                });\n              }\n            });\n          }\n          return item;\n        })\n      );\n    }).catch((err) => {\n      toast.error(\"Something went wrong\");\n    })\n  };\n\n  const handleDelete = () => {\n    deleteCardGroup(childId).then((response) => {\n      setBuilderState(\n        builderState.map((item, index) => {\n          if (index == messageId) {\n            item.height -= 250;\n            item.children.splice(childIndex, 1);\n          }\n          return item;\n        })\n      );\n    }).catch((err) => {\n      toast.error(\"Something went wrong\");\n    })\n  };\n\n  return (\n    <CardSlider>\n      <div className=\"navigation_btn previous\" onClick={handlePreviousButton}>\n        <BiChevronLeft />\n      </div>\n      <div className=\"navigation_btn next\" onClick={handleNextButton}>\n        {isLastCard() ? <BiPlus /> : <BiChevronRight />}\n      </div>\n      <button className=\"action-btn\" onClick={handleDelete}>\n        <BiTrash />\n      </button>\n      {builderState[messageId].children[childIndex].cards.map((card) => {\n        if (card.active) {\n          return (\n            <CardWrapper ref={cardRef}>\n              <div className=\"card-image\">\n                <ImageWrapper>\n                  {card.imagePreviewUrl ? (\n                    <div>\n                      <img src={card.imagePreviewUrl} alt=\"card-image\" />\n                    </div>\n                  ) : (\n                    <form\n                      onChange={handleSubmit((data) =>\n                        onUploadImage(data, card.id)\n                      )}>\n                      <input\n                        ref={register}\n                        type=\"file\"\n                        id={'card_image' + getCardIndex(card.id)}\n                        name=\"image\"\n                        accept=\"image/*\"\n                      />\n                      <label htmlFor={'card_image' + getCardIndex(card.id)}>\n                        <BiImageAdd />\n                        <p>Upload image</p>\n                      </label>\n                    </form>\n                  )}\n                </ImageWrapper>\n              </div>\n              <div className=\"card-text\">\n                <div\n                  className={\n                    isChangingHeading ? 'card-heading active' : 'card-heading'\n                  }>\n                  <form\n                    onBlur={handleSubmit((data) =>\n                      onHeadingChange(data, card.id)\n                    )}>\n                    <input\n                      className=\"card-title\"\n                      ref={register({required: true, minLength: 3 })}\n                      maxLength={27}\n                      id=\"heading\"\n                      name=\"heading\"\n                      defaultValue={card.heading}\n                      onBlur={() => setIsChangingHeading(false)}\n                      onClick={() => {\n                        setIsChangingBody(false);\n                        setIsChangingHeading(true);\n                      }}\n                    />\n                  </form>\n                </div>\n                <div\n                  className={isChangingBody ? 'card-body active' : 'card-body'}>\n                  <form\n                    onBlur={handleSubmit((data) =>\n                      onParagraphChange(data, card.id)\n                    )}>\n                    <Textarea\n                      className=\"card-paragraph\"\n                      maxLength={200}\n                      placeholder=\"Enter your text here\"\n                      onBlur={() => setIsChangingBody(false)}\n                      defaultValue={card.body}\n                      id=\"body\"\n                      name=\"body\"\n                      ref={register({required: true, minLength: 3})}\n                      onClick={() => {\n                        setIsChangingHeading(false);\n                        setIsChangingBody(true);\n                      }}\n                    />\n                  </form>\n                </div>\n              </div>\n            </CardWrapper>\n          );\n        }\n      })}\n    </CardSlider>\n  );\n};\n\nexport default FormCard;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Modals/ConnectFlow.tsx",["484","485","486","487"],"import React, { useEffect, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { getFlows } from '../../../../apis/flows';\nimport { GridWrapper } from '../../../common/grid';\nimport { ConnectFlowWrapper } from './styles';\nimport Pagination from '../../../common/Pagination/index';\nimport flowCover from '../../../../assets/images/flow-cover.png';\n\ntype FlowType = {\n  id: string;\n  name: string;\n  message_count: string\n};\n\nconst ConnectFlowModal = ({bot, flow, hideModal, handleSelect}) => {\n  const [flows, setFlows] = useState<Array<FlowType>>();\n  const [pageNumber, setPageNumber] = useState(1);\n  const [isLoading, setIsLoading] = useState(true);\n  const [lastPage, setLastPage] = useState(1);\n\n  const getFlowsData = (bot:string, pageNumber: number) => {\n    getFlows(bot, pageNumber)\n      .then((response) => {\n        var otherFlowsThanOneInside = response.data.filter(item => (item.id != flow) && item.message_count > 0)\n        setFlows(otherFlowsThanOneInside);\n        setPageNumber(response.meta.current_page);\n        setLastPage(response.meta.last_page);\n      })\n      .catch((err) => {\n        console.log(\"Something went wrong\");\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n\n  const handlePageChange = (pageNumber: number) => {\n    setPageNumber(pageNumber);\n  };\n\n  useEffect(() => {\n    getFlowsData(bot, pageNumber);\n  }, [pageNumber, lastPage]);\n\n  const getFlowGrid = () => {\n    if (flows.length > 0) {\n      return flows.map((data: FlowType) => {\n        return (\n          <React.Fragment key={data.id}>\n              <div className=\"grid-item\" onClick={ () => handleSelect(data.id, data.name)}>\n                <div className=\"grid-item-wrapper\">\n                <div className=\"grid-item-container\">\n                  <div className=\"image\">\n                  <img src={flowCover} alt=\"Flow Cover\" />\n                  </div>\n                  <div className=\"tag\">\n                    <p>{data.name}</p>\n                  </div>           \n                </div>\n              </div>\n            </div>\n          </React.Fragment>\n        );\n      })\n    } else {\n     return  (<p>There are no other flows or they don't have messages</p>);\n    }\n  }\n\n  return (\n    <ConnectFlowWrapper>\n      <div className=\"modal-body\">\n        <button className=\"modal-exit\" onClick={hideModal}></button>\n        <div className=\"modal-title\">\n         Connect Modal\n        </div>\n        <div className=\"modal-content\">\n          <GridWrapper>\n            <div className=\"grid-row\">\n              {flows && getFlowGrid()}\n            </div>\n          </GridWrapper>\n          {(flows && flows.length > 0) && \n            <Pagination\n            activePage={pageNumber}\n            total={lastPage}\n            onChange={handlePageChange}\n          />}\n        </div>\n      </div>\n    </ConnectFlowWrapper>\n  );\n};\n\nexport default ConnectFlowModal;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/App.tsx",["488","489"],"import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport LandingPage from './pages/LandingPage';\nimport GlobalStyle from './styles/global';\nimport RegisterPage from './pages/auth/RegisterPage';\nimport LoginPage from './pages/auth/LoginPage';\nimport ForgotPassworPage from './pages/auth/ForgotPasswordPage';\nimport { ProtectedRoute } from './routes/ProtectedRoute';\nimport Dashboard from './pages/main/Dashboard/index';\nimport NotFound from './pages/error/404';\nimport { useAuthContext } from './services/Auth/AuthProvider';\nimport Bots from './pages/main/Bots/index';\nimport Flows from './pages/main/Flows/index';\nimport FlowBuilder from './pages/main/Flows/builder';\nimport Templates from './pages/main/Templates/index';\nimport Settings from './pages/main/Settings/index';\nimport ModalProvider from './services/Modal/ModalProvider';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport AppLayout from './components/layout/AppLayout';\n\nconst App: React.FC = () => {\n  const authContext = useAuthContext();\n  return (\n    <ModalProvider>\n      <BrowserRouter>\n        <GlobalStyle />\n        <>\n          <ToastContainer />\n          <Switch>\n            <Route exact path=\"/\" component={LandingPage} />\n            <Route exact path=\"/register\" component={RegisterPage} />\n            <Route exact path=\"/login\" component={LoginPage} />\n            <Route\n              exact\n              path=\"/forgot-password\"\n              component={ForgotPassworPage}\n            />\n            <ProtectedRoute exact path=\"/app\" component={Dashboard} />\n            <ProtectedRoute exact path=\"/bots\" component={Bots} />\n            <ProtectedRoute exact path=\"/bot/:id\" component={Flows} />\n            <ProtectedRoute exact path=\"/bot/flow/:id\" component={ FlowBuilder } />\n            <ProtectedRoute exact path=\"/templates\" component={Templates} />\n            <ProtectedRoute exact path=\"/settings\" component={Settings} />\n            <Route path=\"*\" component={NotFound} />\n          </Switch>\n        </>\n      </BrowserRouter>\n    </ModalProvider>\n  );\n};\n\nexport default App;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/auth/RegisterPage.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Templates/index.tsx",["490"],"import React from 'react';\nimport AppLayout from '../../../components/layout/AppLayout';\n\nconst Templates = (props: any) => {\n  return <h1 className=\"main-heading\">Templates</h1>;\n};\n\nexport default Templates;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/auth.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/Dropdown/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/CreateModal.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/buttons.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Builder/BuilderProvider.tsx",["491","492"],"import React, { useState, createContext, useContext } from 'react';\nimport { FlowStateType } from '../../../types';\nimport { v4 as uuidv4 } from 'uuid';\n\n// const initialBuilderState = [\n//   {\n//     id: '12kl23-23k23l0-23l2',\n//     name: 'Send Message #1',\n//     height: 200,\n//     position: {\n//       x: 700,\n//       y: 50,\n//     },\n//     children: [],\n//     next: '2323-23jljkj23-23jo2i3',\n//     isHover: false,\n//     isSelected: false,\n//   },\n//   {\n//     id: '2323-23jljkj23-23jo2i3',\n//     name: 'Send Message #2',\n//     height: 200,\n//     position: {\n//       x: 1000,\n//       y: 100,\n//     },\n//     children: [],\n//     isHover: false,\n//     isSelected: false,\n//   },\n// ];\n\nexport const BuilderContext = createContext(undefined);\n\nexport const BuilderProvider = ({ sidebar, children }) => {\n  const [builderState, setBuilderState] = useState([]);\n  return (\n    <BuilderContext.Provider value={[builderState, setBuilderState, sidebar]} >\n      {children}\n    </BuilderContext.Provider>\n  );\n};\n\nexport const useBuilder = () => {\n  const context = useContext(BuilderContext);\n  if (context === undefined) {\n    throw new Error('useBuilderState must be used within a BuilderProvider');\n  }\n  return context;\n};\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/utils/request.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/header/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/utils/pagination.ts",["493"],"export default  (c: number, m: number) => {\n  let current = c,\n    last = m,\n    delta = 2,\n    left = current - delta,\n    right = current + delta + 1,\n    range = [],\n    rangeWithDots = [],\n    l\n\n  for (let i = 1; i <= last; i++) {\n    if (i === 1 || i === last || (i >= left && i < right)) {\n      range.push(i)\n    }\n  }\n\n  for (let i of range) {\n    if (l) {\n      if (i - l === 2) {\n        rangeWithDots.push(l + 1)\n      } else if (i - l !== 1) {\n        rangeWithDots.push(\"...\")\n      }\n    }\n    rangeWithDots.push(i)\n    l = i\n  }\n\n  return rangeWithDots\n}",["494","495"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/footer/index.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/info/index.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/images.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Image/index.tsx",["496","497","498","499","500","501","502"],"import React, { useEffect, useRef, useContext } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { ImageWrapper } from './styles';\nimport { BuilderContext } from '../../../../../services/Builder/BuilderProvider';\nimport { AddTextButton } from '../../../../common/buttons';\nimport { BiImageAdd, BiTrash } from 'react-icons/bi';\nimport { uploadImage, deleteImage } from '../../../../../apis/images';\nimport { toast } from 'react-toastify';\n\nconst FormImage = ({ messageId, childId }) => {\n  const [builderState, setBuilderState] = useContext(BuilderContext);\n  const { register, handleSubmit } = useForm({ mode: 'onChange' });\n\n  const imageRef = useRef<HTMLInputElement>(null);\n\n  //Find index of specific object using findIndex method.\n  const childIndex = builderState[messageId].children.findIndex(\n    (obj) => obj.id == childId\n  );\n\n  const image = builderState[messageId].children[childIndex];\n\n  const onSubmit = (data) => {\n    let reader = new FileReader();\n    const formData = new FormData();\n\n    formData.append('image', data.image[0]);\n    formData.append('name', data.image[0].name);\n    \n    reader.onloadend = () => {\n      var height = 180;\n      uploadImage(formData, childId).then((response) => {\n        setBuilderState(\n          builderState.map((item, index) => {\n            if (index == messageId) {\n              item.children.map((child, ind) => {\n                if (ind == childIndex) {\n                  child.selectedImage = data.image[0];\n                  child.imagePreviewUrl = reader.result;\n                  child.height = height;\n                }\n              });\n            }\n            return item;\n          })\n        );\n      }).catch((err) => {\n        toast.error(\"Something went wrong\")\n      })\n    };\n\n    reader.readAsDataURL(data.image[0]);\n  };\n\n  const handleDelete = () => {\n    deleteImage(childId).then((response) => {\n      setBuilderState(\n        builderState.map((item, index) => {\n          if (index == messageId) {\n            item.height -= 150;\n            item.children.splice(childIndex,1)\n          }\n          return item;\n        })\n      );\n    }).catch((err) => {\n      toast.error(\"Something went wrong\");\n    })\n   \n  };\n\n  useEffect(() => {\n    if (imageRef.current) {\n      register(imageRef.current);\n    }\n  });\n\n  return (\n    <ImageWrapper>\n      {image.imagePreviewUrl ? (\n        <div>\n          <img src={image.imagePreviewUrl} alt=\"image\" />\n          {/* <AddTextButton height=\"4rem\" width=\"100%\">\n            Add Button\n          </AddTextButton> */}\n        </div>\n      ) : (\n        <form onChange={handleSubmit(onSubmit)}>\n          <input\n            ref={imageRef}\n            type=\"file\"\n            id={'file' + childIndex}\n            name=\"image\"\n            accept=\"image/*\"\n          />\n          <label htmlFor={'file' + childIndex}>\n            <BiImageAdd />\n            <p>Upload image</p>\n          </label>\n        </form>\n      )}\n      <button className=\"action-btn\">\n        <BiTrash onClick={handleDelete} />\n      </button>\n    </ImageWrapper>\n  );\n};\n\nexport default FormImage;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Sidebar/index.tsx",["503","504","505","506","507"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Text/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Auth/reducer.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/routes/ProtectedRoute.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/auth/LoginPage.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Settings/index.tsx",["508"],"import React from 'react';\nimport AppLayout from '../../../components/layout/AppLayout';\n\nconst Settings = (props:any) => {\n  return (\n      <h1 className=\"main-heading\">Settings</h1>\n  );\n};\n\nexport default Settings;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/buttons.ts",["509"],"import styled from 'styled-components';\nimport Toolbar from '../dashboard/builder/Toolbar/index';\n\nexport const StyledButton = styled.button`\n  display:flex;\n  align-items:center;\n  justify-content:center;\n  background: #ffffff;\n  border-radius: 12px 12px 12px 0px;\n  border: 2px solid #5850eb;\n  box-sizing: border-box;\n  cursor: pointer;\n  font-family: Comic Neue, Roboto, sans-serif;\n  font-size: 1.5rem;\n  padding:.9rem;\n  width: 10rem;\n  outline: none;\n`;\n\nexport const PrimaryButton = styled(StyledButton)`\n  background-color: #5850eb;\n  height: 2.5rem;\n  color: #ffffff;\n  margin-right: 0rem;\n  &:focus {\n    background-color: #251DCA\n  }\n`;\n\nexport const FormButton = styled(PrimaryButton)`\n  width: 100%;\n  height: 3.5rem;\n  font-size: 1.6rem;\n  font-weight: 600;\n  margin-top: 1.5rem;\n`;\n\nexport const AuthButton = styled(StyledButton)`\n  width: 20rem;\n  font-size: 1.6rem;\n`;\n\n\nexport const ToolbarButton = styled.button < { height?: string, width?: string, fontSize?: string}>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: ${props => props.height ? props.height : '2rem'};\n  width: ${props => props.width ? props.width : '2rem'};\n  border: none;\n  outline: none;\n  padding: 0;\n  background: #ffffff;\n  color: #8392AB;\n  font-family: Roboto, sans-serif;\n  font-weight: 400;\n  font-size: ${props => props.fontSize ? props.fontSize : '1.6rem'};\n  margin: .8rem;\n  cursor: pointer;\n  background-image: url(\"data:image/svg+xml,%3csvg width='100%25' height='100%25' xmlns='http://www.w3.org/2000/svg'%3e%3crect width='100%25' height='100%25' fill='none' rx='7' ry='7' stroke='%238392ABFF' stroke-width='4' stroke-dasharray='10%2c10' stroke-dashoffset='23' stroke-linecap='round'/%3e%3c/svg%3e\");\n  border-radius: 0px 0px 7px 7px;\n  &:hover {\n    background-image: url(\"data:image/svg+xml,%3csvg width='100%25' height='100%25' xmlns='http://www.w3.org/2000/svg'%3e%3crect width='100%25' height='100%25' fill='none' rx='7' ry='7' stroke='%235850EBFF' stroke-width='4' stroke-dasharray='10%2c10' stroke-dashoffset='23' stroke-linecap='round'/%3e%3c/svg%3e\");\n    color: #5850EB;\n  }\n`;\n\nexport const AddTextButton = styled(ToolbarButton)`\n  margin: 0rem;\n  width: 100%;\n`;\n\nexport const ContentButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 3rem;\n  width:  90%;\n  border: none;\n  padding: 0;\n  background: #E1E5EA;\n  color: black;\n  border: none;\n  outline: none;\n  font-family: Roboto, sans-serif;\n  font-weight: 400;\n  font-size: 1.4rem;\n  margin: .4rem;\n  cursor: pointer;\n  border-radius: 7px;\n`;\n\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/table.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/layout/AuthLayout.tsx",["510"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport logo from '../../assets/images/logo-dark.png';\nimport { AuthButton } from '../common/buttons';\n\ninterface LayoutProps {\n  children?: any;\n  type?: string;\n}\n\nconst AuthLayout: React.FC<LayoutProps> = (props) => {\n  return (\n    <LayoutWrapper>\n      <nav className=\"logo-bar\">\n        <Link to=\"/\">\n          <img className=\"logo-img\" src={logo} alt=\"Shipboard Logo\" />\n        </Link>\n      </nav>\n      <AuthContainer>\n        <div className=\"card\">{props.children}</div>\n        {/* {props.type === 'login' && (\n          <div className=\"auth-buttons\">\n            <AuthButton>Sign in with Google</AuthButton>\n            <AuthButton>Sign in with Facebook</AuthButton>\n          </div>\n        )} */}\n      </AuthContainer>\n      <FooterWrapper>\n        <p>©Shipbot Pvt. Ltd. 2020. All rights reserved</p>\n      </FooterWrapper>\n    </LayoutWrapper>\n  );\n};\n\nexport default AuthLayout;\n\nconst LayoutWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n  min-width: 50rem;\n  position: relative;\n\n  .logo-bar {\n    align-content: center;\n    display: flex;\n    margin: auto;\n    max-width: 144rem;\n    min-height: 10rem;\n    width: 100%;\n\n    img {\n      height: 4.5rem;\n      margin-top: 2rem;\n    }\n  }\n`;\n\nconst AuthContainer = styled.div`\n  align-content: center;\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  justify-content: center;\n  margin: auto;\n  position: relative;\n\n  .card {\n    align-items: center;\n    background: #ffffff;\n    border-radius: 24px;\n    box-shadow: 0px 4px 24px rgba(0, 0, 0, 0.12);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    margin-top: -10rem;\n    max-width: 40rem;\n    min-height: 30rem;\n    padding: 4rem;\n\n    h1 {\n      padding-bottom: 1rem;\n    }\n\n    h2 {\n      margin-top: -1rem;\n      padding-bottom: 1rem;\n    }\n\n    input {\n      margin-bottom: 1rem;\n      margin-top: 1rem;\n    }\n\n    .last-input {\n      margin-bottom: 3rem;\n    }\n\n    .link {\n      display: flex;\n      justify-content: space-around;\n      margin-top: 1rem;\n      width: 100%;\n    }\n\n    .go-back {\n      align-items: center;\n      align-self: flex-start;\n      color: #000;\n      cursor: pointer;\n      display: flex;\n      margin-top: 1rem;\n      text-decoration: none;\n\n      &:hover{\n        color: #000;\n        text-decoration-line: underline;\n      }\n\n      h5 {\n        font-family: Roboto, sans-serif;\n        font-size: 1.2rem;\n        font-weight: 300;\n      }\n\n      svg {\n        width: 1.5rem;\n        height: 1.5rem;\n      }\n\n      &:hover {\n        h5 {\n          text-decoration: underline;\n        }\n      }\n    }\n  }\n\n  .auth-buttons {\n    margin-left: -5rem;\n    margin-right: -5rem;\n    display: flex;\n    justify-content: space-between;\n    margin-top: 6rem;\n  }\n`;\n\nconst FooterWrapper = styled.footer`\n  bottom: 0rem;\n  font-size: 1.2rem;\n  padding-right: 10rem;\n  position: absolute;\n  text-align: right;\n  width: 100%;\n`;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/EditModal.tsx",["511","512"],"import React, { useState, useRef, useEffect } from 'react';\nimport { FormHeader } from '../../common/typography';\nimport { InputField } from '../../common/form';\nimport { FormButton } from '../../common/buttons';\nimport { useForm } from \"react-hook-form\";\nimport { updateBot } from './../../../apis/bots';\nimport { toast } from 'react-toastify';\n\nconst BotEditModal = ({bot, hideModal, handleEditBot }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const { register, handleSubmit, errors, setError } = useForm();  \n\n  const onSubmit = data => {\n    setIsLoading(true);\n    updateBot({ name: data.name }, bot.id)\n      .then((response) => {\n        hideModal();\n        toast.success(response.message);\n        handleEditBot(response.data)\n      }).catch((err) => { \n        if (err.response.status === 422) {\n          if (err.response.data.errors.name) {\n            setError('name', {\n              type: 'server',\n              message: err.response.data.errors.name[0]\n            })\n          } \n        } else {\n          toast.error('Something went wrong')\n        }\n      }).finally(() => { \n        setIsLoading(false);\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"modal-body\">\n        <button className=\"modal-exit\" onClick={hideModal}></button>\n        <div className=\"modal-title\">\n          <FormHeader>Edit Bot</FormHeader>\n        </div>\n        <div className=\"modal-content\">\n          <form className=\"bot-create-form\" onSubmit={handleSubmit(onSubmit)}>\n            <InputField\n              isError={!!errors.name}\n              defaultValue={bot.name}\n              name=\"name\"\n              ref={register({required: true, minLength: 3})}\n            />\n            {errors.name && errors.name.type === 'required' && (<p className=\"form-error\">This field is required</p>)}\n            {errors.name && errors.name.type === 'minLength' && (<p className=\"form-error\">This field is required min length of 3</p>)}\n            {errors.name && errors.name.type === 'server' && (<p className=\"form-error\">{ errors.name.message}</p>)}\n\n            <FormButton type=\"submit\" disabled={isLoading}>\n              {isLoading ? 'Loading...' : 'Save'}\n            </FormButton>\n          </form>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default BotEditModal;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/texts.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Sidebar/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Auth/JWTValidator.ts",["513"],"import jwt from 'jsonwebtoken';\n\nexport default (token: any) => {\n  if (token) {\n    const data: any = jwt.decode(token);\n\n    const expDate: Date = new Date(data.exp * 1000);\n    const currentDate: Date = new Date();\n    return expDate.valueOf() - currentDate.valueOf() > 0;\n  }\n  return false;\n};\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Dashboard/index.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/layout/AppLayout.tsx",["514","515"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/constants/urls.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Modals/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/error/404.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Bots/index.tsx",["516","517","518","519","520","521","522"],"import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Link, Route, Switch } from 'react-router-dom';\nimport { PrimaryButton } from '../../../components/common/buttons';\nimport { getBots } from '../../../apis/bots';\nimport Pagination from '../../../components/common/Pagination/index';\nimport { TableWrapper } from '../../../components/common/table';\nimport { DropdownWrapper } from '../../../components/common/Dropdown/styles';\nimport { HiDotsVertical } from 'react-icons/hi';\nimport { useModal } from '../../../services/Modal/ModalProvider';\nimport BotCreateModal from '../../../components/dashboard/Bots/CreateModal';\nimport BotEditModal from '../../../components/dashboard/Bots/EditModal';\nimport BotDeleteModal from '../../../components/dashboard/Bots/DeleteModal';\nimport { toast } from 'react-toastify';\nimport ConfigureBot from '../../../components/dashboard/Bots/Configure/Messenger';\nimport PuffLoader from \"react-spinners/PuffLoader\";\n\n\ntype BotType = {\n  id: string;\n  name: string;\n  last_modified: string;\n};\n\nconst Bots = () => {\n  const { showModal, hideModal } = useModal();\n  const [bots, setBots] = useState<Array<BotType>>();\n  const [pageNumber, setPageNumber] = useState(1);\n  const [isLoading, setIsLoading] = useState(true);\n  const [lastPage, setLastPage] = useState(1);\n\n  const getBotsData = (pageNumber: number) => {\n    getBots(pageNumber)\n      .then((response) => {\n        setBots(response.data);\n        setPageNumber(response.meta.current_page);\n        setLastPage(response.meta.last_page);\n      })\n      .catch((err) => {\n        toast.error(\"Something went wrong\");\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  useEffect(() => {\n    getBotsData(pageNumber);\n  }, [pageNumber, lastPage]);\n\n  const handleCreateOpen = (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => {\n    showModal(() => (\n      <BotCreateModal hideModal={hideModal} handleCreateBot={ handleCreateBot}  />\n    ));\n  };\n\n  const handleEditOpen = (data: BotType) => {\n    showModal(() => (\n      <BotEditModal hideModal={hideModal} bot={data} handleEditBot={handleEditBot} />\n    ));\n  };\n\n  const handleDeleteConfirmation = (data: BotType) => {\n    showModal(() => (\n      <BotDeleteModal\n        hideModal={hideModal} bot={data} handleDeleteBot={handleDeleteBot}\n      />\n    ));\n  };\n\n  const handlePageChange = (pageNumber: number) => {\n    setPageNumber(pageNumber);\n  };\n\n  const handleCreateBot = (newBot: BotType) => { \n    const newBotList = bots.concat(newBot);\n    setBots(newBotList)\n  }\n\n  const handleEditBot = (data) => {\n    const botId = bots.findIndex(\n      (obj) => obj.id == data.id\n    );\n    setBots(bots.map((item, index) => {\n      if (index == botId) {\n        item.name = data.name\n      }\n      return item;\n    }));\n  }\n\n  const handleDeleteBot = (id) => {\n    const botId = bots.findIndex(\n      (obj) => obj.id == id\n    );\n    bots.splice(botId, 1);\n  }\n  \n  if (isLoading) {\n    return (\n      <div className=\"loader-wrapper\">\n        <PuffLoader color={' #5850EC'} size={75} />\n      </div>\n    );\n  } else {\n    return (\n      <React.Fragment>\n        <div className=\"page-header\">\n          <h1 className=\"main-heading\">Bots</h1>\n          <PrimaryButton onClick={handleCreateOpen}>Add Bots</PrimaryButton>\n        </div>\n        <div className=\"container\">\n          <TableWrapper>\n            <li className=\"table-header\">\n              <div className=\"col col-1 flex-basis-50\">Name</div>\n              <div className=\"col col-2 flex-basis-20\">Channels</div>\n              <div className=\"col col-3 flex-basis-20\">Modified</div>\n              <div className=\"col col-4 flex-basis-10\">Action</div>\n            </li>\n            {bots &&\n              bots.map((data: BotType) => {\n                return (\n                  <React.Fragment key={data.id}>\n                    <Link to={\"bot/\" + data.id} className=\"table-row table-row-data\" >\n                      <li className=\"table-row\">\n                        <div className=\"col col-1 flex-basis-50\" data-label=\"name\">{data.name}</div>\n                        <div className=\"col col-2 flex-basis-20\" data-label=\"channels\">-</div>\n                        <div className=\"col col-3 flex-basis-20\" data-label=\"last_modified\">{data.last_modified}</div>\n                        <div className=\"col col-4 flex-basis-10\" data-label=\"action\">\n                          <DropdownWrapper>\n                            <label className=\"dropbtn\">\n                              <HiDotsVertical />\n                            </label>\n                            <div className=\"dropdown-content\">\n                              <p\n                                onClick={(e) => {\n                                  e.preventDefault();\n                                  handleEditOpen(data);\n                                }}>\n                                Edit\n                        </p>\n                              <p\n                                onClick={(e) => {\n                                  e.preventDefault()\n                                  handleDeleteConfirmation(data);\n                                }}>\n                                Delete\n                        </p>\n                            </div>\n                          </DropdownWrapper>\n                        </div>\n                      </li>\n                    </Link>\n                  </React.Fragment>\n                );\n              })}\n          </TableWrapper>\n        </div>\n\n        <Pagination\n          activePage={pageNumber}\n          total={lastPage}\n          onChange={handlePageChange}\n        />\n      </React.Fragment>\n    );\n  }\n};\n\nexport default Bots;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/flows.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/feature/index.tsx",["523"],"import React from 'react';\nimport { FeatureWrapper, FeatureGrid } from './styles';\nimport {\n  PrimaryHeader,\n  SecondaryHeader,\n  Paragraph,\n} from '../../common/typography';\n\nimport feature1 from '../../../assets/images/features/1.png';\nimport feature2 from '../../../assets/images/features/2.png';\nimport feature3 from '../../../assets/images/features/3.png';\nimport feature4 from '../../../assets/images/features/4.png';\nimport feature5 from '../../../assets/images/features/5.png';\n\nconst Feature = () => {\n  return (\n    <FeatureWrapper>\n      <PrimaryHeader className=\"heading\">Key Features</PrimaryHeader>\n      <FeatureGrid>\n        <div className=\"feature\">\n          <img src={feature1} alt=\"feature1\" />\n          <SecondaryHeader>Easy to develop</SecondaryHeader>\n          <Paragraph>\n            Create components connected them and make the bot flow in ease\n          </Paragraph>\n        </div>\n        <div className=\"feature\">\n          <img src={feature5} alt=\"feature1\" />\n          <SecondaryHeader>Multipe Platform</SecondaryHeader>\n          <Paragraph>\n            Create one bot and publish it in different platforms such as\n            facebook, slack, telegram, etc.\n          </Paragraph>\n        </div>\n        <div className=\"feature\">\n          <img src={feature3} alt=\"feature1\" />\n          <SecondaryHeader>Template Variety</SecondaryHeader>\n          <Paragraph>\n            Free templates which can be used to setup your bot.\n          </Paragraph>\n        </div>\n        <div className=\"feature\">\n          <img src={feature4} alt=\"feature1\" />\n          <SecondaryHeader>Rich Content</SecondaryHeader>\n          <Paragraph>\n            Various message content such as text, gallery, buttons.\n          </Paragraph>\n        </div>\n        <div className=\"feature\">\n          <img src={feature5} alt=\"feature1\" />\n          <SecondaryHeader>Feature 5</SecondaryHeader>\n          <Paragraph>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, t ut labore\n            et dolore magna aliqua.\n          </Paragraph>\n        </div>\n        <div className=\"feature\">\n          <img src={feature5} alt=\"feature1\" />\n          <SecondaryHeader>Feature 6</SecondaryHeader>\n          <Paragraph>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n            eiusmod tempor incididunt\n          </Paragraph>\n        </div>\n      </FeatureGrid>\n    </FeatureWrapper>\n  );\n};\n\nexport default Feature;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/cards.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/navbar/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/styles/mediaQueries.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/info/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/grid.ts",[],{"ruleId":"524","severity":1,"message":"525","line":4,"column":30,"nodeType":"526","messageId":"527","endLine":4,"endColumn":35},{"ruleId":"524","severity":1,"message":"528","line":44,"column":17,"nodeType":"526","messageId":"527","endLine":44,"endColumn":25},{"ruleId":"529","severity":1,"message":"530","line":54,"column":64,"nodeType":"531","messageId":"532","endLine":54,"endColumn":66},{"ruleId":"529","severity":1,"message":"530","line":55,"column":21,"nodeType":"531","messageId":"532","endLine":55,"endColumn":23},{"ruleId":"529","severity":1,"message":"530","line":181,"column":21,"nodeType":"531","messageId":"532","endLine":181,"endColumn":23},{"ruleId":"529","severity":1,"message":"530","line":184,"column":21,"nodeType":"531","messageId":"532","endLine":184,"endColumn":23},{"ruleId":"529","severity":1,"message":"530","line":193,"column":21,"nodeType":"531","messageId":"532","endLine":193,"endColumn":23},{"ruleId":"529","severity":1,"message":"530","line":207,"column":21,"nodeType":"531","messageId":"532","endLine":207,"endColumn":23},{"ruleId":"529","severity":1,"message":"530","line":210,"column":21,"nodeType":"531","messageId":"532","endLine":210,"endColumn":23},{"ruleId":"529","severity":1,"message":"530","line":219,"column":21,"nodeType":"531","messageId":"532","endLine":219,"endColumn":23},{"ruleId":"529","severity":1,"message":"530","line":231,"column":19,"nodeType":"531","messageId":"532","endLine":231,"endColumn":21},{"ruleId":"529","severity":1,"message":"530","line":248,"column":23,"nodeType":"531","messageId":"532","endLine":248,"endColumn":25},{"ruleId":"529","severity":1,"message":"530","line":268,"column":23,"nodeType":"531","messageId":"532","endLine":268,"endColumn":25},{"ruleId":"529","severity":1,"message":"530","line":270,"column":28,"nodeType":"531","messageId":"532","endLine":270,"endColumn":30},{"ruleId":"529","severity":1,"message":"530","line":272,"column":33,"nodeType":"531","messageId":"532","endLine":272,"endColumn":35},{"ruleId":"529","severity":1,"message":"533","line":303,"column":30,"nodeType":"531","messageId":"532","endLine":303,"endColumn":32},{"ruleId":"529","severity":1,"message":"530","line":310,"column":31,"nodeType":"531","messageId":"532","endLine":310,"endColumn":33},{"ruleId":"529","severity":1,"message":"530","line":327,"column":31,"nodeType":"531","messageId":"532","endLine":327,"endColumn":33},{"ruleId":"534","severity":1,"message":"535","line":328,"column":47,"nodeType":"536","messageId":"537","endLine":328,"endColumn":49},{"ruleId":"529","severity":1,"message":"530","line":329,"column":36,"nodeType":"531","messageId":"532","endLine":329,"endColumn":38},{"ruleId":"534","severity":1,"message":"535","line":330,"column":52,"nodeType":"536","messageId":"537","endLine":330,"endColumn":54},{"ruleId":"529","severity":1,"message":"530","line":331,"column":41,"nodeType":"531","messageId":"532","endLine":331,"endColumn":43},{"ruleId":"529","severity":1,"message":"530","line":381,"column":26,"nodeType":"531","messageId":"532","endLine":381,"endColumn":28},{"ruleId":"534","severity":1,"message":"535","line":384,"column":38,"nodeType":"536","messageId":"537","endLine":384,"endColumn":40},{"ruleId":"529","severity":1,"message":"530","line":385,"column":26,"nodeType":"531","messageId":"532","endLine":385,"endColumn":28},{"ruleId":"534","severity":1,"message":"535","line":386,"column":40,"nodeType":"536","messageId":"537","endLine":386,"endColumn":42},{"ruleId":"529","severity":1,"message":"530","line":387,"column":31,"nodeType":"531","messageId":"532","endLine":387,"endColumn":33},{"ruleId":"529","severity":1,"message":"530","line":418,"column":17,"nodeType":"531","messageId":"532","endLine":418,"endColumn":19},{"ruleId":"529","severity":1,"message":"530","line":452,"column":27,"nodeType":"531","messageId":"532","endLine":452,"endColumn":29},{"ruleId":"529","severity":1,"message":"530","line":469,"column":27,"nodeType":"531","messageId":"532","endLine":469,"endColumn":29},{"ruleId":"529","severity":1,"message":"530","line":471,"column":32,"nodeType":"531","messageId":"532","endLine":471,"endColumn":34},{"ruleId":"529","severity":1,"message":"530","line":473,"column":37,"nodeType":"531","messageId":"532","endLine":473,"endColumn":39},{"ruleId":"529","severity":1,"message":"530","line":511,"column":25,"nodeType":"531","messageId":"532","endLine":511,"endColumn":27},{"ruleId":"529","severity":1,"message":"530","line":529,"column":27,"nodeType":"531","messageId":"532","endLine":529,"endColumn":29},{"ruleId":"529","severity":1,"message":"530","line":531,"column":32,"nodeType":"531","messageId":"532","endLine":531,"endColumn":34},{"ruleId":"529","severity":1,"message":"530","line":533,"column":37,"nodeType":"531","messageId":"532","endLine":533,"endColumn":39},{"ruleId":"529","severity":1,"message":"530","line":562,"column":23,"nodeType":"531","messageId":"532","endLine":562,"endColumn":25},{"ruleId":"529","severity":1,"message":"530","line":572,"column":25,"nodeType":"531","messageId":"532","endLine":572,"endColumn":27},{"ruleId":"529","severity":1,"message":"530","line":574,"column":30,"nodeType":"531","messageId":"532","endLine":574,"endColumn":32},{"ruleId":"529","severity":1,"message":"530","line":576,"column":35,"nodeType":"531","messageId":"532","endLine":576,"endColumn":37},{"ruleId":"538","severity":1,"message":"539","line":611,"column":6,"nodeType":"540","endLine":611,"endColumn":8,"suggestions":"541"},{"ruleId":"529","severity":1,"message":"530","line":910,"column":19,"nodeType":"531","messageId":"532","endLine":910,"endColumn":21},{"ruleId":"529","severity":1,"message":"530","line":912,"column":26,"nodeType":"531","messageId":"532","endLine":912,"endColumn":28},{"ruleId":"529","severity":1,"message":"530","line":976,"column":19,"nodeType":"531","messageId":"532","endLine":976,"endColumn":21},{"ruleId":"529","severity":1,"message":"530","line":978,"column":26,"nodeType":"531","messageId":"532","endLine":978,"endColumn":28},{"ruleId":"529","severity":1,"message":"530","line":983,"column":19,"nodeType":"531","messageId":"532","endLine":983,"endColumn":21},{"ruleId":"529","severity":1,"message":"530","line":985,"column":26,"nodeType":"531","messageId":"532","endLine":985,"endColumn":28},{"ruleId":"529","severity":1,"message":"530","line":994,"column":50,"nodeType":"531","messageId":"532","endLine":994,"endColumn":52},{"ruleId":"524","severity":1,"message":"542","line":997,"column":7,"nodeType":"526","messageId":"527","endLine":997,"endColumn":50},{"ruleId":"529","severity":1,"message":"530","line":998,"column":44,"nodeType":"531","messageId":"532","endLine":998,"endColumn":46},{"ruleId":"529","severity":1,"message":"530","line":1003,"column":47,"nodeType":"531","messageId":"532","endLine":1003,"endColumn":49},{"ruleId":"543","replacedBy":"544"},{"ruleId":"545","replacedBy":"546"},{"ruleId":"543","replacedBy":"547"},{"ruleId":"545","replacedBy":"548"},{"ruleId":"529","severity":1,"message":"530","line":93,"column":23,"nodeType":"531","messageId":"532","endLine":93,"endColumn":25},{"ruleId":"529","severity":1,"message":"530","line":96,"column":17,"nodeType":"531","messageId":"532","endLine":96,"endColumn":19},{"ruleId":"529","severity":1,"message":"530","line":105,"column":23,"nodeType":"531","messageId":"532","endLine":105,"endColumn":25},{"ruleId":"538","severity":1,"message":"549","line":153,"column":6,"nodeType":"540","endLine":153,"endColumn":28,"suggestions":"550"},{"ruleId":"538","severity":1,"message":"549","line":169,"column":6,"nodeType":"540","endLine":169,"endColumn":8,"suggestions":"551"},{"ruleId":"543","replacedBy":"552"},{"ruleId":"545","replacedBy":"553"},{"ruleId":"524","severity":1,"message":"554","line":1,"column":27,"nodeType":"526","messageId":"527","endLine":1,"endColumn":33},{"ruleId":"524","severity":1,"message":"555","line":1,"column":35,"nodeType":"526","messageId":"527","endLine":1,"endColumn":44},{"ruleId":"524","severity":1,"message":"554","line":1,"column":27,"nodeType":"526","messageId":"527","endLine":1,"endColumn":33},{"ruleId":"524","severity":1,"message":"555","line":1,"column":35,"nodeType":"526","messageId":"527","endLine":1,"endColumn":44},{"ruleId":"543","replacedBy":"556"},{"ruleId":"545","replacedBy":"557"},{"ruleId":"543","replacedBy":"558"},{"ruleId":"545","replacedBy":"559"},{"ruleId":"524","severity":1,"message":"560","line":5,"column":22,"nodeType":"526","messageId":"527","endLine":5,"endColumn":30},{"ruleId":"524","severity":1,"message":"561","line":28,"column":25,"nodeType":"526","messageId":"527","endLine":28,"endColumn":39},{"ruleId":"524","severity":1,"message":"562","line":2,"column":10,"nodeType":"526","messageId":"527","endLine":2,"endColumn":20},{"ruleId":"524","severity":1,"message":"563","line":3,"column":10,"nodeType":"526","messageId":"527","endLine":3,"endColumn":15},{"ruleId":"524","severity":1,"message":"564","line":2,"column":10,"nodeType":"526","messageId":"527","endLine":2,"endColumn":14},{"ruleId":"524","severity":1,"message":"565","line":1,"column":17,"nodeType":"526","messageId":"527","endLine":1,"endColumn":25},{"ruleId":"524","severity":1,"message":"555","line":1,"column":27,"nodeType":"526","messageId":"527","endLine":1,"endColumn":36},{"ruleId":"529","severity":1,"message":"533","line":20,"column":34,"nodeType":"531","messageId":"532","endLine":20,"endColumn":36},{"ruleId":"529","severity":1,"message":"533","line":47,"column":34,"nodeType":"531","messageId":"532","endLine":47,"endColumn":36},{"ruleId":"524","severity":1,"message":"554","line":1,"column":39,"nodeType":"526","messageId":"527","endLine":1,"endColumn":45},{"ruleId":"524","severity":1,"message":"555","line":1,"column":47,"nodeType":"526","messageId":"527","endLine":1,"endColumn":56},{"ruleId":"524","severity":1,"message":"566","line":3,"column":59,"nodeType":"526","messageId":"527","endLine":3,"endColumn":75},{"ruleId":"529","severity":1,"message":"530","line":38,"column":59,"nodeType":"531","messageId":"532","endLine":38,"endColumn":61},{"ruleId":"529","severity":1,"message":"530","line":46,"column":19,"nodeType":"531","messageId":"532","endLine":46,"endColumn":21},{"ruleId":"529","severity":1,"message":"530","line":70,"column":21,"nodeType":"531","messageId":"532","endLine":70,"endColumn":23},{"ruleId":"529","severity":1,"message":"530","line":87,"column":21,"nodeType":"531","messageId":"532","endLine":87,"endColumn":23},{"ruleId":"538","severity":1,"message":"567","line":97,"column":6,"nodeType":"540","endLine":97,"endColumn":35,"suggestions":"568"},{"ruleId":"538","severity":1,"message":"569","line":97,"column":7,"nodeType":"570","endLine":97,"endColumn":34},{"ruleId":"529","severity":1,"message":"530","line":209,"column":19,"nodeType":"531","messageId":"532","endLine":209,"endColumn":21},{"ruleId":"529","severity":1,"message":"530","line":235,"column":19,"nodeType":"531","messageId":"532","endLine":235,"endColumn":21},{"ruleId":"529","severity":1,"message":"530","line":258,"column":19,"nodeType":"531","messageId":"532","endLine":258,"endColumn":21},{"ruleId":"524","severity":1,"message":"571","line":11,"column":35,"nodeType":"526","messageId":"527","endLine":11,"endColumn":41},{"ruleId":"529","severity":1,"message":"530","line":19,"column":28,"nodeType":"531","messageId":"532","endLine":19,"endColumn":30},{"ruleId":"534","severity":1,"message":"535","line":20,"column":44,"nodeType":"536","messageId":"537","endLine":20,"endColumn":46},{"ruleId":"529","severity":1,"message":"530","line":21,"column":30,"nodeType":"531","messageId":"532","endLine":21,"endColumn":32},{"ruleId":"534","severity":1,"message":"535","line":22,"column":46,"nodeType":"536","messageId":"537","endLine":22,"endColumn":48},{"ruleId":"529","severity":1,"message":"530","line":23,"column":35,"nodeType":"531","messageId":"532","endLine":23,"endColumn":37},{"ruleId":"529","severity":1,"message":"530","line":51,"column":25,"nodeType":"531","messageId":"532","endLine":51,"endColumn":27},{"ruleId":"534","severity":1,"message":"535","line":52,"column":45,"nodeType":"536","messageId":"537","endLine":52,"endColumn":47},{"ruleId":"529","severity":1,"message":"530","line":53,"column":26,"nodeType":"531","messageId":"532","endLine":53,"endColumn":28},{"ruleId":"529","severity":1,"message":"530","line":55,"column":33,"nodeType":"531","messageId":"532","endLine":55,"endColumn":35},{"ruleId":"538","severity":1,"message":"572","line":76,"column":6,"nodeType":"540","endLine":76,"endColumn":26,"suggestions":"573"},{"ruleId":"543","replacedBy":"574"},{"ruleId":"545","replacedBy":"575"},{"ruleId":"524","severity":1,"message":"576","line":11,"column":16,"nodeType":"526","messageId":"527","endLine":11,"endColumn":22},{"ruleId":"529","severity":1,"message":"530","line":24,"column":21,"nodeType":"531","messageId":"532","endLine":24,"endColumn":23},{"ruleId":"529","severity":1,"message":"530","line":35,"column":21,"nodeType":"531","messageId":"532","endLine":35,"endColumn":23},{"ruleId":"534","severity":1,"message":"535","line":36,"column":44,"nodeType":"536","messageId":"537","endLine":36,"endColumn":46},{"ruleId":"529","severity":1,"message":"530","line":37,"column":23,"nodeType":"531","messageId":"532","endLine":37,"endColumn":25},{"ruleId":"529","severity":1,"message":"530","line":57,"column":23,"nodeType":"531","messageId":"532","endLine":57,"endColumn":25},{"ruleId":"529","severity":1,"message":"530","line":79,"column":21,"nodeType":"531","messageId":"532","endLine":79,"endColumn":23},{"ruleId":"534","severity":1,"message":"535","line":80,"column":39,"nodeType":"536","messageId":"537","endLine":80,"endColumn":41},{"ruleId":"529","severity":1,"message":"530","line":81,"column":28,"nodeType":"531","messageId":"532","endLine":81,"endColumn":30},{"ruleId":"538","severity":1,"message":"577","line":98,"column":6,"nodeType":"540","endLine":98,"endColumn":8,"suggestions":"578"},{"ruleId":"524","severity":1,"message":"562","line":2,"column":10,"nodeType":"526","messageId":"527","endLine":2,"endColumn":20},{"ruleId":"524","severity":1,"message":"555","line":1,"column":27,"nodeType":"526","messageId":"527","endLine":1,"endColumn":36},{"ruleId":"524","severity":1,"message":"579","line":5,"column":10,"nodeType":"526","messageId":"527","endLine":5,"endColumn":23},{"ruleId":"524","severity":1,"message":"576","line":7,"column":16,"nodeType":"526","messageId":"527","endLine":7,"endColumn":22},{"ruleId":"524","severity":1,"message":"580","line":25,"column":9,"nodeType":"526","messageId":"527","endLine":25,"endColumn":19},{"ruleId":"524","severity":1,"message":"581","line":26,"column":9,"nodeType":"526","messageId":"527","endLine":26,"endColumn":21},{"ruleId":"529","severity":1,"message":"530","line":31,"column":21,"nodeType":"531","messageId":"532","endLine":31,"endColumn":23},{"ruleId":"529","severity":1,"message":"530","line":40,"column":25,"nodeType":"531","messageId":"532","endLine":40,"endColumn":27},{"ruleId":"529","severity":1,"message":"533","line":50,"column":25,"nodeType":"531","messageId":"532","endLine":50,"endColumn":27},{"ruleId":"529","severity":1,"message":"530","line":65,"column":23,"nodeType":"531","messageId":"532","endLine":65,"endColumn":25},{"ruleId":"534","severity":1,"message":"535","line":66,"column":49,"nodeType":"536","messageId":"537","endLine":66,"endColumn":51},{"ruleId":"529","severity":1,"message":"530","line":67,"column":25,"nodeType":"531","messageId":"532","endLine":67,"endColumn":27},{"ruleId":"529","severity":1,"message":"530","line":71,"column":27,"nodeType":"531","messageId":"532","endLine":71,"endColumn":29},{"ruleId":"529","severity":1,"message":"530","line":91,"column":21,"nodeType":"531","messageId":"532","endLine":91,"endColumn":23},{"ruleId":"529","severity":1,"message":"530","line":93,"column":23,"nodeType":"531","messageId":"532","endLine":93,"endColumn":25},{"ruleId":"529","severity":1,"message":"530","line":95,"column":27,"nodeType":"531","messageId":"532","endLine":95,"endColumn":29},{"ruleId":"529","severity":1,"message":"530","line":98,"column":27,"nodeType":"531","messageId":"532","endLine":98,"endColumn":29},{"ruleId":"529","severity":1,"message":"530","line":114,"column":48,"nodeType":"531","messageId":"532","endLine":114,"endColumn":50},{"ruleId":"529","severity":1,"message":"530","line":127,"column":28,"nodeType":"531","messageId":"532","endLine":127,"endColumn":30},{"ruleId":"529","severity":1,"message":"530","line":143,"column":23,"nodeType":"531","messageId":"532","endLine":143,"endColumn":25},{"ruleId":"529","severity":1,"message":"530","line":145,"column":25,"nodeType":"531","messageId":"532","endLine":145,"endColumn":27},{"ruleId":"529","severity":1,"message":"530","line":147,"column":27,"nodeType":"531","messageId":"532","endLine":147,"endColumn":29},{"ruleId":"529","severity":1,"message":"530","line":178,"column":21,"nodeType":"531","messageId":"532","endLine":178,"endColumn":23},{"ruleId":"534","severity":1,"message":"535","line":179,"column":44,"nodeType":"536","messageId":"537","endLine":179,"endColumn":46},{"ruleId":"529","severity":1,"message":"530","line":180,"column":23,"nodeType":"531","messageId":"532","endLine":180,"endColumn":25},{"ruleId":"534","severity":1,"message":"535","line":181,"column":43,"nodeType":"536","messageId":"537","endLine":181,"endColumn":45},{"ruleId":"529","severity":1,"message":"530","line":182,"column":25,"nodeType":"531","messageId":"532","endLine":182,"endColumn":27},{"ruleId":"529","severity":1,"message":"530","line":208,"column":21,"nodeType":"531","messageId":"532","endLine":208,"endColumn":23},{"ruleId":"534","severity":1,"message":"535","line":209,"column":44,"nodeType":"536","messageId":"537","endLine":209,"endColumn":46},{"ruleId":"529","severity":1,"message":"530","line":210,"column":23,"nodeType":"531","messageId":"532","endLine":210,"endColumn":25},{"ruleId":"534","severity":1,"message":"535","line":211,"column":43,"nodeType":"536","messageId":"537","endLine":211,"endColumn":45},{"ruleId":"529","severity":1,"message":"530","line":212,"column":25,"nodeType":"531","messageId":"532","endLine":212,"endColumn":27},{"ruleId":"529","severity":1,"message":"530","line":232,"column":21,"nodeType":"531","messageId":"532","endLine":232,"endColumn":23},{"ruleId":"534","severity":1,"message":"582","line":255,"column":70,"nodeType":"536","messageId":"583","endLine":255,"endColumn":72},{"ruleId":"584","severity":1,"message":"585","line":263,"column":23,"nodeType":"586","endLine":263,"endColumn":74},{"ruleId":"524","severity":1,"message":"587","line":2,"column":10,"nodeType":"526","messageId":"527","endLine":2,"endColumn":15},{"ruleId":"524","severity":1,"message":"588","line":18,"column":10,"nodeType":"526","messageId":"527","endLine":18,"endColumn":19},{"ruleId":"529","severity":1,"message":"533","line":24,"column":77,"nodeType":"531","messageId":"532","endLine":24,"endColumn":79},{"ruleId":"538","severity":1,"message":"589","line":44,"column":6,"nodeType":"540","endLine":44,"endColumn":28,"suggestions":"590"},{"ruleId":"524","severity":1,"message":"591","line":20,"column":8,"nodeType":"526","messageId":"527","endLine":20,"endColumn":17},{"ruleId":"524","severity":1,"message":"592","line":23,"column":9,"nodeType":"526","messageId":"527","endLine":23,"endColumn":20},{"ruleId":"524","severity":1,"message":"591","line":2,"column":8,"nodeType":"526","messageId":"527","endLine":2,"endColumn":17},{"ruleId":"524","severity":1,"message":"593","line":2,"column":10,"nodeType":"526","messageId":"527","endLine":2,"endColumn":23},{"ruleId":"524","severity":1,"message":"576","line":3,"column":16,"nodeType":"526","messageId":"527","endLine":3,"endColumn":22},{"ruleId":"594","severity":1,"message":"595","line":1,"column":1,"nodeType":"596","endLine":30,"endColumn":2},{"ruleId":"543","replacedBy":"597"},{"ruleId":"545","replacedBy":"598"},{"ruleId":"524","severity":1,"message":"579","line":5,"column":10,"nodeType":"526","messageId":"527","endLine":5,"endColumn":23},{"ruleId":"529","severity":1,"message":"530","line":18,"column":21,"nodeType":"531","messageId":"532","endLine":18,"endColumn":23},{"ruleId":"529","severity":1,"message":"530","line":35,"column":23,"nodeType":"531","messageId":"532","endLine":35,"endColumn":25},{"ruleId":"534","severity":1,"message":"535","line":36,"column":46,"nodeType":"536","messageId":"537","endLine":36,"endColumn":48},{"ruleId":"529","severity":1,"message":"530","line":37,"column":25,"nodeType":"531","messageId":"532","endLine":37,"endColumn":27},{"ruleId":"529","severity":1,"message":"530","line":59,"column":21,"nodeType":"531","messageId":"532","endLine":59,"endColumn":23},{"ruleId":"584","severity":1,"message":"585","line":82,"column":11,"nodeType":"586","endLine":82,"endColumn":58},{"ruleId":"524","severity":1,"message":"599","line":1,"column":36,"nodeType":"526","messageId":"527","endLine":1,"endColumn":39},{"ruleId":"524","severity":1,"message":"600","line":7,"column":10,"nodeType":"526","messageId":"527","endLine":7,"endColumn":21},{"ruleId":"524","severity":1,"message":"601","line":9,"column":10,"nodeType":"526","messageId":"527","endLine":9,"endColumn":25},{"ruleId":"538","severity":1,"message":"602","line":41,"column":6,"nodeType":"540","endLine":41,"endColumn":14,"suggestions":"603"},{"ruleId":"604","severity":1,"message":"605","line":62,"column":13,"nodeType":"586","endLine":62,"endColumn":45},{"ruleId":"524","severity":1,"message":"591","line":2,"column":8,"nodeType":"526","messageId":"527","endLine":2,"endColumn":17},{"ruleId":"524","severity":1,"message":"606","line":2,"column":8,"nodeType":"526","messageId":"527","endLine":2,"endColumn":15},{"ruleId":"524","severity":1,"message":"607","line":5,"column":10,"nodeType":"526","messageId":"527","endLine":5,"endColumn":20},{"ruleId":"524","severity":1,"message":"554","line":1,"column":27,"nodeType":"526","messageId":"527","endLine":1,"endColumn":33},{"ruleId":"524","severity":1,"message":"555","line":1,"column":35,"nodeType":"526","messageId":"527","endLine":1,"endColumn":44},{"ruleId":"594","severity":1,"message":"595","line":3,"column":1,"nodeType":"596","endLine":12,"endColumn":3},{"ruleId":"524","severity":1,"message":"608","line":4,"column":8,"nodeType":"526","messageId":"527","endLine":4,"endColumn":18},{"ruleId":"524","severity":1,"message":"609","line":13,"column":9,"nodeType":"526","messageId":"527","endLine":13,"endColumn":21},{"ruleId":"524","severity":1,"message":"610","line":2,"column":27,"nodeType":"526","messageId":"527","endLine":2,"endColumn":33},{"ruleId":"524","severity":1,"message":"611","line":2,"column":41,"nodeType":"526","messageId":"527","endLine":2,"endColumn":46},{"ruleId":"524","severity":1,"message":"612","line":2,"column":48,"nodeType":"526","messageId":"527","endLine":2,"endColumn":54},{"ruleId":"524","severity":1,"message":"613","line":14,"column":8,"nodeType":"526","messageId":"527","endLine":14,"endColumn":20},{"ruleId":"529","severity":1,"message":"530","line":83,"column":23,"nodeType":"531","messageId":"532","endLine":83,"endColumn":25},{"ruleId":"529","severity":1,"message":"530","line":86,"column":17,"nodeType":"531","messageId":"532","endLine":86,"endColumn":19},{"ruleId":"529","severity":1,"message":"530","line":95,"column":23,"nodeType":"531","messageId":"532","endLine":95,"endColumn":25},{"ruleId":"524","severity":1,"message":"614","line":10,"column":8,"nodeType":"526","messageId":"527","endLine":10,"endColumn":16},"@typescript-eslint/no-unused-vars","'Image' is defined but never used.","Identifier","unusedVar","'setState' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'props.match.params.id' and 'setBuilderState'. Either include them or remove the dependency array.","ArrayExpression",["615"],"'getMessageIndexWhichHasNextOfGivenMessageId' is assigned a value but never used.","no-native-reassign",["616"],"no-negated-in-lhs",["617"],["616"],["617"],"React Hook useEffect has a missing dependency: 'botId'. Either include it or remove the dependency array.",["618"],["619"],["616"],["617"],"'useRef' is defined but never used.","'useEffect' is defined but never used.",["616"],["617"],["616"],["617"],"'FormLink' is defined but never used.","'onRequestClose' is assigned a value but never used.","'darkerGrey' is defined but never used.","'media' is defined but never used.","'grey' is defined but never used.","'useState' is defined but never used.","'BtnEditorWrapper' is defined but never used.","React Hook React.useEffect has missing dependencies: 'builderState', 'objIndex', and 'setValue'. Either include them or remove the dependency array.",["620"],"React Hook React.useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","MemberExpression","'errors' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'setValue'. Either include it or remove the dependency array.",["621"],["616"],["617"],"'uuidv4' is defined but never used.","React Hook useEffect has a missing dependency: 'register'. Either include it or remove the dependency array.",["622"],"'AddTextButton' is defined but never used.","'headingRef' is assigned a value but never used.","'paragraphRef' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'toast' is defined but never used.","'isLoading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'bot' and 'getFlowsData'. Either include them or remove the dependency array.",["623"],"'AppLayout' is defined but never used.","'authContext' is assigned a value but never used.","'FlowStateType' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["616"],["617"],"'Ref' is defined but never used.","'TiFlowMerge' is defined but never used.","'IoSettingsSharp' is defined but never used.","React Hook useEffect has a missing dependency: 'handleSidebarState'. Either include it or remove the dependency array. If 'handleSidebarState' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["624"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'Toolbar' is defined but never used.","'AuthButton' is defined but never used.","'Breadcrumb' is defined but never used.","'sidebarState' is assigned a value but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'ConfigureBot' is defined but never used.","'feature2' is defined but never used.",{"desc":"625","fix":"626"},"no-global-assign","no-unsafe-negation",{"desc":"627","fix":"628"},{"desc":"629","fix":"630"},{"desc":"631","fix":"632"},{"desc":"633","fix":"634"},{"desc":"635","fix":"636"},{"desc":"637","fix":"638"},{"desc":"639","fix":"640"},"Update the dependencies array to be: [props.match.params.id, setBuilderState]",{"range":"641","text":"642"},"Update the dependencies array to be: [pageNumber, lastPage, botId]",{"range":"643","text":"644"},"Update the dependencies array to be: [botId]",{"range":"645","text":"646"},"Update the dependencies array to be: [builderState, objIndex, setValue]",{"range":"647","text":"648"},"Update the dependencies array to be: [editorContent.name, setValue]",{"range":"649","text":"650"},"Update the dependencies array to be: [register]",{"range":"651","text":"652"},"Update the dependencies array to be: [pageNumber, lastPage, getFlowsData, bot]",{"range":"653","text":"654"},"Update the dependencies array to be: [handleSidebarState, isOpen]",{"range":"655","text":"656"},[18582,18584],"[props.match.params.id, setBuilderState]",[5033,5055],"[pageNumber, lastPage, botId]",[5753,5755],"[botId]",[3102,3131],"[builderState, objIndex, setValue]",[2393,2413],"[editorContent.name, setValue]",[3089,3091],"[register]",[1398,1420],"[pageNumber, lastPage, getFlowsData, bot]",[1369,1377],"[handleSidebarState, isOpen]"]