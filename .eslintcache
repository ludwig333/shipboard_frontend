[{"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Flows/index.tsx":"1","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Toolbar/index.tsx":"2","/home/rabinson/Freelancing/ShipboardBot/frontend/src/styles/global.ts":"3","/home/rabinson/Freelancing/ShipboardBot/frontend/src/styles/mediaQueries.ts":"4","/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Auth/reducer.ts":"5","/home/rabinson/Freelancing/ShipboardBot/frontend/src/utils/storage.ts":"6","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/error/404.tsx":"7","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/auth/LoginPage.tsx":"8","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Templates/index.tsx":"9","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Bots/index.tsx":"10","/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/bots.ts":"11","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/Dropdown/styles.ts":"12","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/layout/AuthLayout.tsx":"13","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/DeleteModal.tsx":"14","/home/rabinson/Freelancing/ShipboardBot/frontend/src/constants/urls.ts":"15","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/footer/index.tsx":"16","/home/rabinson/Freelancing/ShipboardBot/frontend/src/utils/pagination.ts":"17","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/feature/styles.ts":"18","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Sidebar/index.tsx":"19","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/layout/AppLayout.tsx":"20","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Breadcrumb/index.tsx":"21","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Toolbar/styles.ts":"22","/home/rabinson/Freelancing/ShipboardBot/frontend/src/App.tsx":"23","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Dashboard/index.tsx":"24","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/auth/ForgotPasswordPage.tsx":"25","/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/auth.ts":"26","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/header/index.tsx":"27","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/feature/index.tsx":"28","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/header/styles.ts":"29","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/footer/styles.ts":"30","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/Pagination/styles.ts":"31","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Sidebar/styles.ts":"32","/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Builder/BuilderProvider.tsx":"33","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Image/index.tsx":"34","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Text/index.tsx":"35","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Image/styles.ts":"36","/home/rabinson/Freelancing/ShipboardBot/frontend/src/index.tsx":"37","/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Auth/JWTValidator.ts":"38","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/LandingPage.tsx":"39","/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Modal/ModalProvider.tsx":"40","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/form.ts":"41","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/Pagination/index.tsx":"42","/home/rabinson/Freelancing/ShipboardBot/frontend/src/utils/request.ts":"43","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/info/styles.ts":"44","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/navbar/styles.ts":"45","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Breadcrumb/style.ts":"46","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/typography.ts":"47","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Text/styles.ts":"48","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/auth/RegisterPage.tsx":"49","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/Table/styles.ts":"50","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/info/index.tsx":"51","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Card/index.tsx":"52","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Card/styles.ts":"53","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Settings/index.tsx":"54","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/Modal.tsx":"55","/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Auth/AuthProvider.tsx":"56","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Flows/styles.ts":"57","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/buttons.ts":"58","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/navbar/index.tsx":"59","/home/rabinson/Freelancing/ShipboardBot/frontend/src/routes/ProtectedRoute.tsx":"60"},{"size":6803,"mtime":1609649223053,"results":"61","hashOfConfig":"62"},{"size":4692,"mtime":1610179320165,"results":"63","hashOfConfig":"62"},{"size":1036,"mtime":1610076116379,"results":"64","hashOfConfig":"62"},{"size":437,"mtime":1607357171179,"results":"65","hashOfConfig":"62"},{"size":442,"mtime":1607166058000,"results":"66","hashOfConfig":"62"},{"size":330,"mtime":1606965896953,"results":"67","hashOfConfig":"62"},{"size":467,"mtime":1608091184084,"results":"68","hashOfConfig":"62"},{"size":3083,"mtime":1608089518101,"results":"69","hashOfConfig":"62"},{"size":210,"mtime":1610158645219,"results":"70","hashOfConfig":"62"},{"size":4338,"mtime":1608091636749,"results":"71","hashOfConfig":"62"},{"size":976,"mtime":1608088875135,"results":"72","hashOfConfig":"62"},{"size":605,"mtime":1607959318429,"results":"73","hashOfConfig":"62"},{"size":3062,"mtime":1607357777066,"results":"74","hashOfConfig":"62"},{"size":1108,"mtime":1608088908001,"results":"75","hashOfConfig":"62"},{"size":378,"mtime":1607839803392,"results":"76","hashOfConfig":"62"},{"size":795,"mtime":1607276608868,"results":"77","hashOfConfig":"62"},{"size":570,"mtime":1607912715680,"results":"78","hashOfConfig":"62"},{"size":707,"mtime":1606842094420,"results":"79","hashOfConfig":"62"},{"size":3609,"mtime":1608218330018,"results":"80","hashOfConfig":"62"},{"size":1174,"mtime":1609586086819,"results":"81","hashOfConfig":"62"},{"size":201,"mtime":1608361158453,"results":"82","hashOfConfig":"62"},{"size":1668,"mtime":1610176768352,"results":"83","hashOfConfig":"62"},{"size":2028,"mtime":1609586041116,"results":"84","hashOfConfig":"62"},{"size":159,"mtime":1607998049825,"results":"85","hashOfConfig":"62"},{"size":2699,"mtime":1607850305009,"results":"86","hashOfConfig":"62"},{"size":1159,"mtime":1607840479831,"results":"87","hashOfConfig":"62"},{"size":962,"mtime":1607398449634,"results":"88","hashOfConfig":"62"},{"size":2469,"mtime":1607354234054,"results":"89","hashOfConfig":"62"},{"size":2194,"mtime":1607358477789,"results":"90","hashOfConfig":"62"},{"size":758,"mtime":1607358268935,"results":"91","hashOfConfig":"62"},{"size":686,"mtime":1607915643490,"results":"92","hashOfConfig":"62"},{"size":2446,"mtime":1608360773902,"results":"93","hashOfConfig":"62"},{"size":1923,"mtime":1609681753860,"results":"94","hashOfConfig":"62"},{"size":2145,"mtime":1609948862329,"results":"95","hashOfConfig":"62"},{"size":2243,"mtime":1610162410607,"results":"96","hashOfConfig":"62"},{"size":1664,"mtime":1610076394115,"results":"97","hashOfConfig":"62"},{"size":515,"mtime":1607764359769,"results":"98","hashOfConfig":"62"},{"size":299,"mtime":1607173241742,"results":"99","hashOfConfig":"62"},{"size":395,"mtime":1606572185322,"results":"100","hashOfConfig":"62"},{"size":3565,"mtime":1608961298239,"results":"101","hashOfConfig":"62"},{"size":945,"mtime":1608217208422,"results":"102","hashOfConfig":"62"},{"size":1433,"mtime":1608056204918,"results":"103","hashOfConfig":"62"},{"size":494,"mtime":1607840291044,"results":"104","hashOfConfig":"62"},{"size":1251,"mtime":1607358308147,"results":"105","hashOfConfig":"62"},{"size":596,"mtime":1607358244451,"results":"106","hashOfConfig":"62"},{"size":144,"mtime":1608361046389,"results":"107","hashOfConfig":"62"},{"size":1320,"mtime":1609667047505,"results":"108","hashOfConfig":"62"},{"size":1065,"mtime":1610160837489,"results":"109","hashOfConfig":"62"},{"size":4457,"mtime":1607849994798,"results":"110","hashOfConfig":"62"},{"size":1615,"mtime":1607262024293,"results":"111","hashOfConfig":"62"},{"size":1029,"mtime":1607690783508,"results":"112","hashOfConfig":"62"},{"size":8464,"mtime":1610159119521,"results":"113","hashOfConfig":"62"},{"size":2734,"mtime":1610160143779,"results":"114","hashOfConfig":"62"},{"size":218,"mtime":1607998072129,"results":"115","hashOfConfig":"62"},{"size":4044,"mtime":1608088537269,"results":"116","hashOfConfig":"62"},{"size":1534,"mtime":1607842467004,"results":"117","hashOfConfig":"62"},{"size":112,"mtime":1609068259711,"results":"118","hashOfConfig":"62"},{"size":2109,"mtime":1608351731407,"results":"119","hashOfConfig":"62"},{"size":717,"mtime":1607357496043,"results":"120","hashOfConfig":"62"},{"size":943,"mtime":1608087628160,"results":"121","hashOfConfig":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"125"},"v8ty68",{"filePath":"126","messages":"127","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"147"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"150"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"125"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"135"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"171"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"147"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"125"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"125"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"194"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"197"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"171"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"135"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"147"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"125"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"125"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"239","messages":"240","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"194"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"135"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"135"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"135"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Flows/index.tsx",["271","272","273","274","275"],"import React, { useState, useContext } from 'react';\nimport { FlowBuilderWrapper } from './styles';\nimport { Stage, Layer, Rect, Line, Text, Group, Circle } from 'react-konva';\nimport Toolbar from '../../../components/dashboard/builder/Toolbar/index';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport {\n  BuilderContext,\n  useBuilder,\n} from '../../../services/Builder/BuilderProvider';\n\nconst Flows = (props: any) => {\n  const [isToolbarActive, setIsToolbarActive] = useState(null);\n  const [builderState, setBuilderState] = useBuilder();\n  const [id, setId] = useState(null);\n\n  const [state, setState] = useState({\n    layerScale: 1,\n    layerX: 0,\n    layerY: 0,\n  });\n\n  const hideToolbar = () => {\n    setIsToolbarActive(false);\n    setId(0);\n  };\n\n  const showToolbar = (id) => {\n    setId(id);\n    setIsToolbarActive(true);\n  };\n\n  return (\n    <FlowBuilderWrapper>\n      {isToolbarActive && <Toolbar id={id} hideToolbar={hideToolbar} />}\n      <Stage\n        width={window.innerWidth}\n        height={window.innerHeight}\n        scaleX={state.layerScale}\n        scaleY={state.layerScale}\n        x={0}\n        y={0}>\n        <Layer name=\"layer_1\" draggable onWheel={handleWheel}>\n          <Rect\n            x={-window.innerWidth}\n            y={-window.innerHeight}\n            width={window.innerWidth * 3}\n            height={window.innerHeight * 3}\n            fill=\"\"\n          />\n          <Group draggable x={200} y={200}>\n            <Rect\n              cornerRadius={16}\n              width={300}\n              height={100}\n              fill=\"#FDFDFD\"\n              strokeWidth={2}\n              shadowColor=\"gray\"\n              shadowOpacity={0.7}\n              shadowBlur={2}\n            />\n            <Circle x={30} y={30} radius={15} fill=\"green\" />\n            <Text\n              x={55}\n              y={22}\n              text=\"Starting Step\"\n              fontFamily={'Roboto'}\n              fontSize={20}\n              fill={'gray'}\n            />\n            <Circle x={280} y={80} radius={9} fill=\"#8392AB\" strokeWidth={1} />\n            <Text\n              x={195}\n              y={72}\n              text=\"Next Step\"\n              fontFamily={'Roboto'}\n              fontSize={15}\n              fontWeight={300}\n              fill={'gray'}\n            />\n          </Group>\n          {builderState &&\n            builderState.map((item) => {\n              return (\n                <Group draggable onClick={(e) => showToolbar(item.id)}>\n                  <Rect\n                    cornerRadius={16}\n                    height={item.height}\n                    width={300}\n                    fill=\"#FDFDFD\"\n                    strokeWidth={2}\n                    shadowColor=\"gray\"\n                    shadowOpacity={0.7}\n                    shadowBlur={2}\n                  />\n                  <Circle x={30} y={30} radius={15} fill=\"#5850EB\" />\n                  <Text\n                    x={55}\n                    y={22}\n                    text={item.name}\n                    fontFamily={'Roboto'}\n                    fontSize={20}\n                    fill={'gray'}\n                  />\n                  <Circle\n                    x={280}\n                    y={item.height - 20}\n                    radius={9}\n                    fill=\"#8392AB\"\n                    strokeWidth={1}\n                  />\n                  <Text\n                    x={195}\n                    y={item.height - 25}\n                    text=\"Next Step\"\n                    fontFamily={'Roboto'}\n                    fontSize={15}\n                    fontWeight={300}\n                    fill={'gray'}\n                  />\n                  {typeof item.children == 'object' ? (\n                    <>\n                      {item.children.length > 0 ? (\n                        item.children.map((child) => {\n                          return getChildren(child);\n                        })\n                      ) : (\n                        <Rect\n                          x={30}\n                          y={100}\n                          height={60}\n                          width={250}\n                          fill=\"#EEF1F4\"\n                        />\n                      )}\n                    </>\n                  ) : null}\n                </Group>\n              );\n            })}\n        </Layer>\n        <Layer name=\"layer_2\">\n          <Circle\n            x={1525}\n            y={40}\n            radius={24}\n            fill=\"#5850EB\"\n            onClick={() => {\n\n              let number = builderState.length + 1;\n              builderState.push({\n                id: uuidv4(),\n                name: 'Send Message #' + number,\n                position: {\n                  x: 1300,\n                  y: 50,\n                },\n                height: 250,\n                children: [],\n              });\n            }}\n          />\n        </Layer>\n      </Stage>\n    </FlowBuilderWrapper>\n  );\n};\n\nexport default Flows;\n\nconst getChildren = (children) => {\n  if (children.type === 'text') {\n    return (\n      <>\n        <Rect\n          x={100}\n          y={100}\n          fill=\"#F0F4F7\"\n          stroke=\"lightgray\"\n          cornerRadius={5}\n          height={100}\n          width={200}\n        />\n        <Text x={150} y={150} text={children.value} fontSize={16} />\n      </>\n    );\n  } else if (children.type === 'image') {\n    return (\n      <Rect\n        x={100}\n        y={200}\n        fill=\"black\"\n        stroke=\"lightgray\"\n        cornerRadius={5}\n        height={50}\n        width={200}\n      />\n    );\n  }\n};\n\nconst handleWheel = (e) => {\n  e.evt.preventDefault();\n\n  const scaleBy = 0.9;\n  const stage = e.target.getStage();\n  const layer = stage.find('.layer_1')[0];\n\n  const oldScale = layer.scaleX();\n  const newScale = e.evt.deltaY > 0 ? oldScale * scaleBy : oldScale / scaleBy;\n  layer.scale({ x: newScale, y: newScale });\n\n  const layerPointerPosition = getRelativePointerPosition(layer);\n  const correctedLayerPointerPosition = {\n    x: layer.x() + layerPointerPosition.x * newScale,\n    y: layer.y() + layerPointerPosition.y * newScale,\n  };\n\n  const mousePointTo = {\n    x: correctedLayerPointerPosition.x / oldScale - layer.x() / oldScale,\n    y: correctedLayerPointerPosition.y / oldScale - layer.y() / oldScale,\n  };\n\n  const newLayerPos = {\n    x:\n      -(mousePointTo.x - correctedLayerPointerPosition.x / newScale) * newScale,\n    y:\n      -(mousePointTo.y - correctedLayerPointerPosition.y / newScale) * newScale,\n  };\n\n  layer.position(newLayerPos);\n  stage.draw();\n};\n\nconst getRelativePointerPosition = (node) => {\n  // returns mouse pointer position relative to the input node\n  var transform = node.getAbsoluteTransform().copy();\n  transform.invert();\n  var pos = node.getStage().getPointerPosition();\n  return transform.point(pos);\n};\n",["276","277"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Toolbar/index.tsx",["278","279","280","281"],"import React, { useContext, useState, useRef, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { ToolbarWrapper, ToolbarMenu, ToolbarButtonGroup } from './styles';\nimport { ToolbarHeading, VerticalGap } from '../../../common/typography';\nimport { ToolbarButton } from '../../../common/buttons';\nimport { BuilderContext } from '../../../../services/Builder/BuilderProvider';\nimport { v4 as uuidv4 } from 'uuid';\nimport FormImage from '../Form/Image/index';\nimport FormText from '../Form/Text/index';\nimport FormCard from '../Form/Card/index';\nimport { InputField } from '../../../common/form';\nimport Textarea from 'react-expanding-textarea';\n\nconst Toolbar = ({ id, hideToolbar }) => {\n  const [builderState, setBuilderState] = useContext(BuilderContext);\n  const [isChangingTitle, setIsChangingTitle] = useState(false);\n  const { register, handleSubmit } = useForm({ mode: 'onChange' });\n\n  const titleRef = useRef<HTMLInputElement>(null);\n\n  //Find index of specific object using findIndex method.\n  const objIndex = builderState.findIndex((obj) => obj.id == id);\n\n  const onChangeTitle = (data) => {\n    setBuilderState([\n      ...builderState,\n      (builderState[objIndex].name = data.title),\n    ]);\n  };\n\n  //UseEffects\n  useEffect(() => {\n    if (titleRef.current) {\n      register(titleRef.current);\n      titleRef.current.focus();\n    }\n  }, [isChangingTitle]);\n\n  return (\n    <ToolbarWrapper>\n      <ToolbarMenu>\n        <div className={isChangingTitle ? 'header active' : 'header'}>\n          <form onBlur={handleSubmit(onChangeTitle)}>\n            <Textarea\n              maxLength={35}\n              className=\"heading-input\"\n              ref={titleRef}\n              id=\"title\"\n              name=\"title\"\n              defaultValue={builderState[objIndex].name}\n              onBlur={() => setIsChangingTitle(false)}\n            />\n          </form>\n        </div>\n        {builderState[objIndex].children.length > 0 ? (\n          builderState[objIndex].children.map((child) => {\n            return (\n              <React.Fragment>\n                <VerticalGap size=\"3\" />\n                {getChildren(child, objIndex)}\n              </React.Fragment>\n            );\n          })\n        ) : (\n          <React.Fragment>\n            <VerticalGap size=\"3\" />\n            <p className=\"no-content-text\">No content</p>\n          </React.Fragment>\n        )}\n        <VerticalGap size=\"3\" />\n        <ToolbarButtons index={objIndex} />\n      </ToolbarMenu>\n    </ToolbarWrapper>\n  );\n};\n\nexport default Toolbar;\n\nconst ToolbarButtons = ({ index }) => {\n  const [builderState, setBuilderState] = useContext(BuilderContext);\n\n  const addText = () => {\n    let height = builderState[index].height;\n    height = height + 50;\n    setBuilderState([\n      ...builderState,\n      (builderState[index].height = height),\n      builderState[index].children.push({\n        id: uuidv4(),\n        type: 'text',\n        value: 'Change text',\n      }),\n    ]);\n  };\n\n  const addCard = () => {\n    setBuilderState([\n      ...builderState,\n      builderState[index].children.push({\n        id: uuidv4(),\n        type: 'card',\n        cards: [\n          {\n            id: uuidv4(),\n            active: true,\n            selectedImage: null,\n            imagePreviewUrl: '',\n            heading: 'subtitle #1',\n            body: 'This is the body paragraph',\n          },\n        ],\n      }),\n    ]);\n  };\n\n  const addImage = () => {\n    setBuilderState([\n      ...builderState,\n      builderState[index].children.push({ id: uuidv4(), type: 'image' }),\n    ]);\n  };\n\n  return (\n    <React.Fragment>\n      <ToolbarButtonGroup>\n        <ToolbarButton\n          height=\"6rem\"\n          width=\"6rem\"\n          fontSize=\"1.2rem\"\n          onClick={addText}>\n          + Text\n        </ToolbarButton>\n        <ToolbarButton\n          height=\"6rem\"\n          width=\"6rem\"\n          fontSize=\"1.2rem\"\n          onClick={addCard}>\n          + Card\n        </ToolbarButton>\n        <ToolbarButton\n          height=\"6rem\"\n          width=\"6rem\"\n          fontSize=\"1.2rem\"\n          onClick={addImage}>\n          + Image\n        </ToolbarButton>\n        <ToolbarButton height=\"4rem\" width=\"25rem\">\n          Next Button\n        </ToolbarButton>\n      </ToolbarButtonGroup>\n    </React.Fragment>\n  );\n};\n\nconst getChildren = (children, messageId) => {\n  if (children.type === 'text') {\n    return <FormText messageId={messageId} childId={children.id} />;\n  } else if (children.type === 'image') {\n    return <FormImage messageId={messageId} childId={children.id} />;\n  } else if (children.type === 'card') {\n    return <FormCard messageId={messageId} childId={children.id} />;\n  }\n};\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/styles/global.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/styles/mediaQueries.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Auth/reducer.ts",[],["282","283"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/utils/storage.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/error/404.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/auth/LoginPage.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Templates/index.tsx",["284"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Bots/index.tsx",["285","286","287","288","289","290"],"import React, { useState, useEffect } from 'react';\nimport AppLayout from '../../../components/layout/AppLayout';\nimport { PrimaryButton } from '../../../components/common/buttons';\nimport BotModal from '../../../components/dashboard/Bots/Modal';\nimport { getBots } from '../../../apis/bots';\nimport Pagination from '../../../components/common/Pagination/index';\nimport Table from '../../../components/common/Table';\nimport { TableWrapper } from '../../../components/common/Table/styles';\nimport { DropdownWrapper } from '../../../components/common/Dropdown/styles';\nimport { HiDotsVertical } from 'react-icons/hi';\nimport DeleteModal from '../../../components/dashboard/Bots/DeleteModal';\nimport { useModal } from '../../../services/Modal/ModalProvider';\n\ntype BotType = {\n  id: string;\n  name: string;\n  last_modified: string;\n};\n\nconst Bots = () => {\n  const { showModal, hideModal } = useModal();\n  const [bots, setBots] = useState<Array<BotType>>();\n  const [pageNumber, setPageNumber] = useState(1);\n  const [isLoading, setIsLoading] = useState(true);\n  const [lastPage, setLastPage] = useState(1);\n  const [refreshPage, setRefreshPage] = useState(false);\n\n  const getBotsData = (pageNumber: number) => {\n    getBots(pageNumber)\n      .then((response) => {\n        setBots(response.data);\n        setPageNumber(response.meta.current_page);\n        setLastPage(response.meta.last_page);\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  useEffect(() => {\n    getBotsData(pageNumber);\n  }, [pageNumber, lastPage, refreshPage]);\n\n  const handleRefresh = () => {\n    setRefreshPage(true);\n    setRefreshPage(false);\n  };\n  const handleCreateOpen = (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => {\n    showModal(() => (\n      <BotModal hideModal={hideModal} reloadPage={handleRefresh} />\n    ));\n  };\n\n  const handleEditOpen = (data: BotType) => {\n    showModal(() => (\n      <BotModal hideModal={hideModal} bots={data} reloadPage={handleRefresh} />\n    ));\n  };\n\n  const handleDeleteConfirmation = (data: BotType) => {\n    showModal(() => (\n      <DeleteModal\n        hideModal={hideModal}\n        bot={data}\n        reloadPage={handleRefresh}\n      />\n    ));\n  };\n\n  const handlePageChange = (pageNumber: number) => {\n    setPageNumber(pageNumber);\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"page-header\">\n        <h1 className=\"heading\">Bots</h1>\n        <PrimaryButton onClick={handleCreateOpen}>Add Bot</PrimaryButton>\n      </div>\n      <TableWrapper>\n        <div className=\"table-row\">\n          <p className=\"table-col-1\"></p>\n          <p className=\"table-col-3\">Name</p>\n          <p className=\"table-col-3\">Channels</p>\n          <p className=\"table-col-3\">Modified</p>\n          <p className=\"table-col-1\">Action</p>\n        </div>\n\n        {bots &&\n          bots.map((data: BotType) => {\n            return (\n              <div className=\"table-row table-row-data\">\n                <p className=\"table-col-1\"></p>\n                <p className=\"table-col-3\">{data.name}</p>\n                <p className=\"table-col-3\">-</p>\n                <p className=\"table-col-3\">{data.last_modified}</p>\n                <p className=\"table-col-1\">\n                  <DropdownWrapper>\n                    <label className=\"dropbtn\">\n                      <HiDotsVertical />\n                    </label>\n                    <div className=\"dropdown-content\">\n                      <a\n                        href=\"#\"\n                        onClick={() => {\n                          handleEditOpen(data);\n                        }}>\n                        Edit\n                      </a>\n                      <a href=\"#\">Configure</a>\n                      <a\n                        href=\"#\"\n                        onClick={() => {\n                          handleDeleteConfirmation(data);\n                        }}>\n                        Delete\n                      </a>\n                    </div>\n                  </DropdownWrapper>\n                </p>\n              </div>\n            );\n          })}\n      </TableWrapper>\n\n      <Pagination\n        activePage={pageNumber}\n        total={lastPage}\n        onChange={handlePageChange}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default Bots;\n",["291","292"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/bots.ts",[],["293","294"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/Dropdown/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/layout/AuthLayout.tsx",["295"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport logo from '../../assets/images/logo-dark.png';\nimport { AuthButton } from '../common/buttons';\n\ninterface LayoutProps {\n  children?: any;\n  type?: string;\n}\n\nconst AuthLayout: React.FC<LayoutProps> = (props) => {\n  return (\n    <LayoutWrapper>\n      <nav className=\"logo-bar\">\n        <Link to=\"/\">\n          <img className=\"logo-img\" src={logo} alt=\"Shipboard Logo\" />\n        </Link>\n      </nav>\n      <AuthContainer>\n        <div className=\"card\">{props.children}</div>\n        {/* {props.type === 'login' && (\n          <div className=\"auth-buttons\">\n            <AuthButton>Sign in with Google</AuthButton>\n            <AuthButton>Sign in with Facebook</AuthButton>\n          </div>\n        )} */}\n      </AuthContainer>\n      <FooterWrapper>\n        <p>©Shipbot Pvt. Ltd. 2020. All rights reserved</p>\n      </FooterWrapper>\n    </LayoutWrapper>\n  );\n};\n\nexport default AuthLayout;\n\nconst LayoutWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n  min-width: 50rem;\n  position: relative;\n\n  .logo-bar {\n    align-content: center;\n    display: flex;\n    margin: auto;\n    max-width: 144rem;\n    min-height: 10rem;\n    width: 100%;\n\n    img {\n      height: 4.5rem;\n      margin-top: 2rem;\n    }\n  }\n`;\n\nconst AuthContainer = styled.div`\n  align-content: center;\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  justify-content: center;\n  margin: auto;\n  position: relative;\n\n  .card {\n    align-items: center;\n    background: #ffffff;\n    border-radius: 24px;\n    box-shadow: 0px 4px 24px rgba(0, 0, 0, 0.12);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    margin-top: -10rem;\n    max-width: 40rem;\n    min-height: 30rem;\n    padding: 4rem;\n\n    h1 {\n      padding-bottom: 1rem;\n    }\n\n    h2 {\n      margin-top: -1rem;\n      padding-bottom: 1rem;\n    }\n\n    input {\n      margin-bottom: 1rem;\n      margin-top: 1rem;\n    }\n\n    .last-input {\n      margin-bottom: 3rem;\n    }\n\n    .link {\n      display: flex;\n      justify-content: space-around;\n      margin-top: 1rem;\n      width: 100%;\n    }\n\n    .go-back {\n      align-items: center;\n      align-self: flex-start;\n      color: #000;\n      cursor: pointer;\n      display: flex;\n      margin-top: 1rem;\n      text-decoration: none;\n\n      &:hover{\n        color: #000;\n        text-decoration-line: underline;\n      }\n\n      h5 {\n        font-family: Roboto, sans-serif;\n        font-size: 1.2rem;\n        font-weight: 300;\n      }\n\n      svg {\n        width: 1.5rem;\n        height: 1.5rem;\n      }\n\n      &:hover {\n        h5 {\n          text-decoration: underline;\n        }\n      }\n    }\n  }\n\n  .auth-buttons {\n    margin-left: -5rem;\n    margin-right: -5rem;\n    display: flex;\n    justify-content: space-between;\n    margin-top: 6rem;\n  }\n`;\n\nconst FooterWrapper = styled.footer`\n  bottom: 0rem;\n  font-size: 1.2rem;\n  padding-right: 10rem;\n  position: absolute;\n  text-align: right;\n  width: 100%;\n`;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/DeleteModal.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/constants/urls.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/footer/index.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/utils/pagination.ts",["296"],"export default  (c: number, m: number) => {\n  let current = c,\n    last = m,\n    delta = 2,\n    left = current - delta,\n    right = current + delta + 1,\n    range = [],\n    rangeWithDots = [],\n    l\n\n  for (let i = 1; i <= last; i++) {\n    if (i === 1 || i === last || (i >= left && i < right)) {\n      range.push(i)\n    }\n  }\n\n  for (let i of range) {\n    if (l) {\n      if (i - l === 2) {\n        rangeWithDots.push(l + 1)\n      } else if (i - l !== 1) {\n        rangeWithDots.push(\"...\")\n      }\n    }\n    rangeWithDots.push(i)\n    l = i\n  }\n\n  return rangeWithDots\n}","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/feature/styles.ts",["297"],"import styled from 'styled-components';\nimport { darkerGrey } from '../../../styles/theme';\n\nexport const FeatureWrapper = styled.section`\n  margin: auto;\n  max-width: 120rem;\n  margin-top: 3rem;\n  \n  .heading {\n    text-align: center;\n    margin-top: 2rem;\n  }\n`;\n\nexport const FeatureGrid = styled.div`\nmargin-top:1rem;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  text-align: none;\n\n  .feature {\n    background-color: ${props => props.theme.white};\n    border-radius: 20px;\n    box-shadow: 0px 4px 24px rgba(0, 0, 0, 0.25);    height: 24rem;\n    margin: 2rem;\n    padding: 2rem;\n    width: 35rem;\n\n    img {\n      width: 4rem;\n      height: auto;\n      margin-top: 1rem;\n    }\n  }\n`;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Sidebar/index.tsx",["298","299","300"],"import React, { useEffect, useRef, Ref } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport logo from '../../../assets/images/logo-light.png';\nimport shortLogo from '../../../assets/images/logo-short.png';\nimport avatar from '../../../assets/images/avatar.jpg';\nimport { AiOutlineDashboard, AiOutlineRobot } from 'react-icons/ai';\nimport { TiFlowMerge } from 'react-icons/ti';\nimport { HiTemplate } from 'react-icons/hi';\nimport { IoSettingsSharp, IoLogOut } from 'react-icons/io5';\nimport { getAuthUser, logOut } from '../../../apis/auth';\nimport { useAuthDispatch } from '../../../services/Auth/AuthProvider';\nimport {\n  SidebarWrapper,\n  SidebarMenu,\n  LogoWrapper,\n  UserInfoWrapper,\n  MenuItem,\n  ToggleBar,\n} from './styles';\nimport { BiChevronsLeft, BiChevronsRight } from 'react-icons/bi';\n\ninterface SidebarProps {\n  handleSidebarState: (isOpen: boolean) => void;\n}\n\nconst Sidebar: React.FC<SidebarProps> = ({ handleSidebarState }) => {\n  const [isOpen, setIsOpen] = React.useState(true);\n  const nameRef = useRef<HTMLHeadingElement>(null);\n  const history = useHistory();\n  const authDispatch = useAuthDispatch();\n\n  useEffect(() => {\n    getAuthUser().then((response) => {\n      var x = document.getElementById('username');\n      if (x) {\n        x.innerHTML = response.data.name;\n      }\n    });\n\n    handleSidebarState(isOpen);\n  }, [isOpen]);\n\n  const handleLogOut = (event: any) => {\n    event.preventDefault();\n    logOut().then((response) => {\n      authDispatch({\n        type: 'LOGOUT',\n      });\n      history.push('/');\n    });\n  };\n\n  return (\n    <SidebarWrapper>\n      <SidebarMenu isOpen={isOpen}>\n        <LogoWrapper>\n          <img src={isOpen ? logo : shortLogo} alt=\"Logo\" />\n        </LogoWrapper>\n        <UserInfoWrapper isOpen={isOpen}>\n          <img src={avatar} alt=\"Avatar\" />\n          <div className=\"user-info\">\n            <h2 ref={nameRef} id=\"username\"></h2>\n            <p>Profile Setting</p>\n          </div>\n        </UserInfoWrapper>\n        <div className=\"menu_list\">\n          <div className=\"menu_list-top\">\n            <Link to=\"/app\">\n              <MenuItem isActive isOpen={isOpen}>\n                <AiOutlineDashboard className=\"menu-icon\" />\n                <p>Dashboard</p>\n              </MenuItem>\n            </Link>\n            <Link to=\"/bots\">\n              <MenuItem isOpen={isOpen}>\n                <AiOutlineRobot className=\"menu-icon\" />\n                <p>Bots</p>\n              </MenuItem>\n            </Link>\n            <Link to=\"/flows\">\n              <MenuItem isOpen={isOpen}>\n                <TiFlowMerge className=\"menu-icon\" />\n                <p>Flows</p>\n              </MenuItem>\n            </Link>\n            <Link to=\"/templates\">\n              <MenuItem isOpen={isOpen}>\n                <HiTemplate className=\"menu-icon\" />\n                <p>Templates</p>\n              </MenuItem>\n            </Link>\n          </div>\n          <div className=\"menu_list-bottom\">\n            <Link to=\"/settings\">\n              <MenuItem isOpen={isOpen}>\n                <IoSettingsSharp className=\"menu-icon\" />\n                <p>Settings</p>\n              </MenuItem>\n            </Link>\n            <MenuItem isOpen={isOpen} onClick={handleLogOut}>\n              <IoLogOut className=\"menu-icon\" />\n              <p>Logout</p>\n            </MenuItem>\n          </div>\n        </div>\n      </SidebarMenu>\n      <ToggleBar onClick={() => setIsOpen(!isOpen)}>\n        {isOpen && <BiChevronsLeft />}\n        {!isOpen && <BiChevronsRight />}\n      </ToggleBar>\n    </SidebarWrapper>\n  );\n};\n\nexport default Sidebar;\n",["301","302"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/layout/AppLayout.tsx",["303","304"],"import React from 'react';\nimport styled from 'styled-components';\nimport Sidebar from '../dashboard/Sidebar';\nimport Breadcrumb from '../dashboard/Breadcrumb';\nimport { BuilderProvider } from '../../services/Builder/BuilderProvider';\n\ninterface LayoutProps {\n  children?: any;\n}\n\nconst AppLayout: React.FC<LayoutProps> = (props) => {\n  const [isOpen, setIsOpen] = React.useState<boolean>(true);\n  const sidebarState = React.useRef();\n\n  const handleSidebarState = React.useCallback((isOpen) => {\n    setIsOpen(isOpen);\n  }, []);\n\n  return (\n    <LayoutWrapper>\n      <Sidebar handleSidebarState={handleSidebarState} />\n      <BuilderProvider>\n        <AppContainer>\n          <Breadcrumb />\n          {props.children}\n        </AppContainer>\n      </BuilderProvider>\n    </LayoutWrapper>\n  );\n};\n\nexport default AppLayout;\n\nconst LayoutWrapper = styled.div`\n  display: flex;\n  min-height: 100vh;\n`;\n\nconst AppContainer = styled.div`\n  margin-left: -2rem;\n  flex-grow: 1;\n\n  h1 {\n    margin-top: 2rem;\n    margin-left: 2rem;\n  }\n\n  .page-header {\n    display: flex;\n    justify-content: space-between;\n    margin: 2rem;\n\n    .button {\n      align-self: center;\n    }\n  }\n`;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Breadcrumb/index.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Toolbar/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/App.tsx",["305","306"],"import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport LandingPage from './pages/LandingPage';\nimport GlobalStyle from './styles/global';\nimport RegisterPage from './pages/auth/RegisterPage';\nimport LoginPage from './pages/auth/LoginPage';\nimport ForgotPassworPage from './pages/auth/ForgotPasswordPage';\nimport { ProtectedRoute } from './routes/ProtectedRoute';\nimport Dashboard from './pages/main/Dashboard/index';\nimport NotFound from './pages/error/404';\nimport { useAuthContext } from './services/Auth/AuthProvider';\nimport Bots from './pages/main/Bots/index';\nimport Flows from './pages/main/Flows/index';\nimport Templates from './pages/main/Templates/index';\nimport Settings from './pages/main/Settings/index';\nimport ModalProvider from './services/Modal/ModalProvider';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport AppLayout from './components/layout/AppLayout';\n\nconst App: React.FC = () => {\n  const authContext = useAuthContext();\n  return (\n    <ModalProvider>\n      <BrowserRouter>\n        <GlobalStyle />\n        <>\n          <ToastContainer />\n          <Switch>\n            <Route exact path=\"/\" component={LandingPage} />\n            <Route exact path=\"/register\" component={RegisterPage} />\n            <Route exact path=\"/login\" component={LoginPage} />\n            <Route\n              exact\n              path=\"/forgot-password\"\n              component={ForgotPassworPage}\n            />\n            <ProtectedRoute exact path=\"/app\" component={Dashboard} />\n            <ProtectedRoute exact path=\"/bots\" component={Bots} />\n            <ProtectedRoute exact path=\"/flows\" component={Flows} />\n            <ProtectedRoute exact path=\"/templates\" component={Templates} />\n            <ProtectedRoute exact path=\"/settings\" component={Settings} />\n            <Route path=\"*\" component={NotFound} />\n          </Switch>\n        </>\n      </BrowserRouter>\n    </ModalProvider>\n  );\n};\n\nexport default App;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Dashboard/index.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/auth/ForgotPasswordPage.tsx",["307"],"import React, { useState, useEffect, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport AuthLayout from '../../components/layout/AuthLayout';\nimport { FormHeader, FormSubHeader } from '../../components/common/typography';\nimport { InputField, FormLink } from '../../components/common/form';\nimport { FormButton } from '../../components/common/buttons';\nimport { IoArrowBack } from 'react-icons/io5';\nimport { forgotPassword } from '../../apis/auth';\n\nconst ForgotPassworPage = () => {\n  const [email, setEmail] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isEmailed, setIsEmailed] = useState(false);\n  const [errorMessage, setErrorMessage] = useState({ email: '' });\n\n  const emailRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    emailRef.current && emailRef.current.focus();\n  }, []);\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setIsLoading(true);\n\n    forgotPassword(email)\n      .then((response) => {\n        setIsEmailed(true);\n      })\n      .catch((err) => {\n        if (err.response.status === 422) {\n          setErrorMessage({\n            email: err.response.data.errors.email\n              ? err.response.data.errors.email[0]\n              : '',\n          });\n        }\n      })\n      .finally(() => {\n        setIsLoading(false);\n    })\n  };\n\n  return (\n    <AuthLayout>\n      {!isEmailed && (\n        <form onSubmit={handleSubmit}>\n          <FormHeader>Forgot password?</FormHeader>\n          <FormSubHeader>\n            No worries! We’ll send you secure email to reset your password.\n          </FormSubHeader>\n          <InputField\n            isError={!!errorMessage.email}\n            className=\"last-input\"\n            id=\"email\"\n            placeholder=\"Type your password\"\n            type=\"email\"\n            ref={emailRef}\n            onChange={(e) => {\n              setEmail(e.target.value);\n            }}\n          />\n          {errorMessage.email && (\n            <span className=\"form-error\">{errorMessage.email}</span>\n          )}\n          <FormButton type=\"submit\" disabled={isLoading}>\n            {isLoading ? 'Loading...' : 'Email me'}\n          </FormButton>\n        </form>\n      )}\n      {isEmailed && (\n        <div>\n          <FormHeader>Email is on the way!</FormHeader>\n          <FormSubHeader>\n            We will send you email with the reset password link if (\n            <strong>{email}</strong>) exists in Shipboard.\n          </FormSubHeader>\n        </div>\n      )}\n      <Link to=\"/login\" className=\"go-back\">\n        <IoArrowBack />\n        <h5>Go Back</h5>\n      </Link>\n    </AuthLayout>\n  );\n};\n\nexport default ForgotPassworPage;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/auth.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/header/index.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/feature/index.tsx",["308"],"import React from 'react';\nimport { FeatureWrapper, FeatureGrid } from './styles';\nimport {\n  PrimaryHeader,\n  SecondaryHeader,\n  Paragraph,\n} from '../../common/typography';\n\nimport feature1 from '../../../assets/images/features/1.png';\nimport feature2 from '../../../assets/images/features/2.png';\nimport feature3 from '../../../assets/images/features/3.png';\nimport feature4 from '../../../assets/images/features/4.png';\nimport feature5 from '../../../assets/images/features/5.png';\n\nconst Feature = () => {\n  return (\n    <FeatureWrapper>\n      <PrimaryHeader className=\"heading\">Key Features</PrimaryHeader>\n      <FeatureGrid>\n        <div className=\"feature\">\n          <img src={feature1} alt=\"feature1\" />\n          <SecondaryHeader>Easy to develop</SecondaryHeader>\n          <Paragraph>\n            Create components connected them and make the bot flow in ease\n          </Paragraph>\n        </div>\n        <div className=\"feature\">\n          <img src={feature5} alt=\"feature1\" />\n          <SecondaryHeader>Multipe Platform</SecondaryHeader>\n          <Paragraph>\n            Create one bot and publish it in different platforms such as\n            facebook, slack, telegram, etc.\n          </Paragraph>\n        </div>\n        <div className=\"feature\">\n          <img src={feature3} alt=\"feature1\" />\n          <SecondaryHeader>Template Variety</SecondaryHeader>\n          <Paragraph>\n            Free templates which can be used to setup your bot.\n          </Paragraph>\n        </div>\n        <div className=\"feature\">\n          <img src={feature4} alt=\"feature1\" />\n          <SecondaryHeader>Rich Content</SecondaryHeader>\n          <Paragraph>\n            Various message content such as text, gallery, buttons.\n          </Paragraph>\n        </div>\n        <div className=\"feature\">\n          <img src={feature5} alt=\"feature1\" />\n          <SecondaryHeader>Feature 5</SecondaryHeader>\n          <Paragraph>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, t ut labore\n            et dolore magna aliqua.\n          </Paragraph>\n        </div>\n        <div className=\"feature\">\n          <img src={feature5} alt=\"feature1\" />\n          <SecondaryHeader>Feature 6</SecondaryHeader>\n          <Paragraph>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n            eiusmod tempor incididunt\n          </Paragraph>\n        </div>\n      </FeatureGrid>\n    </FeatureWrapper>\n  );\n};\n\nexport default Feature;\n",["309","310"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/header/styles.ts",[],["311","312"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/footer/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/Pagination/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Sidebar/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Builder/BuilderProvider.tsx",["313"],"import React, { useState, createContext, useContext } from 'react';\nimport { FlowStateType } from '../../../types';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst initialBuilderState = [\n  {\n    id: uuidv4(),\n    name: 'Send Message #1',\n    position: {\n      x: 50,\n      y: 50,\n    },\n    height: 250,\n    children: [\n      {\n        id: uuidv4(),\n        type: 'text',\n        value: 'This is text of first message',\n      },\n      {\n        id: uuidv4(),\n        type: 'image',\n        selectedImage: null,\n        imagePreviewUrl: ''\n      },\n      {\n        id: uuidv4(),\n        type: 'text',\n        value: 'This is text of another message',\n      },\n    ],\n  },\n  {\n    id: uuidv4(),\n    name: 'Send Message #2',\n    position: {\n      x: 400,\n      y: 50,\n    },\n    height: 250,\n    children: [\n      {\n        id: uuidv4(),\n        type: 'text',\n      },\n      {\n        id: uuidv4(),\n        type: 'text',\n      },\n      {\n        id: uuidv4(),\n        type: 'card',\n        cards: [{\n          id: uuidv4(),\n          selectedImage: null,\n          imagePreviewUrl: '',\n          heading: 'subtitle #1',\n          body: 'This is the body paragraph'\n        }, {\n            id: uuidv4(),\n            selectedImage: null,\n            imagePreviewUrl: '',\n            heading: 'subtitle #2',\n            body: 'This is body paragraph of second'\n        }]\n      }\n    ],\n  },\n];\n\nexport const BuilderContext = createContext(undefined);\n\nexport const BuilderProvider = ({ children }) => {\n  const [builderState, setBuilderState] = useState(initialBuilderState);\n  return (\n    <BuilderContext.Provider value={[builderState, setBuilderState]}>\n      {children} \n    </BuilderContext.Provider>  \n  );\n}\n\nexport const useBuilder = () => {\n  const context = useContext(BuilderContext);\n  if (context === undefined) {\n    throw new Error('useBuilderState must be used within a BuilderProvider');\n  }\n  return context;\n};\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Image/index.tsx",["314","315","316","317","318","319"],"import React, { useState, useEffect, useRef, useContext } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { ImageWrapper } from './styles';\nimport { BuilderContext } from '../../../../../services/Builder/BuilderProvider';\nimport { AddTextButton } from '../../../../common/buttons';\nimport { BiImageAdd, BiTrash } from 'react-icons/bi';\n\n\nconst FormImage = ({ messageId, childId }) => {\n  const [builderState, setBuilderState] = useContext(BuilderContext);\n  const { register, handleSubmit } = useForm({ mode: 'onChange' });\n\n  //Find index of specific object using findIndex method.\n  const childIndex = builderState[messageId].children.findIndex(\n    (obj) => obj.id == childId\n  );\n  \n  const image = builderState[messageId].children[childIndex];\n\n  const onSubmit = (data) => {  \n    let reader = new FileReader();\n\n    reader.onloadend = () => {\n      var updatedChildren = { ...builderState[messageId].children[childIndex], selectedImage: data.image[0], imagePreviewUrl: reader.result }\n\n      setBuilderState([\n        ...builderState,\n        builderState[messageId].children[childIndex] = updatedChildren\n      ]);\n    };\n\n    reader.readAsDataURL(data.image[0]);\n  };\n\n  const handleDelete = () => {\n    setBuilderState([\n      ...builderState,\n      builderState[messageId].children.splice(childIndex, 1),\n    ]);\n  };\n\n  return (\n    <ImageWrapper>\n      {image.imagePreviewUrl ? (\n        <div>\n          <img src={image.imagePreviewUrl} alt=\"image\"/>\n          {/* <AddTextButton height=\"4rem\" width=\"100%\">\n            Add Button\n          </AddTextButton> */}\n        </div>\n      ) : (\n        <form onChange={handleSubmit(onSubmit)}>\n          <input\n            ref={register}\n            type=\"file\"\n              id={\"file\"+ childIndex}\n            name=\"image\"\n            accept=\"image/*\"\n          />\n            <label htmlFor={\"file\" + childIndex}>\n            <BiImageAdd />\n            <p>Upload image</p>\n          </label>\n        </form>\n      )}\n      <button className=\"action-btn\">\n        <BiTrash onClick={handleDelete} />\n      </button>\n    </ImageWrapper>\n  );\n};\n\nexport default FormImage;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Text/index.tsx",["320","321","322"],"import React, { useEffect, useState, useRef, useContext } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { BuilderContext } from '../../../../../services/Builder/BuilderProvider';\nimport { AddTextWrapper } from './styles';\nimport { AddTextButton } from '../../../../common/buttons';\nimport { BiTrash } from 'react-icons/bi';\nimport Textarea from 'react-expanding-textarea';\n\nconst FormText = ({ messageId, childId }) => {\n  const [builderState, setBuilderState] = useContext(BuilderContext);\n  const { register, handleSubmit } = useForm({ mode: 'onChange' });\n  const [isChangingBody, setIsChangingBody] = useState(false);\n\n  const textAreaRef = useRef<HTMLTextAreaElement>(null);\n\n  //Find index of specific object using findIndex method.\n  const childIndex = builderState[messageId].children.findIndex(\n    (obj) => obj.id == childId\n  );\n\n  const onTextChange = (data) => {\n    var updatedCard = {\n      ...builderState[messageId].children[childIndex],\n      value: data.text,\n    };\n    setBuilderState([\n      ...builderState,\n      (builderState[messageId].children[childIndex] = updatedCard),\n    ]);\n  };\n\n  const handleDelete = () => {\n    setBuilderState([\n      ...builderState,\n      builderState[messageId].children.splice(childIndex, 1),\n    ]);\n  };\n\n  useEffect(() => {\n    if (textAreaRef.current) {\n      register(textAreaRef.current);\n      textAreaRef.current.focus();\n    }\n  }, [isChangingBody]);\n\n  return (\n    <AddTextWrapper>\n       <button className=\"action-btn\">\n        <BiTrash onClick={handleDelete} />\n      </button>\n      <div className={isChangingBody ? 'card-body active' : 'card-body'}>\n        <form onBlur={handleSubmit(onTextChange)}>\n          <Textarea\n            maxLength={500}\n            placeholder=\"Enter your text here\"\n            onBlur={() => setIsChangingBody(false)}\n            defaultValue={builderState[messageId].children[childIndex].value}\n            id=\"text\"\n            name=\"text\"\n            ref={textAreaRef}\n            onClick={() => setIsChangingBody(true)}\n          />\n        </form>\n      </div>\n\n      {/* <AddTextButton height=\"4rem\" width=\"100%\">\n        Add Button\n      </AddTextButton> */}\n    </AddTextWrapper>\n  );\n};\n\nexport default FormText;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Image/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/index.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Auth/JWTValidator.ts",["323"],"import jwt from 'jsonwebtoken';\n\nexport default (token: any) => {\n  if (token) {\n    const data: any = jwt.decode(token);\n\n    const expDate: Date = new Date(data.exp * 1000);\n    const currentDate: Date = new Date();\n    return expDate.valueOf() - currentDate.valueOf() > 0;\n  }\n  return false;\n};\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/LandingPage.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Modal/ModalProvider.tsx",["324"],"import React, { createContext, useContext, useState } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\ntype ModalStateContextType = {\n  View?: React.FC<{ hideModal: () => void }>;\n  isOpen: boolean;\n  onRequestClose?: () => void;\n};\n\ntype ModalStateModifierContextType = {\n  showModal: (View: React.FC, onRequestClose?: () => void) => void;\n  hideModal: () => void;\n};\n\nconst ModalStateContext = createContext<\n  ModalStateContextType | null | undefined\n>(null);\n\nconst ModalStateModifierContext = createContext<ModalStateModifierContextType>({\n  showModal: () => {},\n  hideModal: () => {},\n});\n\nconst ModalProvider = ({ children }: { children: React.ReactNode }) => {\n  const [modalState, setModalState] = useState<ModalStateContextType | null>();\n  const { isOpen, View, onRequestClose } = modalState || {\n    View: undefined,\n    onRequestClose: undefined,\n  };\n\n  const showModal = (\n    View?: React.FC<{ hideModal: () => void }>,\n    onRequestClose?: () => void\n  ) => {\n    setModalState({ View, isOpen: true, onRequestClose });\n  };\n  const hideModal = () => {\n    setModalState({\n      View: undefined,\n      isOpen: false,\n      onRequestClose: undefined,\n    });\n  };\n  const modalSpring = useSpring({\n    from: { display: 'none' },\n    to: async (next: any) => {\n      if (isOpen) {\n        await next({\n          display: 'block',\n          transform: 'translate(0px,0px)',\n          opacity: 1,\n        });\n      } else {\n        await next({ transform: 'translate(0px,100px)', opacity: 0 });\n        await next({\n          display: 'none',\n        });\n      }\n    },\n  });\n  return (\n    <ModalStateContext.Provider value={modalState}>\n      <ModalStateModifierContext.Provider value={{ showModal, hideModal }}>\n        {children}\n        <ModalWrapper>\n          <animated.div style={modalSpring} className=\"modal\">\n            {View && <View hideModal={hideModal} />}\n          </animated.div>\n        </ModalWrapper>\n      </ModalStateModifierContext.Provider>\n    </ModalStateContext.Provider>\n  );\n};\nModalProvider.propTypes = {\n  children: PropTypes.element,\n};\n\nexport default ModalProvider;\n\nexport const useModal = () => {\n  const context = useContext(ModalStateModifierContext);\n  if (context === undefined) {\n    throw new Error('useModal must be used within a ModalProvider');\n  }\n  return context;\n};\n\nexport const ModalWrapper = styled.div`\n\n  .modal {\n    position: fixed;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100vh;\n    background: rgba(0, 0, 0, 0.7);\n    backdrop-filter: blur(5px);\n    overflow-y: scroll;\n    overflow-x: hidden;\n    padding: 4rem 0;\n    h1 {\n      padding-bottom: 1rem;\n    }\n    h2 {\n      margin-top: -1rem;\n    }\n    input {\n      margin-bottom: 1rem;\n      margin-top: 1rem;\n    }\n    .last-input {\n      margin-bottom: 3rem;\n    }\n    &-exit {\n      background: rgb(255, 0, 76, 0.7);\n      border-radius: 10rem;\n      border: 0;\n      cursor: pointer;\n      height: 1.5rem;\n      outline: none;\n      padding: 0.5rem;\n      position: absolute;\n      right: 2rem;\n      top: 2rem;\n      width: 1.5rem;\n      &:active {\n        filter: brightness(0.8);\n      }\n    }\n    &-body {\n      align-items: center;\n      background: #ffffff;\n      border-radius: 24px;\n      box-shadow: 0px 4px 24px rgba(0, 0, 0, 0.12);\n      margin: 0 auto;\n      max-width: 40rem;\n      min-height: 25rem;\n      padding: 4rem;\n      position: relative;\n      /* p,\n      h2 {\n        color: black;\n      } */\n    }\n  }\n`;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/form.ts",["325"],"import styled from 'styled-components'\nimport { grey } from '../../styles/theme';\n\nexport const InputField = styled.input<{isError?: boolean}>`\n  background: ${props => props.isError ? '#FFE4E4' : '#F7F7F7'};\n  border-radius: 7px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.1);\n  box-sizing: border-box;\n  min-height: 3.8rem;\n  min-width: 30rem;\n  padding: .8rem;\n  outline: none;\n  font-family: Roboto, sans-serif;\n  font-style: normal;\n  font-weight: 400;\n  font-size: 1.4rem;\n  color: #000;\n  width: 100%;\n\n\n  &:focus {\n    font-weight: 400;\n    box-shadow: 0 0 0 3px rgba(164, 202, 254, 0.45);\n    border-color: #5850EC;\n  }\n\n  &::placeholder {\n    color: #d7d7d7;\n    font-size: 1.2rem;\n  }\n`;\n\nexport const FormLink = styled.a`\n  text-decoration: none;\n  font-size: 1.2rem;\n  font-family: Roboto, sans-serif;\n  color: #565252;\n\n  &:hover{\n    text-decoration-line: underline;\n    color: #000;\n  }\n`;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/Pagination/index.tsx",["326","327"],"import React, { useState, useEffect } from 'react';\nimport { PaginationItem, PaginationWrapper } from './styles';\nimport { BiChevronLeft, BiChevronRight } from 'react-icons/bi';\nimport pagination from '../../../utils/pagination';\n\ninterface PaginationPropsInteface {\n  total: number;\n  activePage: number;\n  onChange: (pageNumber: number) => void;\n}\n\nconst Pagination: React.FC<PaginationPropsInteface> = (props) => {\n  const pageBtns = pagination(props.activePage, props.total);\n\n  return (\n    <PaginationWrapper>\n      <PaginationItem>\n        <BiChevronLeft\n          onClick={() => {\n            props.onChange(props.activePage - 1);\n          }}\n        />\n      </PaginationItem>\n      {pageBtns &&\n        pageBtns.map((page, index) => {\n          if (typeof page !== 'string') {\n            var isActive = page === props.activePage ? 1 : 0;\n            return (\n              <PaginationItem\n                isActive={isActive}\n                onClick={() => {\n                  props.onChange(page);\n                }}>\n                {page}\n              </PaginationItem>\n            );\n          } else {\n            return <PaginationItem>...</PaginationItem>;\n          }\n        })}\n      <PaginationItem>\n        <BiChevronRight\n          onClick={() => {\n            props.onChange(props.activePage + 1);\n          }}\n        />\n      </PaginationItem>\n    </PaginationWrapper>\n  );\n};\n\nexport default Pagination;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/utils/request.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/info/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/navbar/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Breadcrumb/style.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/typography.ts",["328","329"],"import styled from 'styled-components';\nimport { darkerGrey } from '../../styles/theme';\nimport { media } from '../../styles/mediaQueries';\n\nexport const PrimaryHeader = styled.h1`\n  font-family: Comic Neue, Roboto, sans-serif;\n  font-weight: 700;\n  font-size: 3.6rem;\n  color: #000;\n`;\n\nexport const FormHeader = styled(PrimaryHeader)`\n  font-size: 2.6rem;\n  text-align: center;\n`;\n\nexport const FormSubHeader = styled.h2`\n  font-family: Roboto, sans-serif;\n  font-weight: 300;\n  font-size: 1.6rem;\n  color: #000;\n  text-align: center;\n`;\n\nexport const SecondaryHeader = styled.h1`\n  font-family: Roboto, sans-serif;\n  font-weight: 500;\n  line-height: 5.6rem;\n  color: #000;\n  font-size: 2.4rem;\n`; \n\nexport const Paragraph = styled.p`\n  font-family: inherit;\n  font-size: 1.5rem;\n  color: ${(props) => props.theme.darkerGrey};\n  line-height: 2.8rem;\n`;\n\nexport const ToolbarHeading = styled.h2`\n  font-family: Roboto, sans-serif;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 1.8rem;\n  line-height: 2.1rem;\n  color: #797979;\n`;\n\nexport const VerticalGap = styled.div<{size: string}>`\n  width: auto;\n  height: ${(props) => props.size}rem;\n  display: block;\n  flex-shrink: 0;\n`;\n\nexport const HorizontalGap = styled.div<{size: string}>`\n  width: ${(props) => props.size}rem;\n  height: auto;\n  display: block;\n`;","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Text/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/auth/RegisterPage.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/Table/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/info/index.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Card/index.tsx",["330","331","332","333","334","335","336","337","338","339"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Card/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Settings/index.tsx",["340"],"import React from 'react';\nimport AppLayout from '../../../components/layout/AppLayout';\n\nconst Settings = (props:any) => {\n  return (\n      <h1 className=\"main-heading\">Settings</h1>\n  );\n};\n\nexport default Settings;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/Modal.tsx",["341"],"import React, { useState, useRef, useEffect } from 'react';\nimport { FormHeader } from '../../common/typography';\nimport { InputField } from '../../common/form';\nimport { FormButton } from '../../common/buttons';\nimport { BotDataType } from '../../../../types';\nimport { saveBots, updateBot } from '../../../apis/bots';\nimport { toast } from 'react-toastify';\n\ntype BotType = {\n  id: string;\n  name: string;\n  last_modified?: string;\n};\n\nconst defaultBotData: BotType = {\n  id: '',\n  name: '',\n};\n\nconst BotModal = ({\n  hideModal,\n  bots,\n  reloadPage,\n}: {\n  hideModal?: () => void;\n  bots?: BotType;\n  reloadPage?: () => void;\n}) => {\n  const [botData, setBotData] = useState(bots || defaultBotData);\n  const [errorMessage, setErrorMessage] = useState(defaultBotData);\n\n  const [isLoading, setIsLoading] = useState(false);\n  const nameRef = useRef<HTMLInputElement>(null);\n\n  const buttonTitle = bots ? 'Update' : 'Save';\n\n  useEffect(() => {\n    nameRef.current && nameRef.current.focus();\n    if (bots) setBotData({ ...botData, name: bots.name });\n  }, []);\n\n  const handleChange = <P extends keyof BotDataType>(\n    prop: P,\n    value: BotDataType[P]\n  ) => {\n    setBotData({ ...botData, [prop]: value });\n    setErrorMessage({\n      ...errorMessage,\n      [prop]: '',\n    });\n  };\n\n  const resetState = () => {\n    setErrorMessage(defaultBotData);\n    setBotData(defaultBotData);\n    reloadPage();\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    setIsLoading(true);\n\n    try {\n      if (bots) {\n        editBot();\n      } else {\n        createBot();\n      }\n    } catch (e) {\n      toast.error('Something went wrong');\n    }\n  };\n\n  const createBot = () => {\n    saveBots({ name: botData.name })\n      .then((response) => {\n        resetState();\n        hideModal();\n        toast.success('Bot added successfully');\n      })\n      .catch((err) => {\n        if (err.response.status === 422) {\n          setErrorMessage({\n            ...botData,\n            name: err.response.data.errors.name\n              ? err.response.data.errors.name[0]\n              : '',\n          });\n        } else {\n          hideModal();\n          toast.error('Failed to create bot');\n        }\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const editBot = () => {\n    updateBot({ name: botData.name }, botData?.id || '1')\n      .then((response) => {\n        resetState();\n        hideModal();\n        toast.success('Bot updated successfully');\n      })\n      .catch((err) => {\n        if (err.response.status === 422) {\n          setErrorMessage({\n            ...botData,\n            name: err.response.data.errors.name\n              ? err.response.data.errors.name[0]\n              : '',\n          });\n        } else {\n          hideModal();\n          toast.error('Failed to update bot');\n        }\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"modal-body\">\n        <button className=\"modal-exit\" onClick={hideModal}></button>\n        <div className=\"modal-title\">\n          <FormHeader>{bots ? 'Edit Bot' : 'Create bot'}</FormHeader>\n        </div>\n        <div className=\"modal-content\">\n          <form className=\"bot-create-form\" onSubmit={handleSubmit}>\n            <InputField\n              isError={!!errorMessage.name}\n              className=\"last-input\"\n              type=\"text\"\n              id=\"name\"\n              placeholder=\"Bot Name\"\n              ref={nameRef}\n              onChange={(e) => {\n                handleChange('name', e.target.value);\n              }}\n              value={botData.name}\n            />\n            {errorMessage.name && (\n              <span className=\"form-error\">{errorMessage.name}</span>\n            )}\n            <FormButton type=\"submit\" disabled={isLoading}>\n              {isLoading ? 'Loading...' : buttonTitle}\n            </FormButton>\n          </form>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default BotModal;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Auth/AuthProvider.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Flows/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/buttons.ts",["342"],"import styled from 'styled-components';\nimport Toolbar from '../dashboard/builder/Toolbar/index';\n\nexport const StyledButton = styled.button`\n  background: #ffffff;\n  border-radius: 12px 12px 12px 0px;\n  border: 2px solid #5850eb;\n  box-sizing: border-box;\n  cursor: pointer;\n  font-family: Comic Neue, Roboto, sans-serif;\n  font-size: 1.5rem;\n  padding:.9rem;\n  width: 10rem;\n  outline: none;\n`;\n\nexport const PrimaryButton = styled(StyledButton)`\n  background-color: #5850eb;\n  color: #ffffff;\n  margin-right: 0rem;\n  &:focus {\n    background-color: #251DCA\n  }\n`;\n\nexport const FormButton = styled(PrimaryButton)`\n  width: 100%;\n  height: 3.5rem;\n  font-size: 1.6rem;\n  font-weight: 600;\n`;\n\nexport const AuthButton = styled(StyledButton)`\n  width: 20rem;\n  font-size: 1.6rem;\n`;\n\n\nexport const ToolbarButton = styled.button < { height?: string, width?: string, fontSize?: string}>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: ${props => props.height ? props.height : '2rem'};\n  width: ${props => props.width ? props.width : '2rem'};\n  border: none;\n  padding: 0;\n  background: #ffffff;\n  color: #8392AB;\n  font-family: Roboto, sans-serif;\n  font-weight: 400;\n  font-size: ${props => props.fontSize ? props.fontSize : '1.6rem'};\n  margin: .8rem;\n  cursor: pointer;\n  background-image: url(\"data:image/svg+xml,%3csvg width='100%25' height='100%25' xmlns='http://www.w3.org/2000/svg'%3e%3crect width='100%25' height='100%25' fill='none' rx='7' ry='7' stroke='%238392ABFF' stroke-width='4' stroke-dasharray='10%2c10' stroke-dashoffset='23' stroke-linecap='round'/%3e%3c/svg%3e\");\n  border-radius: 0px 0px 7px 7px;\n  &:hover {\n    background-image: url(\"data:image/svg+xml,%3csvg width='100%25' height='100%25' xmlns='http://www.w3.org/2000/svg'%3e%3crect width='100%25' height='100%25' fill='none' rx='7' ry='7' stroke='%235850EBFF' stroke-width='4' stroke-dasharray='10%2c10' stroke-dashoffset='23' stroke-linecap='round'/%3e%3c/svg%3e\");\n    color: #5850EB;\n  }\n`;\n\nexport const AddTextButton = styled(ToolbarButton)`\n  margin: 0rem;\n  margin-top: -.5rem;\n  width: 100%;\n`;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/navbar/index.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/routes/ProtectedRoute.tsx",[],{"ruleId":"343","severity":1,"message":"344","line":1,"column":27,"nodeType":"345","messageId":"346","endLine":1,"endColumn":37},{"ruleId":"343","severity":1,"message":"347","line":3,"column":30,"nodeType":"345","messageId":"346","endLine":3,"endColumn":34},{"ruleId":"343","severity":1,"message":"348","line":8,"column":3,"nodeType":"345","messageId":"346","endLine":8,"endColumn":17},{"ruleId":"343","severity":1,"message":"349","line":14,"column":24,"nodeType":"345","messageId":"346","endLine":14,"endColumn":39},{"ruleId":"343","severity":1,"message":"350","line":17,"column":17,"nodeType":"345","messageId":"346","endLine":17,"endColumn":25},{"ruleId":"351","replacedBy":"352"},{"ruleId":"353","replacedBy":"354"},{"ruleId":"343","severity":1,"message":"355","line":4,"column":10,"nodeType":"345","messageId":"346","endLine":4,"endColumn":24},{"ruleId":"343","severity":1,"message":"356","line":11,"column":10,"nodeType":"345","messageId":"346","endLine":11,"endColumn":20},{"ruleId":"357","severity":1,"message":"358","line":22,"column":59,"nodeType":"359","messageId":"360","endLine":22,"endColumn":61},{"ruleId":"361","severity":1,"message":"362","line":37,"column":6,"nodeType":"363","endLine":37,"endColumn":23,"suggestions":"364"},{"ruleId":"351","replacedBy":"365"},{"ruleId":"353","replacedBy":"366"},{"ruleId":"343","severity":1,"message":"367","line":2,"column":8,"nodeType":"345","messageId":"346","endLine":2,"endColumn":17},{"ruleId":"343","severity":1,"message":"367","line":2,"column":8,"nodeType":"345","messageId":"346","endLine":2,"endColumn":17},{"ruleId":"343","severity":1,"message":"368","line":7,"column":8,"nodeType":"345","messageId":"346","endLine":7,"endColumn":13},{"ruleId":"343","severity":1,"message":"369","line":24,"column":10,"nodeType":"345","messageId":"346","endLine":24,"endColumn":19},{"ruleId":"370","severity":1,"message":"371","line":108,"column":23,"nodeType":"372","endLine":112,"endColumn":28},{"ruleId":"370","severity":1,"message":"371","line":115,"column":23,"nodeType":"372","endLine":115,"endColumn":35},{"ruleId":"370","severity":1,"message":"371","line":116,"column":23,"nodeType":"372","endLine":120,"endColumn":28},{"ruleId":"351","replacedBy":"373"},{"ruleId":"353","replacedBy":"374"},{"ruleId":"351","replacedBy":"375"},{"ruleId":"353","replacedBy":"376"},{"ruleId":"343","severity":1,"message":"377","line":5,"column":10,"nodeType":"345","messageId":"346","endLine":5,"endColumn":20},{"ruleId":"378","severity":1,"message":"379","line":1,"column":1,"nodeType":"380","endLine":30,"endColumn":2},{"ruleId":"343","severity":1,"message":"381","line":2,"column":10,"nodeType":"345","messageId":"346","endLine":2,"endColumn":20},{"ruleId":"343","severity":1,"message":"382","line":1,"column":36,"nodeType":"345","messageId":"346","endLine":1,"endColumn":39},{"ruleId":"361","severity":1,"message":"383","line":41,"column":6,"nodeType":"363","endLine":41,"endColumn":14,"suggestions":"384"},{"ruleId":"385","severity":1,"message":"386","line":62,"column":13,"nodeType":"372","endLine":62,"endColumn":45},{"ruleId":"351","replacedBy":"387"},{"ruleId":"353","replacedBy":"388"},{"ruleId":"343","severity":1,"message":"389","line":12,"column":10,"nodeType":"345","messageId":"346","endLine":12,"endColumn":16},{"ruleId":"343","severity":1,"message":"390","line":13,"column":9,"nodeType":"345","messageId":"346","endLine":13,"endColumn":21},{"ruleId":"343","severity":1,"message":"367","line":19,"column":8,"nodeType":"345","messageId":"346","endLine":19,"endColumn":17},{"ruleId":"343","severity":1,"message":"391","line":22,"column":9,"nodeType":"345","messageId":"346","endLine":22,"endColumn":20},{"ruleId":"343","severity":1,"message":"392","line":5,"column":22,"nodeType":"345","messageId":"346","endLine":5,"endColumn":30},{"ruleId":"343","severity":1,"message":"393","line":10,"column":8,"nodeType":"345","messageId":"346","endLine":10,"endColumn":16},{"ruleId":"351","replacedBy":"394"},{"ruleId":"353","replacedBy":"395"},{"ruleId":"351","replacedBy":"396"},{"ruleId":"353","replacedBy":"397"},{"ruleId":"343","severity":1,"message":"398","line":2,"column":10,"nodeType":"345","messageId":"346","endLine":2,"endColumn":23},{"ruleId":"343","severity":1,"message":"399","line":1,"column":17,"nodeType":"345","messageId":"346","endLine":1,"endColumn":25},{"ruleId":"343","severity":1,"message":"400","line":1,"column":27,"nodeType":"345","messageId":"346","endLine":1,"endColumn":36},{"ruleId":"343","severity":1,"message":"401","line":1,"column":38,"nodeType":"345","messageId":"346","endLine":1,"endColumn":44},{"ruleId":"343","severity":1,"message":"402","line":5,"column":10,"nodeType":"345","messageId":"346","endLine":5,"endColumn":23},{"ruleId":"357","severity":1,"message":"358","line":15,"column":21,"nodeType":"359","messageId":"360","endLine":15,"endColumn":23},{"ruleId":"403","severity":1,"message":"404","line":46,"column":11,"nodeType":"372","endLine":46,"endColumn":57},{"ruleId":"343","severity":1,"message":"402","line":5,"column":10,"nodeType":"345","messageId":"346","endLine":5,"endColumn":23},{"ruleId":"357","severity":1,"message":"358","line":18,"column":21,"nodeType":"359","messageId":"360","endLine":18,"endColumn":23},{"ruleId":"361","severity":1,"message":"362","line":44,"column":6,"nodeType":"363","endLine":44,"endColumn":22,"suggestions":"405"},{"ruleId":"378","severity":1,"message":"379","line":3,"column":1,"nodeType":"380","endLine":12,"endColumn":3},{"ruleId":"343","severity":1,"message":"406","line":28,"column":25,"nodeType":"345","messageId":"346","endLine":28,"endColumn":39},{"ruleId":"343","severity":1,"message":"407","line":2,"column":10,"nodeType":"345","messageId":"346","endLine":2,"endColumn":14},{"ruleId":"343","severity":1,"message":"399","line":1,"column":17,"nodeType":"345","messageId":"346","endLine":1,"endColumn":25},{"ruleId":"343","severity":1,"message":"400","line":1,"column":27,"nodeType":"345","messageId":"346","endLine":1,"endColumn":36},{"ruleId":"343","severity":1,"message":"381","line":2,"column":10,"nodeType":"345","messageId":"346","endLine":2,"endColumn":20},{"ruleId":"343","severity":1,"message":"408","line":3,"column":10,"nodeType":"345","messageId":"346","endLine":3,"endColumn":15},{"ruleId":"343","severity":1,"message":"402","line":5,"column":10,"nodeType":"345","messageId":"346","endLine":5,"endColumn":23},{"ruleId":"357","severity":1,"message":"358","line":28,"column":21,"nodeType":"359","messageId":"360","endLine":28,"endColumn":23},{"ruleId":"357","severity":1,"message":"358","line":37,"column":25,"nodeType":"359","messageId":"360","endLine":37,"endColumn":27},{"ruleId":"357","severity":1,"message":"409","line":47,"column":25,"nodeType":"359","messageId":"360","endLine":47,"endColumn":27},{"ruleId":"357","severity":1,"message":"358","line":87,"column":48,"nodeType":"359","messageId":"360","endLine":87,"endColumn":50},{"ruleId":"357","severity":1,"message":"358","line":100,"column":28,"nodeType":"359","messageId":"360","endLine":100,"endColumn":30},{"ruleId":"361","severity":1,"message":"362","line":167,"column":6,"nodeType":"363","endLine":167,"endColumn":25,"suggestions":"410"},{"ruleId":"361","severity":1,"message":"362","line":174,"column":6,"nodeType":"363","endLine":174,"endColumn":22,"suggestions":"411"},{"ruleId":"412","severity":1,"message":"413","line":187,"column":70,"nodeType":"414","messageId":"415","endLine":187,"endColumn":72},{"ruleId":"403","severity":1,"message":"404","line":195,"column":23,"nodeType":"372","endLine":195,"endColumn":74},{"ruleId":"343","severity":1,"message":"367","line":2,"column":8,"nodeType":"345","messageId":"346","endLine":2,"endColumn":17},{"ruleId":"361","severity":1,"message":"416","line":40,"column":6,"nodeType":"363","endLine":40,"endColumn":8,"suggestions":"417"},{"ruleId":"343","severity":1,"message":"418","line":2,"column":8,"nodeType":"345","messageId":"346","endLine":2,"endColumn":15},"@typescript-eslint/no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'Line' is defined but never used.","'BuilderContext' is defined but never used.","'setBuilderState' is assigned a value but never used.","'setState' is assigned a value but never used.","no-native-reassign",["419"],"no-negated-in-lhs",["420"],"'ToolbarHeading' is defined but never used.","'InputField' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'register'. Either include it or remove the dependency array.","ArrayExpression",["421"],["419"],["420"],"'AppLayout' is defined but never used.","'Table' is defined but never used.","'isLoading' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["419"],["420"],["419"],["420"],"'AuthButton' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'darkerGrey' is defined but never used.","'Ref' is defined but never used.","React Hook useEffect has a missing dependency: 'handleSidebarState'. Either include it or remove the dependency array. If 'handleSidebarState' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["422"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.",["419"],["420"],"'isOpen' is assigned a value but never used.","'sidebarState' is assigned a value but never used.","'authContext' is assigned a value but never used.","'FormLink' is defined but never used.","'feature2' is defined but never used.",["419"],["420"],["419"],["420"],"'FlowStateType' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'AddTextButton' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.",["423"],"'onRequestClose' is assigned a value but never used.","'grey' is defined but never used.","'media' is defined but never used.","Expected '!==' and instead saw '!='.",["424"],["425"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has missing dependencies: 'botData' and 'bots'. Either include them or remove the dependency array. You can also do a functional update 'setBotData(b => ...)' if you only need 'botData' in the 'setBotData' call.",["426"],"'Toolbar' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"427","fix":"428"},{"desc":"429","fix":"430"},{"desc":"431","fix":"432"},{"desc":"433","fix":"434"},{"desc":"431","fix":"435"},{"desc":"436","fix":"437"},"Update the dependencies array to be: [isChangingTitle, register]",{"range":"438","text":"439"},"Update the dependencies array to be: [handleSidebarState, isOpen]",{"range":"440","text":"441"},"Update the dependencies array to be: [isChangingBody, register]",{"range":"442","text":"443"},"Update the dependencies array to be: [isChangingHeading, register]",{"range":"444","text":"445"},{"range":"446","text":"443"},"Update the dependencies array to be: [botData, bots]",{"range":"447","text":"448"},[1379,1396],"[isChangingTitle, register]",[1369,1377],"[handleSidebarState, isOpen]",[1417,1433],"[isChangingBody, register]",[4821,4840],"[isChangingHeading, register]",[4981,4997],[1057,1059],"[botData, bots]"]