[{"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Toolbar/index.tsx":"1","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Text/index.tsx":"2","/home/rabinson/Freelancing/ShipboardBot/frontend/src/styles/global.ts":"3","/home/rabinson/Freelancing/ShipboardBot/frontend/src/App.tsx":"4","/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Auth/reducer.ts":"5","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/LandingPage.tsx":"6","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/error/404.tsx":"7","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/auth/ForgotPasswordPage.tsx":"8","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Templates/index.tsx":"9","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Settings/index.tsx":"10","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Bots/index.tsx":"11","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/typography.ts":"12","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/buttons.ts":"13","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/Dropdown/styles.ts":"14","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/header/index.tsx":"15","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/Pagination/index.tsx":"16","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Flows/CreateModal.tsx":"17","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/EditModal.tsx":"18","/home/rabinson/Freelancing/ShipboardBot/frontend/src/utils/request.ts":"19","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/info/index.tsx":"20","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/feature/index.tsx":"21","/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/texts.ts":"22","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Card/index.tsx":"23","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Flows/builder.tsx":"24","/home/rabinson/Freelancing/ShipboardBot/frontend/src/styles/theme.ts":"25","/home/rabinson/Freelancing/ShipboardBot/frontend/src/styles/mediaQueries.ts":"26","/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Auth/JWTValidator.ts":"27","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/auth/LoginPage.tsx":"28","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Dashboard/index.tsx":"29","/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/auth.ts":"30","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/form.ts":"31","/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/bots.ts":"32","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Flows/styles.ts":"33","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Flows/DeleteModal.tsx":"34","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Flows/EditModal.tsx":"35","/home/rabinson/Freelancing/ShipboardBot/frontend/src/constants/urls.ts":"36","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/Pagination/styles.ts":"37","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/footer/styles.ts":"38","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Sidebar/index.tsx":"39","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Image/index.tsx":"40","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Flows/index.tsx":"41","/home/rabinson/Freelancing/ShipboardBot/frontend/src/index.tsx":"42","/home/rabinson/Freelancing/ShipboardBot/frontend/src/routes/ProtectedRoute.tsx":"43","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/table.ts":"44","/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/messages.ts":"45","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/CreateModal.tsx":"46","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/header/styles.ts":"47","/home/rabinson/Freelancing/ShipboardBot/frontend/src/utils/pagination.ts":"48","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/info/styles.ts":"49","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Image/styles.ts":"50","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Sidebar/styles.ts":"51","/home/rabinson/Freelancing/ShipboardBot/frontend/src/utils/storage.ts":"52","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/grid.ts":"53","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/layout/AuthLayout.tsx":"54","/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Builder/BuilderProvider.tsx":"55","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/footer/index.tsx":"56","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/navbar/index.tsx":"57","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Text/styles.ts":"58","/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/images.ts":"59","/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Auth/AuthProvider.tsx":"60","/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/flows.ts":"61","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/feature/styles.ts":"62","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/DeleteModal.tsx":"63","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Toolbar/styles.ts":"64","/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Modal/ModalProvider.tsx":"65","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Flows/helper.tsx":"66"},{"size":6146,"mtime":1611763306937,"results":"67","hashOfConfig":"68"},{"size":3032,"mtime":1611760487339,"results":"69","hashOfConfig":"68"},{"size":1061,"mtime":1610853751719,"results":"70","hashOfConfig":"68"},{"size":2168,"mtime":1611544707887,"results":"71","hashOfConfig":"68"},{"size":442,"mtime":1607166058000,"results":"72","hashOfConfig":"68"},{"size":395,"mtime":1606572185322,"results":"73","hashOfConfig":"68"},{"size":467,"mtime":1608091184084,"results":"74","hashOfConfig":"68"},{"size":2699,"mtime":1607850305009,"results":"75","hashOfConfig":"68"},{"size":210,"mtime":1610158645219,"results":"76","hashOfConfig":"68"},{"size":218,"mtime":1607998072129,"results":"77","hashOfConfig":"68"},{"size":5089,"mtime":1611759944525,"results":"78","hashOfConfig":"68"},{"size":1320,"mtime":1609667047505,"results":"79","hashOfConfig":"68"},{"size":2213,"mtime":1611420752275,"results":"80","hashOfConfig":"68"},{"size":603,"mtime":1611407912500,"results":"81","hashOfConfig":"68"},{"size":962,"mtime":1607398449634,"results":"82","hashOfConfig":"68"},{"size":1583,"mtime":1611403993930,"results":"83","hashOfConfig":"68"},{"size":2347,"mtime":1611495697651,"results":"84","hashOfConfig":"68"},{"size":2326,"mtime":1611505989860,"results":"85","hashOfConfig":"68"},{"size":494,"mtime":1607840291044,"results":"86","hashOfConfig":"68"},{"size":1029,"mtime":1607690783508,"results":"87","hashOfConfig":"68"},{"size":2469,"mtime":1607354234054,"results":"88","hashOfConfig":"68"},{"size":670,"mtime":1611717938172,"results":"89","hashOfConfig":"68"},{"size":9574,"mtime":1611072281689,"results":"90","hashOfConfig":"68"},{"size":13439,"mtime":1611719307803,"results":"91","hashOfConfig":"68"},{"size":300,"mtime":1606619841444,"results":"92","hashOfConfig":"68"},{"size":437,"mtime":1607357171179,"results":"93","hashOfConfig":"68"},{"size":299,"mtime":1607173241742,"results":"94","hashOfConfig":"68"},{"size":3083,"mtime":1608089518101,"results":"95","hashOfConfig":"68"},{"size":159,"mtime":1607998049825,"results":"96","hashOfConfig":"68"},{"size":1159,"mtime":1607840479831,"results":"97","hashOfConfig":"68"},{"size":945,"mtime":1608217208422,"results":"98","hashOfConfig":"68"},{"size":939,"mtime":1611505690538,"results":"99","hashOfConfig":"68"},{"size":517,"mtime":1611398726250,"results":"100","hashOfConfig":"68"},{"size":1488,"mtime":1611506630557,"results":"101","hashOfConfig":"68"},{"size":2316,"mtime":1611505901411,"results":"102","hashOfConfig":"68"},{"size":537,"mtime":1611888503956,"results":"103","hashOfConfig":"68"},{"size":686,"mtime":1607915643490,"results":"104","hashOfConfig":"68"},{"size":758,"mtime":1607358268935,"results":"105","hashOfConfig":"68"},{"size":3408,"mtime":1611544828468,"results":"106","hashOfConfig":"68"},{"size":3108,"mtime":1612015722469,"results":"107","hashOfConfig":"68"},{"size":4949,"mtime":1611759959539,"results":"108","hashOfConfig":"68"},{"size":515,"mtime":1607764359769,"results":"109","hashOfConfig":"68"},{"size":944,"mtime":1611287624293,"results":"110","hashOfConfig":"68"},{"size":1454,"mtime":1611403637931,"results":"111","hashOfConfig":"68"},{"size":853,"mtime":1611673406318,"results":"112","hashOfConfig":"68"},{"size":2305,"mtime":1611506040626,"results":"113","hashOfConfig":"68"},{"size":2194,"mtime":1607358477789,"results":"114","hashOfConfig":"68"},{"size":570,"mtime":1607912715680,"results":"115","hashOfConfig":"68"},{"size":1251,"mtime":1607358308147,"results":"116","hashOfConfig":"68"},{"size":1664,"mtime":1610076394115,"results":"117","hashOfConfig":"68"},{"size":2446,"mtime":1608360773902,"results":"118","hashOfConfig":"68"},{"size":330,"mtime":1606965896953,"results":"119","hashOfConfig":"68"},{"size":2167,"mtime":1611545543628,"results":"120","hashOfConfig":"68"},{"size":3062,"mtime":1607357777066,"results":"121","hashOfConfig":"68"},{"size":1239,"mtime":1611592415760,"results":"122","hashOfConfig":"68"},{"size":795,"mtime":1607276608868,"results":"123","hashOfConfig":"68"},{"size":717,"mtime":1607357496043,"results":"124","hashOfConfig":"68"},{"size":1065,"mtime":1610160837489,"results":"125","hashOfConfig":"68"},{"size":765,"mtime":1611888511608,"results":"126","hashOfConfig":"68"},{"size":1534,"mtime":1607842467004,"results":"127","hashOfConfig":"68"},{"size":972,"mtime":1611504300151,"results":"128","hashOfConfig":"68"},{"size":707,"mtime":1606842094420,"results":"129","hashOfConfig":"68"},{"size":1475,"mtime":1611506512498,"results":"130","hashOfConfig":"68"},{"size":1746,"mtime":1610853991933,"results":"131","hashOfConfig":"68"},{"size":3565,"mtime":1608961298239,"results":"132","hashOfConfig":"68"},{"size":6734,"mtime":1611635184103,"results":"133","hashOfConfig":"68"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"137"},"v8ty68",{"filePath":"138","messages":"139","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"141"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"147"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"147"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"147"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"147"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"147"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"147"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"155"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"155"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"155"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"147"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"155"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"147"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"155"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"152"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"155"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"237","messages":"238","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"147"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"155"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"147"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"137"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"283","messages":"284","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"291","messages":"292","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Toolbar/index.tsx",["293","294","295","296","297","298","299"],"import React, { useContext, useState, useRef, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { ToolbarWrapper, ToolbarMenu, ToolbarButtonGroup } from './styles';\nimport { VerticalGap } from '../../../common/typography';\nimport { ToolbarButton } from '../../../common/buttons';\nimport { BuilderContext } from '../../../../services/Builder/BuilderProvider';\nimport { v4 as uuidv4 } from 'uuid';\nimport FormImage from '../Form/Image/index';\nimport FormText from '../Form/Text/index';\nimport FormCard from '../Form/Card/index';\nimport { updateMessage } from '../../../../apis/messages';\nimport { toast } from 'react-toastify';\nimport { saveText } from '../../../../apis/texts';\nimport { saveImage } from '../../../../apis/images';\n\n\nconst Toolbar = ({ id, hideToolbar }) => {\n  const [builderState, setBuilderState] = useContext(BuilderContext);\n  const [isChangingTitle, setIsChangingTitle] = useState(false);\n  const { register, handleSubmit } = useForm({ mode: 'onChange' });\n\n  // const titleRef = useRef<HTMLInputElement>(null);\n\n  //Find index of specific object using findIndex method.\n  const objIndex = builderState.findIndex((obj) => obj.id == id);\n\n  const onChangeTitle = (data) => {\n    updateMessage({\n      name: data.title\n    }, id).then((response) => {\n      setBuilderState(\n        builderState.map((item, ind) => {\n          if (ind == objIndex) {\n           item.name = data.title\n          }\n          return item;\n        })\n      );\n    }).catch((err) => {\n      toast.error('Something went wrong')\n    })    \n  };\n\n  // //UseEffects\n  // useEffect(() => {\n  //   if (titleRef.current) {\n  //     register(titleRef.current);\n  //     titleRef.current.focus();\n  //   }\n  // }, [isChangingTitle]);\n\n  return (\n    <ToolbarWrapper>\n      {builderState[objIndex] &&\n        <ToolbarMenu>\n          <div className={isChangingTitle ? 'header active' : 'header'}>\n            <form onBlur={handleSubmit(onChangeTitle)}>\n              <input\n                maxLength={35}\n                className=\"heading-input\"\n                ref={register({required: true, minLength: 3})}\n                id=\"title\"\n                name=\"title\"\n                defaultValue={builderState[objIndex].name}\n                onBlur={() => setIsChangingTitle(false)}\n              />\n            </form>\n          </div>\n          {builderState[objIndex].children.length > 0 ? (\n            builderState[objIndex].children.map((child) => {\n              return (\n                <React.Fragment key={child.id}>\n                  <VerticalGap size=\"3\" />\n                  {getChildren(child, objIndex)}\n                </React.Fragment>\n              );\n            })\n          ) : (\n              <React.Fragment>\n                <VerticalGap size=\"3\" />\n                <p className=\"no-content-text\">No content</p>\n              </React.Fragment>\n            )}\n          <VerticalGap size=\"3\" />\n        <ToolbarButtons id={id} index={objIndex} />\n        </ToolbarMenu>\n      }\n    </ToolbarWrapper>\n  );\n};\n\nexport default Toolbar;\n\nconst ToolbarButtons = ({ id, index }) => {\n  const [builderState, setBuilderState] = useContext(BuilderContext);\n\n  const addText = () => {\n    var height = builderState[index].height;\n    height = height + 50;\n    const positionIndex = builderState[index].children.length + 1;\n    saveText({\n      text: 'Change text',\n      message: id,\n      position: positionIndex\n    }).then((response) => {\n      setBuilderState(\n        builderState.map((item, ind) => {\n          if (ind == index) {\n            item.height = height;\n            item.children.push(response.data);\n          }\n          return item;\n        })\n      );\n    }).catch((err) => {\n      toast.error(\"Something went wrong\");\n    })\n  };\n\n  const addCard = () => {\n    let height = builderState[index].height;\n    height = height + 150;\n\n    setBuilderState(\n      builderState.map((item, ind) => {\n        if (ind == index) {\n          item.height = height;\n          item.children.push({\n            id: uuidv4(),\n            type: 'card',\n            cards: [\n              {\n                id: uuidv4(),\n                active: true,\n                selectedImage: null,\n                imagePreviewUrl: '',\n                heading: 'subtitle #11',\n                body: 'This is the body paragraph',\n                height: 150,\n              },\n            ],\n          });\n        }\n        return item;\n      })\n    );\n  };\n\n  const addImage = () => {\n    let height = builderState[index].height;\n    height = height + 150;\n    const positionIndex = builderState[index].children.length + 1;\n\n    saveImage({\n      message: id,\n      position: positionIndex\n    }).then((response) => {\n      setBuilderState(\n        builderState.map((item, ind) => {\n          if (ind == index) {\n            item.height = height;\n            item.children.push(response.data);\n          }\n          return item;\n        })\n      );\n    }).catch((err) => {\n      toast.error(\"Something went wrong\");\n    })\n  };\n\n  return (\n    <React.Fragment>\n      <ToolbarButtonGroup>\n        <ToolbarButton\n          height=\"6rem\"\n          width=\"6rem\"\n          fontSize=\"1.2rem\"\n          onClick={addText}>\n          + Text\n        </ToolbarButton>\n        <ToolbarButton\n          height=\"6rem\"\n          width=\"6rem\"\n          fontSize=\"1.2rem\"\n          onClick={addCard}>\n          + Card\n        </ToolbarButton>\n        <ToolbarButton\n          height=\"6rem\"\n          width=\"6rem\"\n          fontSize=\"1.2rem\"\n          onClick={addImage}>\n          + Image\n        </ToolbarButton>\n        <ToolbarButton height=\"4rem\" width=\"25rem\">\n          Next Button\n        </ToolbarButton>\n      </ToolbarButtonGroup>\n    </React.Fragment>\n  );\n};\n\nconst getChildren = (children, messageId) => {\n  if (children.type === 'text') {\n    return <FormText messageId={messageId} childId={children.id} />;\n  } else if (children.type === 'image') {\n    return <FormImage messageId={messageId} childId={children.id} />;\n  } else if (children.type === 'card') {\n    return <FormCard messageId={messageId} childId={children.id} />;\n  }\n};\n",["300","301"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Text/index.tsx",["302","303","304","305","306","307","308"],"import React, { useEffect, useState, useRef, useContext } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { BuilderContext } from '../../../../../services/Builder/BuilderProvider';\nimport { AddTextWrapper } from './styles';\nimport { AddTextButton } from '../../../../common/buttons';\nimport { BiTrash } from 'react-icons/bi';\nimport Textarea from 'react-expanding-textarea';\nimport { updateText, deleteText } from '../../../../../apis/texts';\nimport { toast } from 'react-toastify';\n\nconst FormText = ({ messageId, childId }) => {\n  const [builderState, setBuilderState] = useContext(BuilderContext);\n  const { register, handleSubmit } = useForm({ mode: 'onChange' });\n  const [isChangingBody, setIsChangingBody] = useState(false);\n\n  const textAreaRef = useRef<HTMLTextAreaElement>(null);\n\n  //Find index of specific object using findIndex method.\n  const childIndex = builderState[messageId].children.findIndex(\n    (obj) => obj.id == childId\n  );\n\n  const onTextChange = (data) => {\n    var height = textAreaRef.current.scrollHeight;\n    updateText({\n      text: data.text\n    }, childId).then((response) => {\n      setBuilderState(\n        builderState.map((item, index) => {\n          if (index == messageId) {\n            item.children.map((child, ind) => {\n              if (ind == childIndex) {\n                child.value = data.text;\n                child.height = height;\n              }\n            });\n          }\n          return item;\n        })\n      );\n    }).catch((err) => {\n      toast.error(\"Something went wrong\");\n    })\n  };\n\n  const handleDelete = () => {\n    var height = builderState[messageId].height - textAreaRef.current.scrollHeight;\n    deleteText(childId)\n      .then(() => {\n        setBuilderState(\n          builderState.map((item, index) => {\n            if (index == messageId) {\n              item.height = height;\n              item.children.splice(childIndex,1)\n            }\n            return item;\n          })\n        );\n      })\n      .catch((err) => {\n        toast.error(\"Something went wrong\");\n    })\n  };\n\n  useEffect(() => {\n    if (textAreaRef.current) {\n      register(textAreaRef.current);\n      textAreaRef.current.focus();\n    }\n  }, [isChangingBody]);\n\n  return (\n    <AddTextWrapper>\n      <button className=\"action-btn\">\n        <BiTrash onClick={handleDelete} />\n      </button>\n      <div className={isChangingBody ? 'card-body active' : 'card-body'}>\n        <form onBlur={handleSubmit(onTextChange)}>\n          <Textarea\n            maxLength={500}\n            placeholder=\"Enter your text here\"\n            onBlur={() => setIsChangingBody(false)}\n            defaultValue={builderState[messageId].children[childIndex].value}\n            id=\"text\"\n            name=\"text\"\n            ref={textAreaRef}\n            onClick={() => setIsChangingBody(true)}\n          />\n        </form>\n      </div>\n\n      {/* <AddTextButton height=\"4rem\" width=\"100%\">\n        Add Button\n      </AddTextButton> */}\n    </AddTextWrapper>\n  );\n};\n\nexport default FormText;\n",["309","310"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/styles/global.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/App.tsx",["311","312"],"import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport LandingPage from './pages/LandingPage';\nimport GlobalStyle from './styles/global';\nimport RegisterPage from './pages/auth/RegisterPage';\nimport LoginPage from './pages/auth/LoginPage';\nimport ForgotPassworPage from './pages/auth/ForgotPasswordPage';\nimport { ProtectedRoute } from './routes/ProtectedRoute';\nimport Dashboard from './pages/main/Dashboard/index';\nimport NotFound from './pages/error/404';\nimport { useAuthContext } from './services/Auth/AuthProvider';\nimport Bots from './pages/main/Bots/index';\nimport Flows from './pages/main/Flows/index';\nimport FlowBuilder from './pages/main/Flows/builder';\nimport Templates from './pages/main/Templates/index';\nimport Settings from './pages/main/Settings/index';\nimport ModalProvider from './services/Modal/ModalProvider';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport AppLayout from './components/layout/AppLayout';\n\nconst App: React.FC = () => {\n  const authContext = useAuthContext();\n  return (\n    <ModalProvider>\n      <BrowserRouter>\n        <GlobalStyle />\n        <>\n          <ToastContainer />\n          <Switch>\n            <Route exact path=\"/\" component={LandingPage} />\n            <Route exact path=\"/register\" component={RegisterPage} />\n            <Route exact path=\"/login\" component={LoginPage} />\n            <Route\n              exact\n              path=\"/forgot-password\"\n              component={ForgotPassworPage}\n            />\n            <ProtectedRoute exact path=\"/app\" component={Dashboard} />\n            <ProtectedRoute exact path=\"/bots\" component={Bots} />\n            <ProtectedRoute exact path=\"/bot/:id\" component={Flows} />\n            <ProtectedRoute exact path=\"/bot/flow/:id\" component={ FlowBuilder } />\n            <ProtectedRoute exact path=\"/templates\" component={Templates} />\n            <ProtectedRoute exact path=\"/settings\" component={Settings} />\n            <Route path=\"*\" component={NotFound} />\n          </Switch>\n        </>\n      </BrowserRouter>\n    </ModalProvider>\n  );\n};\n\nexport default App;\n",["313","314"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Auth/reducer.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/LandingPage.tsx",[],["315","316"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/error/404.tsx",[],["317","318"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/auth/ForgotPasswordPage.tsx",["319"],"import React, { useState, useEffect, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport AuthLayout from '../../components/layout/AuthLayout';\nimport { FormHeader, FormSubHeader } from '../../components/common/typography';\nimport { InputField, FormLink } from '../../components/common/form';\nimport { FormButton } from '../../components/common/buttons';\nimport { IoArrowBack } from 'react-icons/io5';\nimport { forgotPassword } from '../../apis/auth';\n\nconst ForgotPassworPage = () => {\n  const [email, setEmail] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isEmailed, setIsEmailed] = useState(false);\n  const [errorMessage, setErrorMessage] = useState({ email: '' });\n\n  const emailRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    emailRef.current && emailRef.current.focus();\n  }, []);\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setIsLoading(true);\n\n    forgotPassword(email)\n      .then((response) => {\n        setIsEmailed(true);\n      })\n      .catch((err) => {\n        if (err.response.status === 422) {\n          setErrorMessage({\n            email: err.response.data.errors.email\n              ? err.response.data.errors.email[0]\n              : '',\n          });\n        }\n      })\n      .finally(() => {\n        setIsLoading(false);\n    })\n  };\n\n  return (\n    <AuthLayout>\n      {!isEmailed && (\n        <form onSubmit={handleSubmit}>\n          <FormHeader>Forgot password?</FormHeader>\n          <FormSubHeader>\n            No worries! We’ll send you secure email to reset your password.\n          </FormSubHeader>\n          <InputField\n            isError={!!errorMessage.email}\n            className=\"last-input\"\n            id=\"email\"\n            placeholder=\"Type your password\"\n            type=\"email\"\n            ref={emailRef}\n            onChange={(e) => {\n              setEmail(e.target.value);\n            }}\n          />\n          {errorMessage.email && (\n            <span className=\"form-error\">{errorMessage.email}</span>\n          )}\n          <FormButton type=\"submit\" disabled={isLoading}>\n            {isLoading ? 'Loading...' : 'Email me'}\n          </FormButton>\n        </form>\n      )}\n      {isEmailed && (\n        <div>\n          <FormHeader>Email is on the way!</FormHeader>\n          <FormSubHeader>\n            We will send you email with the reset password link if (\n            <strong>{email}</strong>) exists in Shipboard.\n          </FormSubHeader>\n        </div>\n      )}\n      <Link to=\"/login\" className=\"go-back\">\n        <IoArrowBack />\n        <h5>Go Back</h5>\n      </Link>\n    </AuthLayout>\n  );\n};\n\nexport default ForgotPassworPage;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Templates/index.tsx",["320"],"import React from 'react';\nimport AppLayout from '../../../components/layout/AppLayout';\n\nconst Templates = (props: any) => {\n  return <h1 className=\"main-heading\">Templates</h1>;\n};\n\nexport default Templates;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Settings/index.tsx",["321"],"import React from 'react';\nimport AppLayout from '../../../components/layout/AppLayout';\n\nconst Settings = (props:any) => {\n  return (\n      <h1 className=\"main-heading\">Settings</h1>\n  );\n};\n\nexport default Settings;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Bots/index.tsx",["322","323","324","325","326","327","328"],"import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Link, Route, Switch } from 'react-router-dom';\nimport { PrimaryButton } from '../../../components/common/buttons';\nimport { getBots } from '../../../apis/bots';\nimport Pagination from '../../../components/common/Pagination/index';\nimport { TableWrapper } from '../../../components/common/table';\nimport { DropdownWrapper } from '../../../components/common/Dropdown/styles';\nimport { HiDotsVertical } from 'react-icons/hi';\nimport { useModal } from '../../../services/Modal/ModalProvider';\nimport BotCreateModal from '../../../components/dashboard/Bots/CreateModal';\nimport BotEditModal from '../../../components/dashboard/Bots/EditModal';\nimport BotDeleteModal from '../../../components/dashboard/Bots/DeleteModal';\nimport { toast } from 'react-toastify';\n\ntype BotType = {\n  id: string;\n  name: string;\n  last_modified: string;\n};\n\nconst Bots = () => {\n  const { showModal, hideModal } = useModal();\n  const [bots, setBots] = useState<Array<BotType>>();\n  const [pageNumber, setPageNumber] = useState(1);\n  const [isLoading, setIsLoading] = useState(true);\n  const [lastPage, setLastPage] = useState(1);\n\n  const getBotsData = (pageNumber: number) => {\n    getBots(pageNumber)\n      .then((response) => {\n        setBots(response.data);\n        setPageNumber(response.meta.current_page);\n        setLastPage(response.meta.last_page);\n      })\n      .catch((err) => {\n        toast.error(\"Something went wrong\");\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  useEffect(() => {\n    getBotsData(pageNumber);\n  }, [pageNumber, lastPage]);\n\n  const handleCreateOpen = (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => {\n    showModal(() => (\n      <BotCreateModal hideModal={hideModal} handleCreateBot={ handleCreateBot}  />\n    ));\n  };\n\n  const handleEditOpen = (data: BotType) => {\n    showModal(() => (\n      <BotEditModal hideModal={hideModal} bot={data} handleEditBot={handleEditBot} />\n    ));\n  };\n\n  const handleDeleteConfirmation = (data: BotType) => {\n    showModal(() => (\n      <BotDeleteModal\n        hideModal={hideModal} bot={data} handleDeleteBot={handleDeleteBot}\n      />\n    ));\n  };\n\n  const handlePageChange = (pageNumber: number) => {\n    setPageNumber(pageNumber);\n  };\n\n  const handleCreateBot = (newBot: BotType) => { \n    const newBotList = bots.concat(newBot);\n    setBots(newBotList)\n  }\n\n  const handleEditBot = (data) => {\n    const botId = bots.findIndex(\n      (obj) => obj.id == data.id\n    );\n    setBots(bots.map((item, index) => {\n      if (index == botId) {\n        item.name = data.name\n      }\n      return item;\n    }));\n  }\n\n  const handleDeleteBot = (id) => {\n    const botId = bots.findIndex(\n      (obj) => obj.id == id\n    );\n    bots.splice(botId, 1);\n  }\n  \n\n  return (\n    <React.Fragment>\n      <div className=\"page-header\">\n      <h1 className=\"main-heading\">Bots</h1>\n        <PrimaryButton onClick={handleCreateOpen}>Add Bots</PrimaryButton>\n      </div>\n      <div className=\"container\">\n      <TableWrapper>\n        <li className=\"table-header\">\n          <div className=\"col col-1 flex-basis-50\">Name</div>\n          <div className=\"col col-2 flex-basis-20\">Channels</div>\n          <div className=\"col col-3 flex-basis-20\">Modified</div>\n          <div className=\"col col-4 flex-basis-10\">Action</div>\n        </li>\n        {bots &&\n          bots.map((data: BotType) => {\n            return (\n              <React.Fragment key={data.id}>\n                <Link to={\"bot/\" + data.id} className=\"table-row table-row-data\" >\n                <li className=\"table-row\">\n                  <div className=\"col col-1 flex-basis-50\" data-label=\"name\">{data.name}</div>\n                  <div className=\"col col-2 flex-basis-20\" data-label=\"channels\">-</div>\n                  <div className=\"col col-3 flex-basis-20\" data-label=\"last_modified\">{data.last_modified}</div>\n                  <div className=\"col col-4 flex-basis-10\" data-label=\"action\">\n                  <DropdownWrapper>\n                    <label className=\"dropbtn\">\n                      <HiDotsVertical />\n                    </label>\n                    <div className=\"dropdown-content\">\n                      <p\n                        onClick={() => {\n                          handleEditOpen(data);\n                        }}>\n                        Edit\n                      </p>\n                      <p>Configure</p>\n                      <p\n                        onClick={() => {\n                          handleDeleteConfirmation(data);\n                        }}>\n                        Delete\n                      </p>\n                    </div>\n                  </DropdownWrapper>\n                  </div>\n                </li>\n              </Link>\n              </React.Fragment>\n            );\n          })}\n      </TableWrapper>\n     </div>\n\n      <Pagination\n        activePage={pageNumber}\n        total={lastPage}\n        onChange={handlePageChange}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default Bots;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/typography.ts",["329","330"],"import styled from 'styled-components';\nimport { darkerGrey } from '../../styles/theme';\nimport { media } from '../../styles/mediaQueries';\n\nexport const PrimaryHeader = styled.h1`\n  font-family: Comic Neue, Roboto, sans-serif;\n  font-weight: 700;\n  font-size: 3.6rem;\n  color: #000;\n`;\n\nexport const FormHeader = styled(PrimaryHeader)`\n  font-size: 2.6rem;\n  text-align: center;\n`;\n\nexport const FormSubHeader = styled.h2`\n  font-family: Roboto, sans-serif;\n  font-weight: 300;\n  font-size: 1.6rem;\n  color: #000;\n  text-align: center;\n`;\n\nexport const SecondaryHeader = styled.h1`\n  font-family: Roboto, sans-serif;\n  font-weight: 500;\n  line-height: 5.6rem;\n  color: #000;\n  font-size: 2.4rem;\n`; \n\nexport const Paragraph = styled.p`\n  font-family: inherit;\n  font-size: 1.5rem;\n  color: ${(props) => props.theme.darkerGrey};\n  line-height: 2.8rem;\n`;\n\nexport const ToolbarHeading = styled.h2`\n  font-family: Roboto, sans-serif;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 1.8rem;\n  line-height: 2.1rem;\n  color: #797979;\n`;\n\nexport const VerticalGap = styled.div<{size: string}>`\n  width: auto;\n  height: ${(props) => props.size}rem;\n  display: block;\n  flex-shrink: 0;\n`;\n\nexport const HorizontalGap = styled.div<{size: string}>`\n  width: ${(props) => props.size}rem;\n  height: auto;\n  display: block;\n`;","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/buttons.ts",["331"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/Dropdown/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/header/index.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/Pagination/index.tsx",["332","333","334","335"],"import React, { useState, useEffect } from 'react';\nimport { PaginationItem, PaginationWrapper } from './styles';\nimport { BiChevronLeft, BiChevronRight } from 'react-icons/bi';\nimport pagination from '../../../utils/pagination';\n\ninterface PaginationPropsInteface {\n  total: number;\n  activePage: number;\n  onChange: (pageNumber: number) => void;\n}\n\nconst Pagination: React.FC<PaginationPropsInteface> = (props) => {\n  const pageBtns = pagination(props.activePage, props.total);\n\n  return (\n    <PaginationWrapper>\n      <PaginationItem>\n        <BiChevronLeft\n          onClick={() => {\n            if (props.activePage != 0) {\n              props.onChange(props.activePage - 1);\n            }\n          }}\n        />\n      </PaginationItem>\n      {pageBtns &&\n        pageBtns.map((page, index) => {\n          if (typeof page !== 'string') {\n            var isActive = page === props.activePage ? 1 : 0;\n            return (\n              <PaginationItem\n                isActive={isActive}\n                onClick={() => {\n                  props.onChange(page);\n                }}\n              key={index}>\n                {page}\n              </PaginationItem>\n            );\n          } else {\n            return <PaginationItem>...</PaginationItem>;\n          }\n        })}\n      <PaginationItem>\n        <BiChevronRight\n          onClick={() => {\n            if (props.activePage != props.total) {\n              props.onChange(props.activePage + 1);\n            }\n          }}\n        />\n      </PaginationItem>\n    </PaginationWrapper>\n  );\n};\n\nexport default Pagination;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Flows/CreateModal.tsx",["336","337"],"import React, { useState, useRef, useEffect } from 'react';\nimport { FormHeader } from '../../common/typography';\nimport { InputField } from '../../common/form';\nimport { FormButton } from '../../common/buttons';\nimport { useForm } from \"react-hook-form\";\nimport { saveFlow } from './../../../apis/flows';\nimport { toast } from 'react-toastify';\n\nconst FlowCreateModal = ({bot, hideModal, handleCreateFlow}) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const { register, handleSubmit, errors, setError } = useForm();  \n\n  const onSubmit = data => {\n    setIsLoading(true);\n    saveFlow({ name: data.name, bot: bot })\n      .then((response) => {\n        hideModal();\n        toast.success(response.message);\n        handleCreateFlow(response.data)\n      }).catch((err) => { \n        if (err.response.status === 422) {\n          if (err.response.data.errors.name) {\n            setError('name', {\n              type: 'server',\n              message: err.response.data.errors.name[0]\n            })\n          } \n        } else {\n          toast.error('Something went wrong')\n        }\n      }).finally(() => { \n        setIsLoading(false);\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"modal-body\">\n        <button className=\"modal-exit\" onClick={hideModal}></button>\n        <div className=\"modal-title\">\n          <FormHeader>Create Flow</FormHeader>\n        </div>\n        <div className=\"modal-content\">\n          <form className=\"bot-create-form\" onSubmit={handleSubmit(onSubmit)}>\n            <InputField\n              isError={!!errors.name}\n              name=\"name\"\n              placeholder=\"Enter flow name\"\n              ref={register({required: true, minLength: 3})}\n            />\n            {errors.name && errors.name.type === 'required' && (<p className=\"form-error\">This field is required</p>)}\n            {errors.name && errors.name.type === 'minLength' && (<p className=\"form-error\">This field is required min length of 3</p>)}\n            {errors.name && errors.name.type === 'server' && (<p className=\"form-error\">{ errors.name.message}</p>)}\n\n            <FormButton type=\"submit\" disabled={isLoading}>\n              {isLoading ? 'Loading...' : 'Save'}\n            </FormButton>\n          </form>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default FlowCreateModal;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/EditModal.tsx",["338","339"],"import React, { useState, useRef, useEffect } from 'react';\nimport { FormHeader } from '../../common/typography';\nimport { InputField } from '../../common/form';\nimport { FormButton } from '../../common/buttons';\nimport { useForm } from \"react-hook-form\";\nimport { updateBot } from './../../../apis/bots';\nimport { toast } from 'react-toastify';\n\nconst BotEditModal = ({bot, hideModal, handleEditBot }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const { register, handleSubmit, errors, setError } = useForm();  \n\n  const onSubmit = data => {\n    setIsLoading(true);\n    updateBot({ name: data.name }, bot.id)\n      .then((response) => {\n        hideModal();\n        toast.success(response.message);\n        handleEditBot(response.data)\n      }).catch((err) => { \n        if (err.response.status === 422) {\n          if (err.response.data.errors.name) {\n            setError('name', {\n              type: 'server',\n              message: err.response.data.errors.name[0]\n            })\n          } \n        } else {\n          toast.error('Something went wrong')\n        }\n      }).finally(() => { \n        setIsLoading(false);\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"modal-body\">\n        <button className=\"modal-exit\" onClick={hideModal}></button>\n        <div className=\"modal-title\">\n          <FormHeader>Edit Bot</FormHeader>\n        </div>\n        <div className=\"modal-content\">\n          <form className=\"bot-create-form\" onSubmit={handleSubmit(onSubmit)}>\n            <InputField\n              isError={!!errors.name}\n              defaultValue={bot.name}\n              name=\"name\"\n              ref={register({required: true, minLength: 3})}\n            />\n            {errors.name && errors.name.type === 'required' && (<p className=\"form-error\">This field is required</p>)}\n            {errors.name && errors.name.type === 'minLength' && (<p className=\"form-error\">This field is required min length of 3</p>)}\n            {errors.name && errors.name.type === 'server' && (<p className=\"form-error\">{ errors.name.message}</p>)}\n\n            <FormButton type=\"submit\" disabled={isLoading}>\n              {isLoading ? 'Loading...' : 'Save'}\n            </FormButton>\n          </form>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default BotEditModal;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/utils/request.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/info/index.tsx",[],["340","341"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/feature/index.tsx",["342"],"import React from 'react';\nimport { FeatureWrapper, FeatureGrid } from './styles';\nimport {\n  PrimaryHeader,\n  SecondaryHeader,\n  Paragraph,\n} from '../../common/typography';\n\nimport feature1 from '../../../assets/images/features/1.png';\nimport feature2 from '../../../assets/images/features/2.png';\nimport feature3 from '../../../assets/images/features/3.png';\nimport feature4 from '../../../assets/images/features/4.png';\nimport feature5 from '../../../assets/images/features/5.png';\n\nconst Feature = () => {\n  return (\n    <FeatureWrapper>\n      <PrimaryHeader className=\"heading\">Key Features</PrimaryHeader>\n      <FeatureGrid>\n        <div className=\"feature\">\n          <img src={feature1} alt=\"feature1\" />\n          <SecondaryHeader>Easy to develop</SecondaryHeader>\n          <Paragraph>\n            Create components connected them and make the bot flow in ease\n          </Paragraph>\n        </div>\n        <div className=\"feature\">\n          <img src={feature5} alt=\"feature1\" />\n          <SecondaryHeader>Multipe Platform</SecondaryHeader>\n          <Paragraph>\n            Create one bot and publish it in different platforms such as\n            facebook, slack, telegram, etc.\n          </Paragraph>\n        </div>\n        <div className=\"feature\">\n          <img src={feature3} alt=\"feature1\" />\n          <SecondaryHeader>Template Variety</SecondaryHeader>\n          <Paragraph>\n            Free templates which can be used to setup your bot.\n          </Paragraph>\n        </div>\n        <div className=\"feature\">\n          <img src={feature4} alt=\"feature1\" />\n          <SecondaryHeader>Rich Content</SecondaryHeader>\n          <Paragraph>\n            Various message content such as text, gallery, buttons.\n          </Paragraph>\n        </div>\n        <div className=\"feature\">\n          <img src={feature5} alt=\"feature1\" />\n          <SecondaryHeader>Feature 5</SecondaryHeader>\n          <Paragraph>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, t ut labore\n            et dolore magna aliqua.\n          </Paragraph>\n        </div>\n        <div className=\"feature\">\n          <img src={feature5} alt=\"feature1\" />\n          <SecondaryHeader>Feature 6</SecondaryHeader>\n          <Paragraph>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n            eiusmod tempor incididunt\n          </Paragraph>\n        </div>\n      </FeatureGrid>\n    </FeatureWrapper>\n  );\n};\n\nexport default Feature;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/texts.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Card/index.tsx",["343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368","369","370","371","372","373","374","375"],"import React, { useState, useEffect, useRef, useContext } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { CardSlider, CardWrapper } from './styles';\nimport { BuilderContext } from '../../../../../services/Builder/BuilderProvider';\nimport { AddTextButton } from '../../../../common/buttons';\nimport { ImageWrapper } from '../Image/styles';\nimport { v4 as uuidv4 } from 'uuid';\nimport Textarea from 'react-expanding-textarea';\nimport {\n  BiImageAdd,\n  BiTrash,\n  BiChevronRight,\n  BiChevronLeft,\n  BiPlus,\n} from 'react-icons/bi';\n\nconst FormCard = ({ messageId, childId }) => {\n  const [builderState, setBuilderState] = useContext(BuilderContext);\n  const { register, handleSubmit } = useForm({ mode: 'onChange' });\n  const [isChangingHeading, setIsChangingHeading] = useState(false);\n  const [isChangingBody, setIsChangingBody] = useState(false);\n\n  const headingRef = useRef<HTMLInputElement>(null);\n  const paragraphRef = useRef<HTMLTextAreaElement>(null);\n  const cardRef = useRef<HTMLDivElement>(null);\n\n  //Find index of specific object using findIndex method.\n  const childIndex = builderState[messageId].children.findIndex(\n    (obj) => obj.id == childId\n  );\n\n  //Card Navigation functions\n  const handleNextButton = (id) => {\n    const cards = builderState[messageId].children[childIndex].cards;\n    const length = cards.length - 1;\n    const activeCardIndex = getActiveCardIndex(cards);\n\n    if (activeCardIndex == length) {\n      makeCardActive(activeCardIndex + 1, activeCardIndex, length + 2, true);\n    } else {\n      makeCardActive(activeCardIndex + 1, activeCardIndex);\n    }\n  };\n\n  const handlePreviousButton = () => {\n    const cards = builderState[messageId].children[childIndex].cards;\n    const activeCardIndex = getActiveCardIndex(cards);\n    if (activeCardIndex != 0) {\n      makeCardActive(activeCardIndex - 1, activeCardIndex);\n    }\n  };\n\n  const makeCardActive = (\n    cardIndex,\n    activeCardIndex,\n    length = 0,\n    addNew = false\n  ) => {\n    if (addNew) {\n      setBuilderState([\n        ...builderState,\n        (builderState[messageId].children[childIndex].cards[\n          activeCardIndex\n        ].active = false),\n        builderState[messageId].children[childIndex].cards.push({\n          id: uuidv4(),\n          active: true,\n          selectedImage: null,\n          imagePreviewUrl: '',\n          heading: 'Subtitle #' + length,\n          body: 'This is body paragraph',\n          height: 290,\n        }),\n      ]);\n    } else {\n      setBuilderState(builderState.map((message, index) => { \n        if (index == messageId) { \n          message.children.map((child, ind) => { \n            if (ind == childIndex) {\n              child.cards.map((card, inx) => { \n                if (inx == cardIndex) { \n                  card.active = true\n                }\n                if (inx == activeCardIndex) { \n                  card.active = false\n                }\n              })\n            }\n          })\n        }\n      }));\n    }\n  };\n\n  const getActiveCardIndex = (cards) => {\n    return cards.findIndex((obj) => obj.active == true);\n  };\n\n  const getCardIndex = (id) => {\n    return builderState[messageId].children[childIndex].cards.findIndex(\n      (obj) => obj.id === id\n    );\n  };\n\n  const isLastCard = () => {\n    const cards = builderState[messageId].children[childIndex].cards;\n    const length = cards.length - 1;\n    const activeCardIndex = getActiveCardIndex(cards);\n    return activeCardIndex == length;\n  };\n\n  //Form input submit methods\n  const onUploadImage = (data, id) => {\n    let cardIndex = getCardIndex(id);\n\n    let reader = new FileReader();\n\n    reader.onloadend = () => {\n      var height = cardRef.current.scrollHeight;\n\n      setBuilderState(\n        builderState.map((item, index) => {\n          if (index == messageId) {\n            item.children.map((child, ind) => {\n              if (ind == childIndex) {\n                child.cards.map((card, s) => {\n                  if (s == cardIndex) {\n                    card.selectedImage = data.image[0];\n                    card.imagePreviewUrl = reader.result;\n                    card.height = height;\n                  }\n                });\n              }\n            });\n          }\n          return item;\n        })\n      );\n    };\n\n    reader.readAsDataURL(data.image[0]);\n  };\n\n  const onHeadingChange = (data, id) => {\n    let cardIndex = getCardIndex(id);\n    var height = cardRef.current.scrollHeight;\n\n    setBuilderState(\n      builderState.map((item, index) => {\n        if (index == messageId) {\n          item.children.map((child, ind) => {\n            if (ind == childIndex) {\n              child.cards.map((card, s) => {\n                if (s == cardIndex) {\n                  card.heading = data.heading;\n                  card.height = height;\n                }\n              });\n            }\n          });\n        }\n        return item;\n      })\n    );\n  };\n\n  const onParagraphChange = (data, id) => {\n    let cardIndex = getCardIndex(id);\n    var height = cardRef.current.scrollHeight;\n\n    setBuilderState(\n      builderState.map((item, index) => {\n        if (index == messageId) {\n          item.children.map((child, ind) => {\n            if (ind == childIndex) {\n              child.cards.map((card, s) => {\n                if (s == cardIndex) {\n                  card.body = data.body;\n                  card.height = height;\n                }\n              });\n            }\n          });\n        }\n        return item;\n      })\n    );\n  };\n\n  const handleDelete = () => {\n    setBuilderState(\n      builderState.map((item, index) => {\n        if (index == messageId) {\n          item.height -= 250;\n          item.children.splice(childIndex, 1);\n        }\n        return item;\n      })\n    );\n  };\n\n  //UseEffects\n  useEffect(() => {\n    if (headingRef.current) {\n      register(headingRef.current);\n      headingRef.current.focus();\n    }\n  }, [isChangingHeading]);\n\n  useEffect(() => {\n    if (paragraphRef.current) {\n      register(paragraphRef.current);\n      paragraphRef.current.focus();\n    }\n  }, [isChangingBody]);\n\n  return (\n    <CardSlider>\n      <div className=\"navigation_btn previous\" onClick={handlePreviousButton}>\n        <BiChevronLeft />\n      </div>\n      <div className=\"navigation_btn next\" onClick={handleNextButton}>\n        {isLastCard() ? <BiPlus /> : <BiChevronRight />}\n      </div>\n      <button className=\"action-btn\" onClick={handleDelete}>\n        <BiTrash />\n      </button>\n      {builderState[messageId].children[childIndex].cards.map((card) => {\n        if (card.active) {\n          return (\n            <CardWrapper ref={cardRef}>\n              <div className=\"card-image\">\n                <ImageWrapper>\n                  {card.imagePreviewUrl ? (\n                    <div>\n                      <img src={card.imagePreviewUrl} alt=\"card-image\" />\n                    </div>\n                  ) : (\n                    <form\n                      onChange={handleSubmit((data) =>\n                        onUploadImage(data, card.id)\n                      )}>\n                      <input\n                        ref={register}\n                        type=\"file\"\n                        id={'card_image' + getCardIndex(card.id)}\n                        name=\"image\"\n                        accept=\"image/*\"\n                      />\n                      <label htmlFor={'card_image' + getCardIndex(card.id)}>\n                        <BiImageAdd />\n                        <p>Upload image</p>\n                      </label>\n                    </form>\n                  )}\n                </ImageWrapper>\n              </div>\n              <div className=\"card-text\">\n                <div\n                  className={\n                    isChangingHeading ? 'card-heading active' : 'card-heading'\n                  }>\n                  <form\n                    onBlur={handleSubmit((data) =>\n                      onHeadingChange(data, card.id)\n                    )}>\n                    <Textarea\n                      className=\"card-title\"\n                      ref={headingRef}\n                      maxLength={27}\n                      id=\"heading\"\n                      name=\"heading\"\n                      defaultValue={card.heading}\n                      onBlur={() => setIsChangingHeading(false)}\n                      onClick={() => {\n                        setIsChangingBody(false);\n                        setIsChangingHeading(true);\n                      }}\n                    />\n                  </form>\n                </div>\n                <div\n                  className={isChangingBody ? 'card-body active' : 'card-body'}>\n                  <form\n                    onBlur={handleSubmit((data) =>\n                      onParagraphChange(data, card.id)\n                    )}>\n                    <Textarea\n                      className=\"card-paragraph\"\n                      maxLength={200}\n                      placeholder=\"Enter your text here\"\n                      onBlur={() => setIsChangingBody(false)}\n                      defaultValue={card.body}\n                      id=\"body\"\n                      name=\"body\"\n                      ref={paragraphRef}\n                      onClick={() => {\n                        setIsChangingHeading(false);\n                        setIsChangingBody(true);\n                      }}\n                    />\n                  </form>\n                </div>\n              </div>\n            </CardWrapper>\n          );\n        }\n      })}\n    </CardSlider>\n  );\n};\n\nexport default FormCard;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Flows/builder.tsx",["376","377","378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394"],"import React, { useState } from 'react';\nimport {withRouter} from 'react-router-dom'\nimport { FlowBuilderWrapper } from './styles';\nimport { Stage, Layer, Rect, Image, Text, Group, Circle } from 'react-konva';\nimport Toolbar from '../../../components/dashboard/builder/Toolbar/index';\nimport { v4 as uuidv4 } from 'uuid';\nimport {\n  handleRenderingChildrens,\n  calculateHeightOfMessageBox,\n  handleWheel,\n  Edge,\n  URLImage,\n} from './helper';\nimport {\n  useBuilder,\n} from '../../../services/Builder/BuilderProvider';\nimport { BiMessageSquareAdd } from 'react-icons/bi';\nimport { saveMessage, getMessages, updateMessage, deleteMessage } from '../../../apis/messages';\nimport { toast } from 'react-toastify';\n\nconst FlowBuilder = (props) => {\n  const [isToolbarActive, setIsToolbarActive] = useState(null);\n  const [builderState, setBuilderState, sidebar] = useBuilder();\n  const [id, setId] = useState(null);\n  const [mousePosition, setMousePosition] = useState({\n    x: 0,\n    y: 0,\n  });\n  const [isEdging, setIsSetting] = useState(false);\n  const [isSecondClick, setIsSecondClick] = useState(false);\n\n  const [state, setState] = useState({\n    layerScale: 1,\n    layerX: 0,\n    layerY: 0,\n  });\n\n  const TrashIcon = \"data:image/svg+xml;base64,\" + window.btoa('<svg stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" viewBox=\"0 0 24 24\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"none\" d=\"M17.004 20L17.003 8h-1-8-1v12H17.004zM13.003 10h2v8h-2V10zM9.003 10h2v8h-2V10zM9.003 4H15.003V6H9.003z\"></path><path d=\"M5.003,20c0,1.103,0.897,2,2,2h10c1.103,0,2-0.897,2-2V8h2V6h-3h-1V4c0-1.103-0.897-2-2-2h-6c-1.103,0-2,0.897-2,2v2h-1h-3 v2h2V20z M9.003,4h6v2h-6V4z M8.003,8h8h1l0.001,12H7.003V8H8.003z\"></path><path d=\"M9.003 10H11.003V18H9.003zM13.003 10H15.003V18H13.003z\"></path></svg>');\n\n  const getNextNode = (id) => {\n    if (id) {\n      const nextIndex = builderState.findIndex((obj) => obj.id == id);\n      if (nextIndex == -1) {\n        return mousePosition;\n      }\n      return builderState[nextIndex].position;\n    }\n  };\n\n  const hideToolbar = () => {\n    setIsToolbarActive(false);\n    setId(0);\n  };\n\n  const showToolbar = (id) => {\n    setId(id);\n    setIsToolbarActive(true);\n  };\n\n  const calculateCardHeight = (state) => {\n    var height;\n    state.foreach((item) => {\n      if (item.type == 'card') {\n        height += item.cards[0].height;\n      } else {\n        height += item.height;\n      }\n    });\n    return height;\n  };\n\n  const getStageWidth = () => {\n    return sidebar ? window.innerWidth - 280 : window.innerWidth - 90;\n  };\n\n  const setSelectedTrue = (messageId) => {\n    var previousSelected = getSelectedNode(builderState);\n    if (previousSelected >= 0) {\n      setBuilderState(\n        builderState.map((item, index) => {\n          if (index == messageId) {\n            item.isSelected = true;\n          }\n          if (index == previousSelected) {\n            item.isSelected = false;\n          }\n          return item;\n        })\n      );\n    } else {\n      setBuilderState(\n        builderState.map((item, index) => {\n          if (index == messageId) {\n            item.isSelected = true;\n          }\n          return item;\n        })\n      );\n    }\n  };\n\n  const setHoverTrue = (messageId) => {\n    var previousHover = getHoveredNode(builderState);\n    if (previousHover >= 0) {\n      setBuilderState(\n        builderState.map((item, index) => {\n          if (index == messageId) {\n            item.isHover = true;\n          }\n          if (index == previousHover) {\n            item.isHover = false;\n          }\n          return item;\n        })\n      );\n    } else {\n      setBuilderState(\n        builderState.map((item, index) => {\n          if (index == messageId) {\n            item.isHover = true;\n          }\n          return item;\n        })\n      );\n    }\n  };\n\n  const setHoverFalse = (messageId) => {\n    setBuilderState(\n      builderState.map((item, index) => {\n        if (index == messageId) {\n          item.isHover = false;\n        }\n        return item;\n      })\n    );\n  };\n\n  const connectEdge = (messageId) => {\n    setIsSetting(true);\n    setBuilderState(\n      builderState.map((item, index) => {\n        if (index == messageId) {\n          item.next = 'dummy';\n        }\n        return item;\n      })\n    );\n  };\n\n  const handleMousePosition = (event) => {\n    if (isEdging) {\n      var point = event.target.getStage().getPointerPosition();\n      setMousePosition({\n        x: point.x,\n        y: point.y,\n      });\n    }\n  };\n\n  const handleClickOnCanvas = () => {\n    setIsSecondClick(true);\n    if (isSecondClick && isEdging) {\n      setIsSetting(false);\n      // window.removeEventListener('mousemove', handleMousePosition);\n      let number = builderState.length + 1;\n      var id = uuidv4();\n      const newState = {\n        id: id,\n        name: 'Send Message #' + number,\n        position: {\n          x: mousePosition.x,\n          y: mousePosition.y,\n        },\n        height: 200,\n        children: [],\n        isHover: false,\n        isSelected: false,\n      };\n      setIsSecondClick(false);\n\n      //find the message with next: dummy\n      var dummyNextMessage = builderState.findIndex(\n        (obj) => obj.next === 'dummy'\n      );\n\n      setBuilderState(\n        builderState.map((item, index) => {\n          if (index == dummyNextMessage) {\n            item.next = id;\n          }\n          return item;\n        })\n      );\n      setBuilderState([...builderState, newState]);\n    }\n  };\n\n  const handleAddMessage = () => {\n    let number = builderState.length + 1;\n    saveMessage({\n      name: 'Send Message #' + number,\n      position_x: 1200,\n      position_y: 60,\n      flow: props.match.params.id\n    }).then((response) => {\n       setBuilderState([...builderState, response.data]);\n\n    }).catch((err) => {\n      toast.error(err.response)\n    })\n  }\n\n  const handleDeleteMessage = (item, index) => {\n    builderState.splice(index, 1);\n    deleteMessage(item.id)\n      .catch((err) => {\n        toast.error(\"Something went wrong\");\n      })\n  }\n\n  const handleDragMessage = (e, item, index) =>  {\n    var updatedPosition = {\n      x: e.target.x(),\n      y: e.target.y(),\n    };\n\n    setBuilderState(\n      builderState.map((item, ind) => {\n        if (ind == index) {\n          item.position = updatedPosition;\n        }\n        return item;\n      })\n    );\n  }\n\n  const updateMessagePosition = (item) => {\n    updateMessage({\n      position_x: item.position.x,\n      position_y: item.position.y\n    }, item.id).catch((err) => {\n      toast.error('Something went wrong')\n    })    \n  }\n\n  React.useEffect(() => {\n    getMessages(props.match.params.id)\n      .then((response) => {\n        setBuilderState(response.data)\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n  }, []);\n\n\n  return (\n    <FlowBuilderWrapper>\n      <div className=\"header\">Flows of { props.match.params.id}</div>\n      <div className=\"stage-action\">\n        <BiMessageSquareAdd\n          onClick={handleAddMessage}\n        />\n      </div>\n\n      {isToolbarActive && <Toolbar id={id} hideToolbar={hideToolbar} />}\n      <Stage\n        width={getStageWidth()}\n        height={window.innerHeight - 70}\n        scaleX={state.layerScale}\n        scaleY={state.layerScale}\n        onMouseMove={handleMousePosition}\n        x={0}\n        y={0}\n        onClick={handleClickOnCanvas}>\n        <Layer name=\"layer_1\" draggable onWheel={handleWheel}>\n          <Rect\n            x={-window.innerWidth}\n            y={-window.innerHeight}\n            width={window.innerWidth * 3}\n            height={window.innerHeight * 3}\n            fill=\"\"\n          />\n          <Group draggable x={200} y={200}>\n            <Rect\n              cornerRadius={16}\n              width={300}\n              height={100}\n              fill=\"#FDFDFD\"\n              strokeWidth={2}\n              shadowColor=\"gray\"\n              shadowOpacity={0.7}\n              shadowBlur={2}\n            />\n            <Circle x={30} y={30} radius={15} fill=\"green\" />\n            <Text\n              x={55}\n              y={22}\n              text=\"Starting Step\"\n              fontFamily={'Roboto'}\n              fontSize={20}\n              fill={'gray'}\n            />\n            <Circle x={280} y={80} radius={9} fill=\"#8392AB\" strokeWidth={1} />\n            <Text\n              x={195}\n              y={72}\n              text=\"Next Step\"\n              fontFamily={'Roboto'}\n              fontSize={15}\n              fontWeight={300}\n              fill={'gray'}\n            />\n          </Group>\n          {builderState &&\n            typeof builderState == 'object' &&\n            builderState.map((item, index) => {\n              return (\n                <React.Fragment key={item.id}>\n                  {item.next ? (\n                    <Edge\n                      height={item.height}\n                      node1={item.position}\n                      node2={getNextNode(item.next)}\n                    />\n                  ) : null}\n                  <Group\n                    x={item.position?.x}\n                    y={item.position?.y}\n                    draggable\n                    onClick={(e) => {\n                      showToolbar(item.id);\n                      setSelectedTrue(index);\n                    }}\n                    onMouseEnter={(e) => {\n                      setHoverTrue(index);\n                    }}\n                    onMouseLeave={(e) => {\n                      setHoverFalse(index);\n                    }}\n                    hitOnDragEnabled={true}\n                    onDragMove={(e) => {\n                      handleDragMessage(e, item, index)\n                    }}\n                    onDragEnd={() => { updateMessagePosition(item) }}\n                    >\n                    <Rect\n                      cornerRadius={16}\n                      height={calculateHeightOfMessageBox(item.children)}\n                      width={340}\n                      fill=\"#FDFDFD\"\n                      strokeWidth={5}\n                      shadowColor={getShadowColor(item)}\n                      shadowOpacity={1}\n                      shadowBlur={10}\n                    />\n                    {item.isHover &&\n                      <>\n                      <Rect\n                        width={50} height={30} x={330} y={10} /> \n                      <URLImage\n                         onMouseOver={() => { document.body.style.cursor = 'pointer' }}\n                        onMouseOut={() => { document.body.style.cursor = 'default' }}\n                        onClick={() => {handleDeleteMessage(item, index)}}\n                        image={TrashIcon} x={345} y={10} height={25} width={25} />\n                      </>\n                    }\n                    <Circle x={30} y={30} radius={15} fill=\"#5850EB\" />\n                    <Text\n                      x={55}\n                      y={22}\n                      text={item.name}\n                      fontFamily={'Roboto'}\n                      fontSize={20}\n                      fill={'gray'}\n                    />\n                    <Group\n                      x={340}\n                      y={item.height - 20}\n                      onClick={(e) => connectEdge(index)}>\n                      <Circle radius={9} fill=\"#8392AB\" strokeWidth={1} />\n                      <Text\n                        x={-80}\n                        y={-8}\n                        text=\"Next Step\"\n                        fontFamily={'Roboto'}\n                        fontSize={15}\n                        fontWeight={300}\n                        fill={'gray'}\n                      />\n                    </Group>\n                    {typeof item.children == 'object' ? (\n                      <>\n                        {item.children.length > 0 ? (\n                          handleRenderingChildrens(item)\n                        ) : (\n                          <React.Fragment key={item}>\n                            <Group>\n                              <Rect\n                                x={20}\n                                y={75}\n                                height={60}\n                                width={300}\n                                fill=\"#EEF1F4\"\n                                cornerRadius={16}\n                              />\n                              <Text\n                                text=\"No Content\"\n                                x={110}\n                                y={95}\n                                fontFamily={'Roboto'}\n                                fontSize={20}\n                                fontWeight={300}\n                                fill={'blue'}\n                              />\n                            </Group>\n                          </React.Fragment>\n                        )}\n                      </>\n                    ) : null}\n                  </Group>\n                </React.Fragment>\n              );\n            })}\n        </Layer>\n      </Stage>\n    </FlowBuilderWrapper>\n  );\n};\n\nconst getShadowColor = (item) => {\n  if (item.isSelected) {\n    return '#1e824c';\n  } else if (item.isHover) {\n    return '#1f3a93';\n  } else {\n    return 'black';\n  }\n};\n\nconst getSelectedNode = (state) => {\n  return state.findIndex((obj) => obj.isSelected == true);\n};\n\nconst getHoveredNode = (state) => {\n  return state.findIndex((obj) => obj.isHovered == true);\n};\n\nexport default withRouter(FlowBuilder);\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/styles/theme.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/styles/mediaQueries.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Auth/JWTValidator.ts",["395"],"import jwt from 'jsonwebtoken';\n\nexport default (token: any) => {\n  if (token) {\n    const data: any = jwt.decode(token);\n\n    const expDate: Date = new Date(data.exp * 1000);\n    const currentDate: Date = new Date();\n    return expDate.valueOf() - currentDate.valueOf() > 0;\n  }\n  return false;\n};\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/auth/LoginPage.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Dashboard/index.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/auth.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/form.ts",["396"],"import styled from 'styled-components'\nimport { grey } from '../../styles/theme';\n\nexport const InputField = styled.input<{isError?: boolean}>`\n  background: ${props => props.isError ? '#FFE4E4' : '#F7F7F7'};\n  border-radius: 7px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.1);\n  box-sizing: border-box;\n  min-height: 3.8rem;\n  min-width: 30rem;\n  padding: .8rem;\n  outline: none;\n  font-family: Roboto, sans-serif;\n  font-style: normal;\n  font-weight: 400;\n  font-size: 1.4rem;\n  color: #000;\n  width: 100%;\n\n\n  &:focus {\n    font-weight: 400;\n    box-shadow: 0 0 0 3px rgba(164, 202, 254, 0.45);\n    border-color: #5850EC;\n  }\n\n  &::placeholder {\n    color: #d7d7d7;\n    font-size: 1.2rem;\n  }\n`;\n\nexport const FormLink = styled.a`\n  text-decoration: none;\n  font-size: 1.2rem;\n  font-family: Roboto, sans-serif;\n  color: #565252;\n\n  &:hover{\n    text-decoration-line: underline;\n    color: #000;\n  }\n`;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/bots.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Flows/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Flows/DeleteModal.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Flows/EditModal.tsx",["397","398"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/constants/urls.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/Pagination/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/footer/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Sidebar/index.tsx",["399","400","401","402"],"import React, { useEffect, useRef, Ref } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport logo from '../../../assets/images/logo-light.png';\nimport shortLogo from '../../../assets/images/logo-short.png';\nimport avatar from '../../../assets/images/avatar.jpg';\nimport { AiOutlineDashboard, AiOutlineRobot } from 'react-icons/ai';\nimport { TiFlowMerge } from 'react-icons/ti';\nimport { HiTemplate } from 'react-icons/hi';\nimport { IoSettingsSharp, IoLogOut } from 'react-icons/io5';\nimport { getAuthUser, logOut } from '../../../apis/auth';\nimport { useAuthDispatch } from '../../../services/Auth/AuthProvider';\nimport {\n  SidebarWrapper,\n  SidebarMenu,\n  LogoWrapper,\n  UserInfoWrapper,\n  MenuItem,\n  ToggleBar,\n} from './styles';\nimport { BiChevronsLeft, BiChevronsRight } from 'react-icons/bi';\n\ninterface SidebarProps {\n  handleSidebarState: (isOpen: boolean) => void;\n}\n\nconst Sidebar: React.FC<SidebarProps> = ({ handleSidebarState }) => {\n  const [isOpen, setIsOpen] = React.useState(true);\n  const nameRef = useRef<HTMLHeadingElement>(null);\n  const history = useHistory();\n  const authDispatch = useAuthDispatch();\n\n  useEffect(() => {\n    getAuthUser().then((response) => {\n      var x = document.getElementById('username');\n      if (x) {\n        x.innerHTML = response.data.name;\n      }\n    });\n\n    handleSidebarState(isOpen);\n  }, [isOpen]);\n\n  const handleLogOut = (event: any) => {\n    event.preventDefault();\n    logOut().then((response) => {\n      authDispatch({\n        type: 'LOGOUT',\n      });\n      history.push('/');\n    });\n  };\n\n  return (\n    <SidebarWrapper>\n      <SidebarMenu isOpen={isOpen}>\n        <LogoWrapper>\n          <img src={isOpen ? logo : shortLogo} alt=\"Logo\" />\n        </LogoWrapper>\n        <UserInfoWrapper isOpen={isOpen}>\n          <img src={avatar} alt=\"Avatar\" />\n          <div className=\"user-info\">\n            <h2 ref={nameRef} id=\"username\"></h2>\n            <p>Profile Setting</p>\n          </div>\n        </UserInfoWrapper>\n        <div className=\"menu_list\">\n          <div className=\"menu_list-top\">\n            <Link to=\"/app\">\n              <MenuItem isActive isOpen={isOpen}>\n                <AiOutlineDashboard className=\"menu-icon\" />\n                <p>Dashboard</p>\n              </MenuItem>\n            </Link>\n            <Link to=\"/bots\">\n              <MenuItem isOpen={isOpen}>\n                <AiOutlineRobot className=\"menu-icon\" />\n                <p>Bots</p>\n              </MenuItem>\n            </Link>\n            <Link to=\"/templates\">\n              <MenuItem isOpen={isOpen}>\n                <HiTemplate className=\"menu-icon\" />\n                <p>Templates</p>\n              </MenuItem>\n            </Link>\n          </div>\n          <div className=\"menu_list-bottom\">\n            <Link to=\"/settings\">\n              <MenuItem isOpen={isOpen}>\n                <IoSettingsSharp className=\"menu-icon\" />\n                <p>Settings</p>\n              </MenuItem>\n            </Link>\n            <MenuItem isOpen={isOpen} onClick={handleLogOut}>\n              <IoLogOut className=\"menu-icon\" />\n              <p>Logout</p>\n            </MenuItem>\n          </div>\n        </div>\n      </SidebarMenu>\n      <ToggleBar onClick={() => setIsOpen(!isOpen)}>\n        {isOpen && <BiChevronsLeft />}\n        {!isOpen && <BiChevronsRight />}\n      </ToggleBar>\n    </SidebarWrapper>\n  );\n};\n\nexport default Sidebar;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Image/index.tsx",["403","404","405","406","407","408","409"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Flows/index.tsx",["410","411","412","413","414"],"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { GridWrapper } from '../../../components/common/grid';\nimport { PrimaryButton } from './../../../components/common/buttons';\nimport { HiDotsVertical } from 'react-icons/hi';\nimport { DropdownWrapper } from '../../../components/common/Dropdown/styles';\nimport { useModal } from '../../../services/Modal/ModalProvider';\nimport { getFlows } from '../../../apis/flows';\nimport {withRouter} from 'react-router-dom'\nimport FlowCreateModal from '../../../components/dashboard/Flows/CreateModal';\nimport FlowEditModal from '../../../components/dashboard/Flows/EditModal';\nimport FlowDeleteModal from '../../../components/dashboard/Flows/DeleteModal';\nimport Pagination from '../../../components/common/Pagination/index';\n\n\n\ntype FlowType = {\n  id: string;\n  name: string;\n  last_modified: string;\n};\n\nconst Flows = (props) => {\n  const { showModal, hideModal } = useModal();\n  const [flows, setFlows] = useState<Array<FlowType>>();\n  const [pageNumber, setPageNumber] = useState(1);\n  const [isLoading, setIsLoading] = useState(true);\n  const [lastPage, setLastPage] = useState(1);\n\n  const botId = props.match.params.id;\n\n  const getFlowsData = (bot:string, pageNumber: number) => {\n    getFlows(bot, pageNumber)\n      .then((response) => {\n        setFlows(response.data);\n        setPageNumber(response.meta.current_page);\n        setLastPage(response.meta.last_page);\n      })\n      .catch((err) => {\n        console.log(\"Something went wrong\");\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  useEffect(() => {\n    getFlowsData(botId, pageNumber);\n  }, [pageNumber, lastPage]);\n\n\n  const handleCreateOpen = (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => {\n    showModal(() => (\n      <FlowCreateModal bot={botId} hideModal={hideModal} handleCreateFlow={ handleCreateFlow } />\n    ));\n  };\n\n  const handleEditOpen = (data: FlowType) => {\n    showModal(() => (\n      <FlowEditModal hideModal={hideModal} flow={data} handleEditFlow={ handleEditFlow } />\n    ));\n  };\n\n  const handleDeleteConfirmation = (data: FlowType) => {\n    showModal(() => (\n      <FlowDeleteModal hideModal={hideModal} flow={data} handleDeleteFlow={ handleDeleteFlow }/>\n    ));\n  };\n\n  const handlePageChange = (pageNumber: number) => {\n    setPageNumber(pageNumber);\n  };\n\n  const handleCreateFlow = (newFlow: FlowType) => { \n    const newFlowList = flows.concat(newFlow);\n    setFlows(newFlowList)\n  }\n\n  const handleEditFlow = (data) => {\n    const flowId = flows.findIndex(\n      (obj) => obj.id == data.id\n    );\n    setFlows(flows.map((item, index) => {\n      if (index == flowId) {\n        item.name = data.name\n      }\n      return item;\n    }));\n  }\n\n  const handleDeleteFlow = (id) => {\n    const flowId = flows.findIndex(\n      (obj) => obj.id == id\n    );\n    flows.splice(flowId, 1);\n  }\n  \n  return (\n    <React.Fragment>\n    <div className=\"page-header\">\n      <h1 className=\"main-heading\">Flows</h1>\n        <PrimaryButton onClick={handleCreateOpen}>Add Flow</PrimaryButton>\n    </div>\n      <GridWrapper>\n        <div className=\"grid-row\">\n          {flows && flows.map((data: FlowType) => {\n            return (\n              <React.Fragment key={data.id}>\n                <Link to={'flow/' + data.id}>\n                  <div className=\"grid-item\">\n                    <div className=\"grid-item-wrapper\">\n                      <div className=\"grid-item-container\">\n                        <div className=\"image\">\n                          Image\n                        </div>\n                        <div className=\"tag\">\n                          <p>{data.name}</p>\n                          <DropdownWrapper>\n                            <label className=\"dropbtn\">\n                              <HiDotsVertical />\n                            </label>\n                            <div className=\"dropdown-content\">\n                              <p\n                                onClick={() => {\n                                  handleEditOpen(data);\n                                }}>\n                                Edit\n                              </p>\n                              <p\n                                onClick={() => {\n                                  handleDeleteConfirmation(data);\n                                }}>\n                                Delete\n                              </p>\n                            </div>\n                          </DropdownWrapper>\n                        </div>           \n                    </div>\n                  </div>\n                </div>\n                </Link>\n              </React.Fragment>\n            );\n          })}\n      </div>\n    </GridWrapper>\n\n    <Pagination\n      activePage={pageNumber}\n      total={lastPage}\n      onChange={handlePageChange}\n    />\n  </React.Fragment>\n\n   );\n};\n\nexport default withRouter(Flows);\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/index.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/routes/ProtectedRoute.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/table.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/messages.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/CreateModal.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/header/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/utils/pagination.ts",["415"],"export default  (c: number, m: number) => {\n  let current = c,\n    last = m,\n    delta = 2,\n    left = current - delta,\n    right = current + delta + 1,\n    range = [],\n    rangeWithDots = [],\n    l\n\n  for (let i = 1; i <= last; i++) {\n    if (i === 1 || i === last || (i >= left && i < right)) {\n      range.push(i)\n    }\n  }\n\n  for (let i of range) {\n    if (l) {\n      if (i - l === 2) {\n        rangeWithDots.push(l + 1)\n      } else if (i - l !== 1) {\n        rangeWithDots.push(\"...\")\n      }\n    }\n    rangeWithDots.push(i)\n    l = i\n  }\n\n  return rangeWithDots\n}","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/info/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Image/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Sidebar/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/utils/storage.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/grid.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/layout/AuthLayout.tsx",["416"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport logo from '../../assets/images/logo-dark.png';\nimport { AuthButton } from '../common/buttons';\n\ninterface LayoutProps {\n  children?: any;\n  type?: string;\n}\n\nconst AuthLayout: React.FC<LayoutProps> = (props) => {\n  return (\n    <LayoutWrapper>\n      <nav className=\"logo-bar\">\n        <Link to=\"/\">\n          <img className=\"logo-img\" src={logo} alt=\"Shipboard Logo\" />\n        </Link>\n      </nav>\n      <AuthContainer>\n        <div className=\"card\">{props.children}</div>\n        {/* {props.type === 'login' && (\n          <div className=\"auth-buttons\">\n            <AuthButton>Sign in with Google</AuthButton>\n            <AuthButton>Sign in with Facebook</AuthButton>\n          </div>\n        )} */}\n      </AuthContainer>\n      <FooterWrapper>\n        <p>©Shipbot Pvt. Ltd. 2020. All rights reserved</p>\n      </FooterWrapper>\n    </LayoutWrapper>\n  );\n};\n\nexport default AuthLayout;\n\nconst LayoutWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n  min-width: 50rem;\n  position: relative;\n\n  .logo-bar {\n    align-content: center;\n    display: flex;\n    margin: auto;\n    max-width: 144rem;\n    min-height: 10rem;\n    width: 100%;\n\n    img {\n      height: 4.5rem;\n      margin-top: 2rem;\n    }\n  }\n`;\n\nconst AuthContainer = styled.div`\n  align-content: center;\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  justify-content: center;\n  margin: auto;\n  position: relative;\n\n  .card {\n    align-items: center;\n    background: #ffffff;\n    border-radius: 24px;\n    box-shadow: 0px 4px 24px rgba(0, 0, 0, 0.12);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    margin-top: -10rem;\n    max-width: 40rem;\n    min-height: 30rem;\n    padding: 4rem;\n\n    h1 {\n      padding-bottom: 1rem;\n    }\n\n    h2 {\n      margin-top: -1rem;\n      padding-bottom: 1rem;\n    }\n\n    input {\n      margin-bottom: 1rem;\n      margin-top: 1rem;\n    }\n\n    .last-input {\n      margin-bottom: 3rem;\n    }\n\n    .link {\n      display: flex;\n      justify-content: space-around;\n      margin-top: 1rem;\n      width: 100%;\n    }\n\n    .go-back {\n      align-items: center;\n      align-self: flex-start;\n      color: #000;\n      cursor: pointer;\n      display: flex;\n      margin-top: 1rem;\n      text-decoration: none;\n\n      &:hover{\n        color: #000;\n        text-decoration-line: underline;\n      }\n\n      h5 {\n        font-family: Roboto, sans-serif;\n        font-size: 1.2rem;\n        font-weight: 300;\n      }\n\n      svg {\n        width: 1.5rem;\n        height: 1.5rem;\n      }\n\n      &:hover {\n        h5 {\n          text-decoration: underline;\n        }\n      }\n    }\n  }\n\n  .auth-buttons {\n    margin-left: -5rem;\n    margin-right: -5rem;\n    display: flex;\n    justify-content: space-between;\n    margin-top: 6rem;\n  }\n`;\n\nconst FooterWrapper = styled.footer`\n  bottom: 0rem;\n  font-size: 1.2rem;\n  padding-right: 10rem;\n  position: absolute;\n  text-align: right;\n  width: 100%;\n`;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Builder/BuilderProvider.tsx",["417","418"],"import React, { useState, createContext, useContext } from 'react';\nimport { FlowStateType } from '../../../types';\nimport { v4 as uuidv4 } from 'uuid';\n\n// const initialBuilderState = [\n//   {\n//     id: '12kl23-23k23l0-23l2',\n//     name: 'Send Message #1',\n//     height: 200,\n//     position: {\n//       x: 700,\n//       y: 50,\n//     },\n//     children: [],\n//     next: '2323-23jljkj23-23jo2i3',\n//     isHover: false,\n//     isSelected: false,\n//   },\n//   {\n//     id: '2323-23jljkj23-23jo2i3',\n//     name: 'Send Message #2',\n//     height: 200,\n//     position: {\n//       x: 1000,\n//       y: 100,\n//     },\n//     children: [],\n//     isHover: false,\n//     isSelected: false,\n//   },\n// ];\n\nexport const BuilderContext = createContext(undefined);\n\nexport const BuilderProvider = ({ sidebar, children }) => {\n  const [builderState, setBuilderState] = useState([]);\n  return (\n    <BuilderContext.Provider value={[builderState, setBuilderState, sidebar]} >\n      {children}\n    </BuilderContext.Provider>\n  );\n};\n\nexport const useBuilder = () => {\n  const context = useContext(BuilderContext);\n  if (context === undefined) {\n    throw new Error('useBuilderState must be used within a BuilderProvider');\n  }\n  return context;\n};\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/footer/index.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/navbar/index.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Text/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/images.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Auth/AuthProvider.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/flows.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/feature/styles.ts",["419"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/DeleteModal.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Toolbar/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Modal/ModalProvider.tsx",["420"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Flows/helper.tsx",["421"],{"ruleId":"422","severity":1,"message":"423","line":1,"column":39,"nodeType":"424","messageId":"425","endLine":1,"endColumn":45},{"ruleId":"422","severity":1,"message":"426","line":1,"column":47,"nodeType":"424","messageId":"425","endLine":1,"endColumn":56},{"ruleId":"427","severity":1,"message":"428","line":25,"column":59,"nodeType":"429","messageId":"430","endLine":25,"endColumn":61},{"ruleId":"427","severity":1,"message":"428","line":33,"column":19,"nodeType":"429","messageId":"430","endLine":33,"endColumn":21},{"ruleId":"427","severity":1,"message":"428","line":108,"column":19,"nodeType":"429","messageId":"430","endLine":108,"endColumn":21},{"ruleId":"427","severity":1,"message":"428","line":126,"column":17,"nodeType":"429","messageId":"430","endLine":126,"endColumn":19},{"ruleId":"427","severity":1,"message":"428","line":160,"column":19,"nodeType":"429","messageId":"430","endLine":160,"endColumn":21},{"ruleId":"431","replacedBy":"432"},{"ruleId":"433","replacedBy":"434"},{"ruleId":"422","severity":1,"message":"435","line":5,"column":10,"nodeType":"424","messageId":"425","endLine":5,"endColumn":23},{"ruleId":"427","severity":1,"message":"428","line":20,"column":21,"nodeType":"429","messageId":"430","endLine":20,"endColumn":23},{"ruleId":"427","severity":1,"message":"428","line":30,"column":21,"nodeType":"429","messageId":"430","endLine":30,"endColumn":23},{"ruleId":"436","severity":1,"message":"437","line":31,"column":44,"nodeType":"438","messageId":"439","endLine":31,"endColumn":46},{"ruleId":"427","severity":1,"message":"428","line":32,"column":23,"nodeType":"429","messageId":"430","endLine":32,"endColumn":25},{"ruleId":"427","severity":1,"message":"428","line":52,"column":23,"nodeType":"429","messageId":"430","endLine":52,"endColumn":25},{"ruleId":"440","severity":1,"message":"441","line":70,"column":6,"nodeType":"442","endLine":70,"endColumn":22,"suggestions":"443"},{"ruleId":"431","replacedBy":"444"},{"ruleId":"433","replacedBy":"445"},{"ruleId":"422","severity":1,"message":"446","line":20,"column":8,"nodeType":"424","messageId":"425","endLine":20,"endColumn":17},{"ruleId":"422","severity":1,"message":"447","line":23,"column":9,"nodeType":"424","messageId":"425","endLine":23,"endColumn":20},{"ruleId":"431","replacedBy":"448"},{"ruleId":"433","replacedBy":"449"},{"ruleId":"431","replacedBy":"450"},{"ruleId":"433","replacedBy":"451"},{"ruleId":"431","replacedBy":"452"},{"ruleId":"433","replacedBy":"453"},{"ruleId":"422","severity":1,"message":"454","line":5,"column":22,"nodeType":"424","messageId":"425","endLine":5,"endColumn":30},{"ruleId":"422","severity":1,"message":"446","line":2,"column":8,"nodeType":"424","messageId":"425","endLine":2,"endColumn":17},{"ruleId":"422","severity":1,"message":"446","line":2,"column":8,"nodeType":"424","messageId":"425","endLine":2,"endColumn":17},{"ruleId":"422","severity":1,"message":"455","line":2,"column":27,"nodeType":"424","messageId":"425","endLine":2,"endColumn":33},{"ruleId":"422","severity":1,"message":"456","line":2,"column":41,"nodeType":"424","messageId":"425","endLine":2,"endColumn":46},{"ruleId":"422","severity":1,"message":"457","line":2,"column":48,"nodeType":"424","messageId":"425","endLine":2,"endColumn":54},{"ruleId":"422","severity":1,"message":"458","line":25,"column":10,"nodeType":"424","messageId":"425","endLine":25,"endColumn":19},{"ruleId":"427","severity":1,"message":"428","line":80,"column":23,"nodeType":"429","messageId":"430","endLine":80,"endColumn":25},{"ruleId":"427","severity":1,"message":"428","line":83,"column":17,"nodeType":"429","messageId":"430","endLine":83,"endColumn":19},{"ruleId":"427","severity":1,"message":"428","line":92,"column":23,"nodeType":"429","messageId":"430","endLine":92,"endColumn":25},{"ruleId":"422","severity":1,"message":"459","line":2,"column":10,"nodeType":"424","messageId":"425","endLine":2,"endColumn":20},{"ruleId":"422","severity":1,"message":"460","line":3,"column":10,"nodeType":"424","messageId":"425","endLine":3,"endColumn":15},{"ruleId":"422","severity":1,"message":"461","line":2,"column":8,"nodeType":"424","messageId":"425","endLine":2,"endColumn":15},{"ruleId":"422","severity":1,"message":"462","line":1,"column":17,"nodeType":"424","messageId":"425","endLine":1,"endColumn":25},{"ruleId":"422","severity":1,"message":"426","line":1,"column":27,"nodeType":"424","messageId":"425","endLine":1,"endColumn":36},{"ruleId":"427","severity":1,"message":"463","line":20,"column":34,"nodeType":"429","messageId":"430","endLine":20,"endColumn":36},{"ruleId":"427","severity":1,"message":"463","line":47,"column":34,"nodeType":"429","messageId":"430","endLine":47,"endColumn":36},{"ruleId":"422","severity":1,"message":"423","line":1,"column":27,"nodeType":"424","messageId":"425","endLine":1,"endColumn":33},{"ruleId":"422","severity":1,"message":"426","line":1,"column":35,"nodeType":"424","messageId":"425","endLine":1,"endColumn":44},{"ruleId":"422","severity":1,"message":"423","line":1,"column":27,"nodeType":"424","messageId":"425","endLine":1,"endColumn":33},{"ruleId":"422","severity":1,"message":"426","line":1,"column":35,"nodeType":"424","messageId":"425","endLine":1,"endColumn":44},{"ruleId":"431","replacedBy":"464"},{"ruleId":"433","replacedBy":"465"},{"ruleId":"422","severity":1,"message":"466","line":10,"column":8,"nodeType":"424","messageId":"425","endLine":10,"endColumn":16},{"ruleId":"422","severity":1,"message":"435","line":5,"column":10,"nodeType":"424","messageId":"425","endLine":5,"endColumn":23},{"ruleId":"427","severity":1,"message":"428","line":29,"column":21,"nodeType":"429","messageId":"430","endLine":29,"endColumn":23},{"ruleId":"427","severity":1,"message":"428","line":38,"column":25,"nodeType":"429","messageId":"430","endLine":38,"endColumn":27},{"ruleId":"427","severity":1,"message":"463","line":48,"column":25,"nodeType":"429","messageId":"430","endLine":48,"endColumn":27},{"ruleId":"436","severity":1,"message":"437","line":76,"column":57,"nodeType":"438","messageId":"439","endLine":76,"endColumn":59},{"ruleId":"427","severity":1,"message":"428","line":77,"column":19,"nodeType":"429","messageId":"430","endLine":77,"endColumn":21},{"ruleId":"436","severity":1,"message":"437","line":78,"column":45,"nodeType":"438","messageId":"439","endLine":78,"endColumn":47},{"ruleId":"427","severity":1,"message":"428","line":79,"column":21,"nodeType":"429","messageId":"430","endLine":79,"endColumn":23},{"ruleId":"436","severity":1,"message":"437","line":80,"column":43,"nodeType":"438","messageId":"439","endLine":80,"endColumn":45},{"ruleId":"427","severity":1,"message":"428","line":81,"column":25,"nodeType":"429","messageId":"430","endLine":81,"endColumn":27},{"ruleId":"427","severity":1,"message":"428","line":84,"column":25,"nodeType":"429","messageId":"430","endLine":84,"endColumn":27},{"ruleId":"427","severity":1,"message":"428","line":96,"column":48,"nodeType":"429","messageId":"430","endLine":96,"endColumn":50},{"ruleId":"427","severity":1,"message":"428","line":109,"column":28,"nodeType":"429","messageId":"430","endLine":109,"endColumn":30},{"ruleId":"427","severity":1,"message":"428","line":123,"column":21,"nodeType":"429","messageId":"430","endLine":123,"endColumn":23},{"ruleId":"436","severity":1,"message":"437","line":124,"column":44,"nodeType":"438","messageId":"439","endLine":124,"endColumn":46},{"ruleId":"427","severity":1,"message":"428","line":125,"column":23,"nodeType":"429","messageId":"430","endLine":125,"endColumn":25},{"ruleId":"436","severity":1,"message":"437","line":126,"column":43,"nodeType":"438","messageId":"439","endLine":126,"endColumn":45},{"ruleId":"427","severity":1,"message":"428","line":127,"column":25,"nodeType":"429","messageId":"430","endLine":127,"endColumn":27},{"ruleId":"427","severity":1,"message":"428","line":150,"column":19,"nodeType":"429","messageId":"430","endLine":150,"endColumn":21},{"ruleId":"436","severity":1,"message":"437","line":151,"column":42,"nodeType":"438","messageId":"439","endLine":151,"endColumn":44},{"ruleId":"427","severity":1,"message":"428","line":152,"column":21,"nodeType":"429","messageId":"430","endLine":152,"endColumn":23},{"ruleId":"436","severity":1,"message":"437","line":153,"column":41,"nodeType":"438","messageId":"439","endLine":153,"endColumn":43},{"ruleId":"427","severity":1,"message":"428","line":154,"column":23,"nodeType":"429","messageId":"430","endLine":154,"endColumn":25},{"ruleId":"427","severity":1,"message":"428","line":173,"column":19,"nodeType":"429","messageId":"430","endLine":173,"endColumn":21},{"ruleId":"436","severity":1,"message":"437","line":174,"column":42,"nodeType":"438","messageId":"439","endLine":174,"endColumn":44},{"ruleId":"427","severity":1,"message":"428","line":175,"column":21,"nodeType":"429","messageId":"430","endLine":175,"endColumn":23},{"ruleId":"436","severity":1,"message":"437","line":176,"column":41,"nodeType":"438","messageId":"439","endLine":176,"endColumn":43},{"ruleId":"427","severity":1,"message":"428","line":177,"column":23,"nodeType":"429","messageId":"430","endLine":177,"endColumn":25},{"ruleId":"427","severity":1,"message":"428","line":193,"column":19,"nodeType":"429","messageId":"430","endLine":193,"endColumn":21},{"ruleId":"440","severity":1,"message":"441","line":208,"column":6,"nodeType":"442","endLine":208,"endColumn":25,"suggestions":"467"},{"ruleId":"440","severity":1,"message":"441","line":215,"column":6,"nodeType":"442","endLine":215,"endColumn":22,"suggestions":"468"},{"ruleId":"436","severity":1,"message":"469","line":228,"column":70,"nodeType":"438","messageId":"470","endLine":228,"endColumn":72},{"ruleId":"471","severity":1,"message":"472","line":236,"column":23,"nodeType":"473","endLine":236,"endColumn":74},{"ruleId":"422","severity":1,"message":"474","line":4,"column":30,"nodeType":"424","messageId":"425","endLine":4,"endColumn":35},{"ruleId":"422","severity":1,"message":"475","line":32,"column":17,"nodeType":"424","messageId":"425","endLine":32,"endColumn":25},{"ruleId":"427","severity":1,"message":"428","line":42,"column":64,"nodeType":"429","messageId":"430","endLine":42,"endColumn":66},{"ruleId":"427","severity":1,"message":"428","line":43,"column":21,"nodeType":"429","messageId":"430","endLine":43,"endColumn":23},{"ruleId":"422","severity":1,"message":"476","line":60,"column":9,"nodeType":"424","messageId":"425","endLine":60,"endColumn":28},{"ruleId":"427","severity":1,"message":"428","line":63,"column":21,"nodeType":"429","messageId":"430","endLine":63,"endColumn":23},{"ruleId":"427","severity":1,"message":"428","line":81,"column":21,"nodeType":"429","messageId":"430","endLine":81,"endColumn":23},{"ruleId":"427","severity":1,"message":"428","line":84,"column":21,"nodeType":"429","messageId":"430","endLine":84,"endColumn":23},{"ruleId":"427","severity":1,"message":"428","line":93,"column":21,"nodeType":"429","messageId":"430","endLine":93,"endColumn":23},{"ruleId":"427","severity":1,"message":"428","line":107,"column":21,"nodeType":"429","messageId":"430","endLine":107,"endColumn":23},{"ruleId":"427","severity":1,"message":"428","line":110,"column":21,"nodeType":"429","messageId":"430","endLine":110,"endColumn":23},{"ruleId":"427","severity":1,"message":"428","line":119,"column":21,"nodeType":"429","messageId":"430","endLine":119,"endColumn":23},{"ruleId":"427","severity":1,"message":"428","line":131,"column":19,"nodeType":"429","messageId":"430","endLine":131,"endColumn":21},{"ruleId":"427","severity":1,"message":"428","line":143,"column":19,"nodeType":"429","messageId":"430","endLine":143,"endColumn":21},{"ruleId":"427","severity":1,"message":"428","line":189,"column":21,"nodeType":"429","messageId":"430","endLine":189,"endColumn":23},{"ruleId":"427","severity":1,"message":"428","line":230,"column":17,"nodeType":"429","messageId":"430","endLine":230,"endColumn":19},{"ruleId":"440","severity":1,"message":"477","line":255,"column":6,"nodeType":"442","endLine":255,"endColumn":8,"suggestions":"478"},{"ruleId":"427","severity":1,"message":"428","line":443,"column":50,"nodeType":"429","messageId":"430","endLine":443,"endColumn":52},{"ruleId":"427","severity":1,"message":"428","line":447,"column":49,"nodeType":"429","messageId":"430","endLine":447,"endColumn":51},{"ruleId":"479","severity":1,"message":"480","line":3,"column":1,"nodeType":"481","endLine":12,"endColumn":3},{"ruleId":"422","severity":1,"message":"482","line":2,"column":10,"nodeType":"424","messageId":"425","endLine":2,"endColumn":14},{"ruleId":"422","severity":1,"message":"423","line":1,"column":27,"nodeType":"424","messageId":"425","endLine":1,"endColumn":33},{"ruleId":"422","severity":1,"message":"426","line":1,"column":35,"nodeType":"424","messageId":"425","endLine":1,"endColumn":44},{"ruleId":"422","severity":1,"message":"483","line":1,"column":36,"nodeType":"424","messageId":"425","endLine":1,"endColumn":39},{"ruleId":"422","severity":1,"message":"484","line":7,"column":10,"nodeType":"424","messageId":"425","endLine":7,"endColumn":21},{"ruleId":"440","severity":1,"message":"485","line":41,"column":6,"nodeType":"442","endLine":41,"endColumn":14,"suggestions":"486"},{"ruleId":"487","severity":1,"message":"488","line":62,"column":13,"nodeType":"473","endLine":62,"endColumn":45},{"ruleId":"422","severity":1,"message":"435","line":5,"column":10,"nodeType":"424","messageId":"425","endLine":5,"endColumn":23},{"ruleId":"427","severity":1,"message":"428","line":18,"column":21,"nodeType":"429","messageId":"430","endLine":18,"endColumn":23},{"ruleId":"427","severity":1,"message":"428","line":35,"column":23,"nodeType":"429","messageId":"430","endLine":35,"endColumn":25},{"ruleId":"436","severity":1,"message":"437","line":36,"column":46,"nodeType":"438","messageId":"439","endLine":36,"endColumn":48},{"ruleId":"427","severity":1,"message":"428","line":37,"column":25,"nodeType":"429","messageId":"430","endLine":37,"endColumn":27},{"ruleId":"427","severity":1,"message":"428","line":59,"column":21,"nodeType":"429","messageId":"430","endLine":59,"endColumn":23},{"ruleId":"471","severity":1,"message":"472","line":82,"column":11,"nodeType":"473","endLine":82,"endColumn":58},{"ruleId":"422","severity":1,"message":"458","line":27,"column":10,"nodeType":"424","messageId":"425","endLine":27,"endColumn":19},{"ruleId":"440","severity":1,"message":"489","line":49,"column":6,"nodeType":"442","endLine":49,"endColumn":28,"suggestions":"490"},{"ruleId":"427","severity":1,"message":"428","line":83,"column":23,"nodeType":"429","messageId":"430","endLine":83,"endColumn":25},{"ruleId":"427","severity":1,"message":"428","line":86,"column":17,"nodeType":"429","messageId":"430","endLine":86,"endColumn":19},{"ruleId":"427","severity":1,"message":"428","line":95,"column":23,"nodeType":"429","messageId":"430","endLine":95,"endColumn":25},{"ruleId":"479","severity":1,"message":"480","line":1,"column":1,"nodeType":"481","endLine":30,"endColumn":2},{"ruleId":"422","severity":1,"message":"491","line":5,"column":10,"nodeType":"424","messageId":"425","endLine":5,"endColumn":20},{"ruleId":"422","severity":1,"message":"492","line":2,"column":10,"nodeType":"424","messageId":"425","endLine":2,"endColumn":23},{"ruleId":"422","severity":1,"message":"493","line":3,"column":16,"nodeType":"424","messageId":"425","endLine":3,"endColumn":22},{"ruleId":"422","severity":1,"message":"459","line":2,"column":10,"nodeType":"424","messageId":"425","endLine":2,"endColumn":20},{"ruleId":"422","severity":1,"message":"494","line":28,"column":25,"nodeType":"424","messageId":"425","endLine":28,"endColumn":39},{"ruleId":"427","severity":1,"message":"428","line":231,"column":56,"nodeType":"429","messageId":"430","endLine":231,"endColumn":58},"@typescript-eslint/no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["495"],"no-negated-in-lhs",["496"],"'AddTextButton' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'register'. Either include it or remove the dependency array.","ArrayExpression",["497"],["495"],["496"],"'AppLayout' is defined but never used.","'authContext' is assigned a value but never used.",["495"],["496"],["495"],["496"],["495"],["496"],"'FormLink' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'isLoading' is assigned a value but never used.","'darkerGrey' is defined but never used.","'media' is defined but never used.","'Toolbar' is defined but never used.","'useState' is defined but never used.","Expected '!==' and instead saw '!='.",["495"],["496"],"'feature2' is defined but never used.",["498"],["499"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Image' is defined but never used.","'setState' is assigned a value but never used.","'calculateCardHeight' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'props.match.params.id' and 'setBuilderState'. Either include them or remove the dependency array.",["500"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'grey' is defined but never used.","'Ref' is defined but never used.","'TiFlowMerge' is defined but never used.","React Hook useEffect has a missing dependency: 'handleSidebarState'. Either include it or remove the dependency array. If 'handleSidebarState' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["501"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","React Hook useEffect has a missing dependency: 'botId'. Either include it or remove the dependency array.",["502"],"'AuthButton' is defined but never used.","'FlowStateType' is defined but never used.","'uuidv4' is defined but never used.","'onRequestClose' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"503","fix":"504"},{"desc":"505","fix":"506"},{"desc":"503","fix":"507"},{"desc":"508","fix":"509"},{"desc":"510","fix":"511"},{"desc":"512","fix":"513"},"Update the dependencies array to be: [isChangingBody, register]",{"range":"514","text":"515"},"Update the dependencies array to be: [isChangingHeading, register]",{"range":"516","text":"517"},{"range":"518","text":"515"},"Update the dependencies array to be: [props.match.params.id, setBuilderState]",{"range":"519","text":"520"},"Update the dependencies array to be: [handleSidebarState, isOpen]",{"range":"521","text":"522"},"Update the dependencies array to be: [pageNumber, lastPage, botId]",{"range":"523","text":"524"},[2207,2223],"[isChangingBody, register]",[5917,5936],"[isChangingHeading, register]",[6077,6093],[6813,6815],"[props.match.params.id, setBuilderState]",[1369,1377],"[handleSidebarState, isOpen]",[1682,1704],"[pageNumber, lastPage, botId]"]