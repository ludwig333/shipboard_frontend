[{"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Toolbar/index.tsx":"1","/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/messages.ts":"2","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Modals/ConnectFlow.tsx":"3","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Card/index.tsx":"4","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Flows/builder.tsx":"5","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Text/index.tsx":"6","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Image/index.tsx":"7","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Text/styles.ts":"8","/home/rabinson/Freelancing/ShipboardBot/frontend/src/index.tsx":"9","/home/rabinson/Freelancing/ShipboardBot/frontend/src/routes/ProtectedRoute.tsx":"10","/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Modal/ModalProvider.tsx":"11","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Templates/index.tsx":"12","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Bots/index.tsx":"13","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/form.ts":"14","/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/bots.ts":"15","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/Dropdown/styles.ts":"16","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/layout/AuthLayout.tsx":"17","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/DeleteModal.tsx":"18","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/EditModal.tsx":"19","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Flows/EditModal.tsx":"20","/home/rabinson/Freelancing/ShipboardBot/frontend/src/constants/urls.ts":"21","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/feature/index.tsx":"22","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/navbar/index.tsx":"23","/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/cards.ts":"24","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/info/styles.ts":"25","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/feature/styles.ts":"26","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/navbar/styles.ts":"27","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Image/styles.ts":"28","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Sidebar/styles.ts":"29","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Card/styles.ts":"30"},{"size":8234,"mtime":1612604528142,"results":"31","hashOfConfig":"32"},{"size":1279,"mtime":1612604464688,"results":"33","hashOfConfig":"32"},{"size":2820,"mtime":1612604334475,"results":"34","hashOfConfig":"32"},{"size":10853,"mtime":1612319631944,"results":"35","hashOfConfig":"32"},{"size":20404,"mtime":1612604807705,"results":"36","hashOfConfig":"32"},{"size":3015,"mtime":1612320240314,"results":"37","hashOfConfig":"32"},{"size":3108,"mtime":1612149575042,"results":"38","hashOfConfig":"32"},{"size":1065,"mtime":1610160837489,"results":"39","hashOfConfig":"32"},{"size":515,"mtime":1607764359769,"results":"40","hashOfConfig":"32"},{"size":944,"mtime":1611287624293,"results":"41","hashOfConfig":"32"},{"size":3582,"mtime":1612584637978,"results":"42","hashOfConfig":"32"},{"size":210,"mtime":1610158645219,"results":"43","hashOfConfig":"32"},{"size":5089,"mtime":1612578787521,"results":"44","hashOfConfig":"32"},{"size":945,"mtime":1608217208422,"results":"45","hashOfConfig":"32"},{"size":939,"mtime":1611505690538,"results":"46","hashOfConfig":"32"},{"size":603,"mtime":1611407912500,"results":"47","hashOfConfig":"32"},{"size":3062,"mtime":1607357777066,"results":"48","hashOfConfig":"32"},{"size":1475,"mtime":1611506512498,"results":"49","hashOfConfig":"32"},{"size":2326,"mtime":1611505989860,"results":"50","hashOfConfig":"32"},{"size":2316,"mtime":1611505901411,"results":"51","hashOfConfig":"32"},{"size":638,"mtime":1612444897423,"results":"52","hashOfConfig":"32"},{"size":2469,"mtime":1607354234054,"results":"53","hashOfConfig":"32"},{"size":717,"mtime":1607357496043,"results":"54","hashOfConfig":"32"},{"size":1341,"mtime":1612234206822,"results":"55","hashOfConfig":"32"},{"size":1251,"mtime":1607358308147,"results":"56","hashOfConfig":"32"},{"size":707,"mtime":1606842094420,"results":"57","hashOfConfig":"32"},{"size":596,"mtime":1607358244451,"results":"58","hashOfConfig":"32"},{"size":1664,"mtime":1610076394115,"results":"59","hashOfConfig":"32"},{"size":2446,"mtime":1612319962325,"results":"60","hashOfConfig":"32"},{"size":2734,"mtime":1610160143779,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},"v8ty68",{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"65"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Toolbar/index.tsx",["129","130","131","132","133","134","135","136","137"],"import React, { useContext, useState, useRef, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { ToolbarWrapper, ToolbarMenu, ToolbarButtonGroup } from './styles';\nimport { VerticalGap } from '../../../common/typography';\nimport { ToolbarButton } from '../../../common/buttons';\nimport { BuilderContext } from '../../../../services/Builder/BuilderProvider';\nimport { GiCancel } from 'react-icons/gi';\nimport FormImage from '../Form/Image/index';\nimport FormText from '../Form/Text/index';\nimport FormCard from '../Form/Card/index';\nimport { connectFlowToMessage, updateMessage } from '../../../../apis/messages';\nimport { toast } from 'react-toastify';\nimport { saveText } from '../../../../apis/texts';\nimport { saveImage } from '../../../../apis/images';\nimport { addCardGroup } from '../../../../apis/cards';\nimport { useModal } from '../../../../services/Modal/ModalProvider';\nimport ConnectFlowModal from '../Modals/ConnectFlow';\n\n\nconst Toolbar = ({ id, hideToolbar, bot, flow }) => {\n  const [builderState, setBuilderState] = useContext(BuilderContext);\n  const [isChangingTitle, setIsChangingTitle] = useState(false);\n  const { register, handleSubmit } = useForm({ mode: 'onChange' });\n  const { showModal, hideModal } = useModal();\n\n  // const titleRef = useRef<HTMLInputElement>(null);\n\n  //Find index of specific object using findIndex method.\n  const objIndex = builderState.findIndex((obj) => obj.id == id);\n\n  const onChangeTitle = (data) => {\n    updateMessage({\n      name: data.title\n    }, id).then((response) => {\n      setBuilderState(\n        builderState.map((item, ind) => {\n          if (ind == objIndex) {\n           item.name = data.title\n          }\n          return item;\n        })\n      );\n    }).catch((err) => {\n      toast.error('Something went wrong')\n    })    \n  };\n  const openConnectFlowModal = () => {\n    showModal(() => (\n      <ConnectFlowModal flow={flow} bot={bot} hideModal={hideModal} handleSelect={handleSelect}/>\n    ));\n  }\n\n  const handleSelect = (flowId, flowName) => {\n    connectFlowToMessage({\n      flow: flowId\n    }, id).catch((err) => {\n      toast.error(\"Something went wrong\")\n    })\n    setBuilderState(\n      builderState.map((item, index) => {\n        if (item.id == id) {\n          item.children.push({\n            name: flowName\n          })\n        }\n        return item;\n      })\n    );\n    hideModal();\n  }\n\n  const removeConnetedFlow = () => {\n    connectFlowToMessage({}, id).catch((err) => {\n      toast.error(\"Something went wrong\")\n    })\n    setBuilderState(\n      builderState.map((item) => {\n        if (item.id == id) {\n          item.children.splice(0, 1);\n        }\n        return item;\n      })\n    );\n  }\n  \n\n  const getContents = () => {\n    if (builderState[objIndex].type === \"default\") {\n      return (\n        <ToolbarMenu>\n          <div className={isChangingTitle ? 'header active' : 'header'}>\n            <form onBlur={handleSubmit(onChangeTitle)}>\n              <input\n                maxLength={35}\n                className=\"heading-input\"\n                ref={register({required: true, minLength: 3})}\n                id=\"title\"\n                name=\"title\"\n                defaultValue={builderState[objIndex].name}\n                onBlur={() => setIsChangingTitle(false)}\n              />\n            </form>\n          </div>\n          {builderState[objIndex].children.length > 0 ? (\n            builderState[objIndex].children.map((child) => {\n              return (\n                <React.Fragment key={child.id}>\n                  <VerticalGap size=\"3\" />\n                  {getChildren(child, objIndex)}\n                </React.Fragment>\n              );\n            })\n          ) : (\n              <React.Fragment>\n                <VerticalGap size=\"3\" />\n                <p className=\"no-content-text\">No content</p>\n              </React.Fragment>\n            )}\n          <VerticalGap size=\"3\" />\n        <ToolbarButtons id={id} index={objIndex} />\n        </ToolbarMenu>\n      );\n    } else if (builderState[objIndex].type === \"flow\") {\n      return (\n        <ToolbarMenu>\n          <div className='flow-header'>\n            <h4>Connect Flow </h4>\n          </div>\n          {builderState[objIndex].children.length > 0 ? (\n            builderState[objIndex].children.map((child) => {\n              return (\n                <React.Fragment key={child.id}>\n                  <VerticalGap size=\"3\" />\n                  <div className=\"flow-content\">\n                    {child.name}\n                    <button className=\"action-btn\">\n                      <GiCancel onClick={removeConnetedFlow} />\n                  </button>\n                  </div>\n                </React.Fragment>\n              );\n            })\n          ) : (\n              <React.Fragment>\n                <VerticalGap size=\"3\" />\n                <ToolbarButton height=\"4rem\" width=\"25rem\" onClick={openConnectFlowModal}>\n                  Select Flow\n                </ToolbarButton>\n              </React.Fragment>\n            )}\n        </ToolbarMenu>\n      );\n    }\n  }\n\n  return (\n    <ToolbarWrapper>\n      {builderState[objIndex] &&\n        getContents()\n      }\n    </ToolbarWrapper>\n  );\n};\n\nexport default Toolbar;\n\nconst ToolbarButtons = ({ id, index }) => {\n  const [builderState, setBuilderState] = useContext(BuilderContext);\n\n  const addText = () => {\n    var height = builderState[index].height;\n    height = height + 50;\n    const positionIndex = builderState[index].children.length + 1;\n    saveText({\n      text: 'Change text',\n      message: id,\n      position: positionIndex\n    }).then((response) => {\n      setBuilderState(\n        builderState.map((item, ind) => {\n          if (ind == index) {\n            item.height = height;\n            item.children.push(response.data);\n          }\n          return item;\n        })\n      );\n    }).catch((err) => {\n      toast.error(\"Something went wrong\");\n    })\n  };\n\n  const addCard = () => {\n    let height = builderState[index].height;\n    height = height + 150;\n    const positionIndex = builderState[index].children.length + 1;\n\n\n    addCardGroup({\n      message: id,\n      position: positionIndex\n    }).then((response) => {\n      console.log(response.data);\n      setBuilderState(\n        builderState.map((item, ind) => {\n          if (ind == index) {\n            item.height = height;\n            item.children.push(response.data);\n          }\n          return item;\n        })\n      );\n    }).catch((err) => {\n      toast.error(\"Something went wrong\");\n    });\n  };\n\n  const addImage = () => {\n    let height = builderState[index].height;\n    height = height + 150;\n    const positionIndex = builderState[index].children.length + 1;\n\n    saveImage({\n      message: id,\n      position: positionIndex\n    }).then((response) => {\n      setBuilderState(\n        builderState.map((item, ind) => {\n          if (ind == index) {\n            item.height = height;\n            item.children.push(response.data);\n          }\n          return item;\n        })\n      );\n    }).catch((err) => {\n      toast.error(\"Something went wrong\");\n    })\n  };\n\n  return (\n    <React.Fragment>\n      <ToolbarButtonGroup>\n        <ToolbarButton\n          height=\"6rem\"\n          width=\"6rem\"\n          fontSize=\"1.2rem\"\n          onClick={addText}>\n          + Text\n        </ToolbarButton>\n        <ToolbarButton\n          height=\"6rem\"\n          width=\"6rem\"\n          fontSize=\"1.2rem\"\n          onClick={addCard}>\n          + Card\n        </ToolbarButton>\n        <ToolbarButton\n          height=\"6rem\"\n          width=\"6rem\"\n          fontSize=\"1.2rem\"\n          onClick={addImage}>\n          + Image\n        </ToolbarButton>\n        {/* <ToolbarButton height=\"4rem\" width=\"25rem\">\n          Next Button\n        </ToolbarButton> */}\n      </ToolbarButtonGroup>\n    </React.Fragment>\n  );\n};\n\nconst getChildren = (children, messageId) => {\n  if (children.type === 'text') {\n    return <FormText messageId={messageId} childId={children.id} />;\n  } else if (children.type === 'image') {\n    return <FormImage messageId={messageId} childId={children.id} />;\n  } else if (children.type === 'card') {\n    return <FormCard messageId={messageId} childId={children.id} />;\n  }\n};\n",["138","139"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/messages.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Modals/ConnectFlow.tsx",["140","141","142","143"],"import React, { useEffect, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { getFlows } from '../../../../apis/flows';\nimport { GridWrapper } from '../../../common/grid';\nimport { ConnectFlowWrapper } from './styles';\nimport Pagination from '../../../common/Pagination/index';\n\ntype FlowType = {\n  id: string;\n  name: string;\n  message_count: string\n};\n\nconst ConnectFlowModal = ({bot, flow, hideModal, handleSelect}) => {\n  const [flows, setFlows] = useState<Array<FlowType>>();\n  const [pageNumber, setPageNumber] = useState(1);\n  const [isLoading, setIsLoading] = useState(true);\n  const [lastPage, setLastPage] = useState(1);\n\n  const getFlowsData = (bot:string, pageNumber: number) => {\n    getFlows(bot, pageNumber)\n      .then((response) => {\n        var otherFlowsThanOneInside = response.data.filter(item => (item.id != flow) && item.message_count > 0)\n        setFlows(otherFlowsThanOneInside);\n        setPageNumber(response.meta.current_page);\n        setLastPage(response.meta.last_page);\n      })\n      .catch((err) => {\n        console.log(\"Something went wrong\");\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n\n  const handlePageChange = (pageNumber: number) => {\n    setPageNumber(pageNumber);\n  };\n\n  useEffect(() => {\n    getFlowsData(bot, pageNumber);\n  }, [pageNumber, lastPage]);\n\n  const getFlowGrid = () => {\n    if (flows.length > 0) {\n      return flows.map((data: FlowType) => {\n        return (\n          <React.Fragment key={data.id}>\n              <div className=\"grid-item\" onClick={ () => handleSelect(data.id, data.name)}>\n                <div className=\"grid-item-wrapper\">\n                <div className=\"grid-item-container\">\n                  <div className=\"image\">\n                    Image\n                  </div>\n                  <div className=\"tag\">\n                    <p>{data.name}</p>\n                  </div>           \n                </div>\n              </div>\n            </div>\n          </React.Fragment>\n        );\n      })\n    } else {\n     return  (<p>There are no other flows or they don't have messages</p>);\n    }\n  }\n\n  return (\n    <ConnectFlowWrapper>\n      <div className=\"modal-body\">\n        <button className=\"modal-exit\" onClick={hideModal}></button>\n        <div className=\"modal-title\">\n         Connect Modal\n        </div>\n        <div className=\"modal-content\">\n          <GridWrapper>\n            <div className=\"grid-row\">\n              {flows && getFlowGrid()}\n            </div>\n          </GridWrapper>\n          {(flows && flows.length > 0) && \n            <Pagination\n            activePage={pageNumber}\n            total={lastPage}\n            onChange={handlePageChange}\n          />}\n        </div>\n      </div>\n    </ConnectFlowWrapper>\n  );\n};\n\nexport default ConnectFlowModal;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Card/index.tsx",["144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177"],"import React, { useState, useEffect, useRef, useContext } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { CardSlider, CardWrapper } from './styles';\nimport { BuilderContext } from '../../../../../services/Builder/BuilderProvider';\nimport { AddTextButton } from '../../../../common/buttons';\nimport { ImageWrapper } from '../Image/styles';\nimport { v4 as uuidv4 } from 'uuid';\nimport Textarea from 'react-expanding-textarea';\nimport {\n  BiImageAdd,\n  BiTrash,\n  BiChevronRight,\n  BiChevronLeft,\n  BiPlus,\n} from 'react-icons/bi';\nimport { addCard, deleteCardGroup, updateCard, uploadImage } from '../../../../../apis/cards';\nimport { toast } from 'react-toastify';\n\nconst FormCard = ({ messageId, childId }) => {\n  const [builderState, setBuilderState] = useContext(BuilderContext);\n  const { register, handleSubmit } = useForm({ mode: 'onChange' });\n  const [isChangingHeading, setIsChangingHeading] = useState(false);\n  const [isChangingBody, setIsChangingBody] = useState(false);\n\n  const headingRef = useRef<HTMLInputElement>(null);\n  const paragraphRef = useRef<HTMLTextAreaElement>(null);\n  const cardRef = useRef<HTMLDivElement>(null);\n\n  //Find index of specific object using findIndex method.\n  const childIndex = builderState[messageId].children.findIndex(\n    (obj) => obj.id == childId\n  );\n\n  //Card Navigation functions\n  const handleNextButton = (id) => {\n    const cards = builderState[messageId].children[childIndex].cards;\n    const length = cards.length - 1;\n    const activeCardIndex = getActiveCardIndex(cards);\n\n    if (activeCardIndex == length) {\n      makeCardActive(activeCardIndex + 1, activeCardIndex, length + 2, true);\n    } else {\n      makeCardActive(activeCardIndex + 1, activeCardIndex);\n    }\n  };\n\n  const handlePreviousButton = () => {\n    const cards = builderState[messageId].children[childIndex].cards;\n    const activeCardIndex = getActiveCardIndex(cards);\n    if (activeCardIndex != 0) {\n      makeCardActive(activeCardIndex - 1, activeCardIndex);\n    }\n  };\n\n  const makeCardActive = (\n    cardIndex,\n    activeCardIndex,\n    length = 0,\n    addNew = false\n  ) => {\n    if (addNew) {\n      addCard(childId).then((response) => {\n        setBuilderState(\n          builderState.map((message, index) => { \n            if (index == messageId) { \n              message.children.map((child, ind) => { \n                if (ind == childIndex) {\n                  //First set active card to inactive\n                  child.cards.map((card, inx) => {\n                    console.log(activeCardIndex);\n                  if (inx == activeCardIndex) {\n                    card.active = false\n                  }\n                    return card;\n                })\n                //Then push a new card with active true;\n                  child.cards.push(response.data)\n                }\n              })\n            }\n            return message;\n          })\n        );\n      }).catch((err) => {\n        console.log(err);\n        toast.error(\"Something went wrong\");\n      });\n    } else {\n      setBuilderState(\n        builderState.map((message, index) => { \n          if (index == messageId) { \n            message.children.map((child, ind) => { \n              if (ind == childIndex) {\n                child.cards.map((card, inx) => { \n                  if (inx == cardIndex) { \n                    card.active = true\n                  }\n                  if (inx == activeCardIndex) { \n                    card.active = false\n                  }\n                  return card;\n                })\n              }\n              return child;\n            })\n          }\n          return message;\n        })\n      );\n    }\n  };\n\n  const getActiveCardIndex = (cards) => {\n    return cards.findIndex((obj) => obj.active == true);\n  };\n\n  const getCardIndex = (id) => {\n    return builderState[messageId].children[childIndex].cards.findIndex(\n      (obj) => obj.id === id\n    );\n  };\n\n  const isLastCard = () => {\n    const cards = builderState[messageId].children[childIndex].cards;\n    const length = cards.length - 1;\n    const activeCardIndex = getActiveCardIndex(cards);\n    return activeCardIndex == length;\n  };\n\n  //Form input submit methods\n  const onUploadImage = (data, id) => {\n    let cardIndex = getCardIndex(id);\n    let reader = new FileReader();\n    const formData = new FormData();\n    formData.append('image', data.image[0]);\n    formData.append('name', data.image[0].name);\n\n    reader.onloadend = () => {\n      var height = cardRef.current.scrollHeight;\n      uploadImage(formData, id).then((response) => {\n        setBuilderState(\n          builderState.map((item, index) => {\n            if (index == messageId) {\n              item.children.map((child, ind) => {\n                if (ind == childIndex) {\n                  child.cards.map((card, s) => {\n                    if (s == cardIndex) {\n                      card.selectedImage = data.image[0];\n                      card.imagePreviewUrl = reader.result;\n                      card.height = height;\n                    }\n                    return card;\n                  });\n                }\n                return child;\n              });\n            }\n            return item;\n          })\n        );\n      }).catch((err) => {\n        toast.error(\"Something went wrong\");\n      })\n    };\n\n    reader.readAsDataURL(data.image[0]);\n  };\n\n  const onHeadingChange = (data, id) => {\n    let cardIndex = getCardIndex(id);\n    var height = cardRef.current.scrollHeight;\n    updateCard({\n      heading: data.heading,\n    }, id).then((response) => {\n      setBuilderState(\n        builderState.map((item, index) => {\n          if (index == messageId) {\n            item.children.map((child, ind) => {\n              if (ind == childIndex) {\n                child.cards.map((card, s) => {\n                  if (s == cardIndex) {\n                    card.heading = data.heading;\n                    card.height = height;\n                  }\n                });\n              }\n            });\n          }\n          return item;\n        })\n      );\n    }).catch((err) => {\n      toast.error(\"Something went wrong\");\n    })\n  };\n\n  const onParagraphChange = (data, id) => {\n    let cardIndex = getCardIndex(id);\n    var height = cardRef.current.scrollHeight;\n\n    updateCard({\n      body: data.body,\n    }, id).then((response) => {\n      setBuilderState(\n        builderState.map((item, index) => {\n          if (index == messageId) {\n            item.children.map((child, ind) => {\n              if (ind == childIndex) {\n                child.cards.map((card, s) => {\n                  if (s == cardIndex) {\n                    card.body = data.body;\n                    card.height = height;\n                  }\n                });\n              }\n            });\n          }\n          return item;\n        })\n      );\n    }).catch((err) => {\n      toast.error(\"Something went wrong\");\n    })\n  };\n\n  const handleDelete = () => {\n    deleteCardGroup(childId).then((response) => {\n      setBuilderState(\n        builderState.map((item, index) => {\n          if (index == messageId) {\n            item.height -= 250;\n            item.children.splice(childIndex, 1);\n          }\n          return item;\n        })\n      );\n    }).catch((err) => {\n      toast.error(\"Something went wrong\");\n    })\n  };\n\n  return (\n    <CardSlider>\n      <div className=\"navigation_btn previous\" onClick={handlePreviousButton}>\n        <BiChevronLeft />\n      </div>\n      <div className=\"navigation_btn next\" onClick={handleNextButton}>\n        {isLastCard() ? <BiPlus /> : <BiChevronRight />}\n      </div>\n      <button className=\"action-btn\" onClick={handleDelete}>\n        <BiTrash />\n      </button>\n      {builderState[messageId].children[childIndex].cards.map((card) => {\n        if (card.active) {\n          return (\n            <CardWrapper ref={cardRef}>\n              <div className=\"card-image\">\n                <ImageWrapper>\n                  {card.imagePreviewUrl ? (\n                    <div>\n                      <img src={card.imagePreviewUrl} alt=\"card-image\" />\n                    </div>\n                  ) : (\n                    <form\n                      onChange={handleSubmit((data) =>\n                        onUploadImage(data, card.id)\n                      )}>\n                      <input\n                        ref={register}\n                        type=\"file\"\n                        id={'card_image' + getCardIndex(card.id)}\n                        name=\"image\"\n                        accept=\"image/*\"\n                      />\n                      <label htmlFor={'card_image' + getCardIndex(card.id)}>\n                        <BiImageAdd />\n                        <p>Upload image</p>\n                      </label>\n                    </form>\n                  )}\n                </ImageWrapper>\n              </div>\n              <div className=\"card-text\">\n                <div\n                  className={\n                    isChangingHeading ? 'card-heading active' : 'card-heading'\n                  }>\n                  <form\n                    onBlur={handleSubmit((data) =>\n                      onHeadingChange(data, card.id)\n                    )}>\n                    <input\n                      className=\"card-title\"\n                      ref={register({required: true, minLength: 3 })}\n                      maxLength={27}\n                      id=\"heading\"\n                      name=\"heading\"\n                      defaultValue={card.heading}\n                      onBlur={() => setIsChangingHeading(false)}\n                      onClick={() => {\n                        setIsChangingBody(false);\n                        setIsChangingHeading(true);\n                      }}\n                    />\n                  </form>\n                </div>\n                <div\n                  className={isChangingBody ? 'card-body active' : 'card-body'}>\n                  <form\n                    onBlur={handleSubmit((data) =>\n                      onParagraphChange(data, card.id)\n                    )}>\n                    <Textarea\n                      className=\"card-paragraph\"\n                      maxLength={200}\n                      placeholder=\"Enter your text here\"\n                      onBlur={() => setIsChangingBody(false)}\n                      defaultValue={card.body}\n                      id=\"body\"\n                      name=\"body\"\n                      ref={register({required: true, minLength: 3})}\n                      onClick={() => {\n                        setIsChangingHeading(false);\n                        setIsChangingBody(true);\n                      }}\n                    />\n                  </form>\n                </div>\n              </div>\n            </CardWrapper>\n          );\n        }\n      })}\n    </CardSlider>\n  );\n};\n\nexport default FormCard;\n",["178","179"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Flows/builder.tsx",["180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Text/index.tsx",["214","215","216","217","218","219","220"],"import React, { useEffect, useState, useRef, useContext } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { BuilderContext } from '../../../../../services/Builder/BuilderProvider';\nimport { AddTextWrapper } from './styles';\nimport { AddTextButton } from '../../../../common/buttons';\nimport { BiTrash } from 'react-icons/bi';\nimport Textarea from 'react-expanding-textarea';\nimport { updateText, deleteText } from '../../../../../apis/texts';\nimport { toast } from 'react-toastify';\n\nconst FormText = ({ messageId, childId }) => {\n  const [builderState, setBuilderState] = useContext(BuilderContext);\n  const { register, handleSubmit } = useForm({ mode: 'onChange' });\n  const [isChangingBody, setIsChangingBody] = useState(false);\n\n  const textAreaRef = useRef<HTMLTextAreaElement>(null);\n\n  //Find index of specific object using findIndex method.\n  const childIndex = builderState[messageId].children.findIndex(\n    (obj) => obj.id == childId\n  );\n\n  const onTextChange = (data) => {\n    var height = textAreaRef.current.scrollHeight;\n    updateText({\n      text: data.text\n    }, childId).then((response) => {\n      setBuilderState(\n        builderState.map((item, index) => {\n          if (index == messageId) {\n            item.children.map((child, ind) => {\n              if (ind == childIndex) {\n                child.value = data.text;\n                child.height = height;\n              }\n            });\n          }\n          return item;\n        })\n      );\n    }).catch((err) => {\n      toast.error(\"Something went wrong\");\n    })\n  };\n\n  const handleDelete = () => {\n    var height = builderState[messageId].height - textAreaRef.current.scrollHeight;\n    deleteText(childId)\n      .then(() => {\n        setBuilderState(\n          builderState.map((item, index) => {\n            if (index == messageId) {\n              item.height = height;\n              item.children.splice(childIndex,1)\n            }\n            return item;\n          })\n        );\n      })\n      .catch((err) => {\n        toast.error(\"Something went wrong\");\n    })\n  };\n\n  useEffect(() => {\n    if (textAreaRef.current) {\n      register(textAreaRef.current, {required: true, minLength: 3});\n    }\n  }, []);\n\n  return (\n    <AddTextWrapper>\n      <button className=\"action-btn\">\n        <BiTrash onClick={handleDelete} />\n      </button>\n      <div className={isChangingBody ? 'card-body active' : 'card-body'}>\n        <form onBlur={handleSubmit(onTextChange)}>\n          <Textarea\n            maxLength={500}\n            placeholder=\"Enter your text here\"\n            onBlur={() => setIsChangingBody(false)}\n            defaultValue={builderState[messageId].children[childIndex].value}\n            id=\"text\"\n            name=\"text\"\n            ref={textAreaRef}\n            onClick={() => setIsChangingBody(true)}\n          />\n        </form>\n      </div>\n\n      {/* <AddTextButton height=\"4rem\" width=\"100%\">\n        Add Button\n      </AddTextButton> */}\n    </AddTextWrapper>\n  );\n};\n\nexport default FormText;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Image/index.tsx",["221","222","223","224","225","226","227"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Text/styles.ts",[],["228","229"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/index.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/routes/ProtectedRoute.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Modal/ModalProvider.tsx",["230"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Templates/index.tsx",["231"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Bots/index.tsx",["232","233","234","235","236","237","238"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/form.ts",["239"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/bots.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/Dropdown/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/layout/AuthLayout.tsx",["240"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/DeleteModal.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/EditModal.tsx",["241","242"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Flows/EditModal.tsx",["243","244"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/constants/urls.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/feature/index.tsx",["245"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/navbar/index.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/cards.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/info/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/feature/styles.ts",["246"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/navbar/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Image/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Sidebar/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Card/styles.ts",[],{"ruleId":"247","severity":1,"message":"248","line":1,"column":39,"nodeType":"249","messageId":"250","endLine":1,"endColumn":45},{"ruleId":"247","severity":1,"message":"251","line":1,"column":47,"nodeType":"249","messageId":"250","endLine":1,"endColumn":56},{"ruleId":"252","severity":1,"message":"253","line":29,"column":59,"nodeType":"254","messageId":"255","endLine":29,"endColumn":61},{"ruleId":"252","severity":1,"message":"253","line":37,"column":19,"nodeType":"254","messageId":"255","endLine":37,"endColumn":21},{"ruleId":"252","severity":1,"message":"253","line":61,"column":21,"nodeType":"254","messageId":"255","endLine":61,"endColumn":23},{"ruleId":"252","severity":1,"message":"253","line":78,"column":21,"nodeType":"254","messageId":"255","endLine":78,"endColumn":23},{"ruleId":"252","severity":1,"message":"253","line":181,"column":19,"nodeType":"254","messageId":"255","endLine":181,"endColumn":21},{"ruleId":"252","severity":1,"message":"253","line":206,"column":19,"nodeType":"254","messageId":"255","endLine":206,"endColumn":21},{"ruleId":"252","severity":1,"message":"253","line":229,"column":19,"nodeType":"254","messageId":"255","endLine":229,"endColumn":21},{"ruleId":"256","replacedBy":"257"},{"ruleId":"258","replacedBy":"259"},{"ruleId":"247","severity":1,"message":"260","line":2,"column":10,"nodeType":"249","messageId":"250","endLine":2,"endColumn":15},{"ruleId":"247","severity":1,"message":"261","line":17,"column":10,"nodeType":"249","messageId":"250","endLine":17,"endColumn":19},{"ruleId":"252","severity":1,"message":"262","line":23,"column":77,"nodeType":"254","messageId":"255","endLine":23,"endColumn":79},{"ruleId":"263","severity":1,"message":"264","line":43,"column":6,"nodeType":"265","endLine":43,"endColumn":28,"suggestions":"266"},{"ruleId":"247","severity":1,"message":"251","line":1,"column":27,"nodeType":"249","messageId":"250","endLine":1,"endColumn":36},{"ruleId":"247","severity":1,"message":"267","line":5,"column":10,"nodeType":"249","messageId":"250","endLine":5,"endColumn":23},{"ruleId":"247","severity":1,"message":"268","line":7,"column":16,"nodeType":"249","messageId":"250","endLine":7,"endColumn":22},{"ruleId":"247","severity":1,"message":"269","line":25,"column":9,"nodeType":"249","messageId":"250","endLine":25,"endColumn":19},{"ruleId":"247","severity":1,"message":"270","line":26,"column":9,"nodeType":"249","messageId":"250","endLine":26,"endColumn":21},{"ruleId":"252","severity":1,"message":"253","line":31,"column":21,"nodeType":"254","messageId":"255","endLine":31,"endColumn":23},{"ruleId":"252","severity":1,"message":"253","line":40,"column":25,"nodeType":"254","messageId":"255","endLine":40,"endColumn":27},{"ruleId":"252","severity":1,"message":"262","line":50,"column":25,"nodeType":"254","messageId":"255","endLine":50,"endColumn":27},{"ruleId":"252","severity":1,"message":"253","line":65,"column":23,"nodeType":"254","messageId":"255","endLine":65,"endColumn":25},{"ruleId":"271","severity":1,"message":"272","line":66,"column":49,"nodeType":"273","messageId":"274","endLine":66,"endColumn":51},{"ruleId":"252","severity":1,"message":"253","line":67,"column":25,"nodeType":"254","messageId":"255","endLine":67,"endColumn":27},{"ruleId":"252","severity":1,"message":"253","line":71,"column":27,"nodeType":"254","messageId":"255","endLine":71,"endColumn":29},{"ruleId":"252","severity":1,"message":"253","line":91,"column":21,"nodeType":"254","messageId":"255","endLine":91,"endColumn":23},{"ruleId":"252","severity":1,"message":"253","line":93,"column":23,"nodeType":"254","messageId":"255","endLine":93,"endColumn":25},{"ruleId":"252","severity":1,"message":"253","line":95,"column":27,"nodeType":"254","messageId":"255","endLine":95,"endColumn":29},{"ruleId":"252","severity":1,"message":"253","line":98,"column":27,"nodeType":"254","messageId":"255","endLine":98,"endColumn":29},{"ruleId":"252","severity":1,"message":"253","line":114,"column":48,"nodeType":"254","messageId":"255","endLine":114,"endColumn":50},{"ruleId":"252","severity":1,"message":"253","line":127,"column":28,"nodeType":"254","messageId":"255","endLine":127,"endColumn":30},{"ruleId":"252","severity":1,"message":"253","line":143,"column":23,"nodeType":"254","messageId":"255","endLine":143,"endColumn":25},{"ruleId":"252","severity":1,"message":"253","line":145,"column":25,"nodeType":"254","messageId":"255","endLine":145,"endColumn":27},{"ruleId":"252","severity":1,"message":"253","line":147,"column":27,"nodeType":"254","messageId":"255","endLine":147,"endColumn":29},{"ruleId":"252","severity":1,"message":"253","line":177,"column":21,"nodeType":"254","messageId":"255","endLine":177,"endColumn":23},{"ruleId":"271","severity":1,"message":"272","line":178,"column":44,"nodeType":"273","messageId":"274","endLine":178,"endColumn":46},{"ruleId":"252","severity":1,"message":"253","line":179,"column":23,"nodeType":"254","messageId":"255","endLine":179,"endColumn":25},{"ruleId":"271","severity":1,"message":"272","line":180,"column":43,"nodeType":"273","messageId":"274","endLine":180,"endColumn":45},{"ruleId":"252","severity":1,"message":"253","line":181,"column":25,"nodeType":"254","messageId":"255","endLine":181,"endColumn":27},{"ruleId":"252","severity":1,"message":"253","line":206,"column":21,"nodeType":"254","messageId":"255","endLine":206,"endColumn":23},{"ruleId":"271","severity":1,"message":"272","line":207,"column":44,"nodeType":"273","messageId":"274","endLine":207,"endColumn":46},{"ruleId":"252","severity":1,"message":"253","line":208,"column":23,"nodeType":"254","messageId":"255","endLine":208,"endColumn":25},{"ruleId":"271","severity":1,"message":"272","line":209,"column":43,"nodeType":"273","messageId":"274","endLine":209,"endColumn":45},{"ruleId":"252","severity":1,"message":"253","line":210,"column":25,"nodeType":"254","messageId":"255","endLine":210,"endColumn":27},{"ruleId":"252","severity":1,"message":"253","line":230,"column":21,"nodeType":"254","messageId":"255","endLine":230,"endColumn":23},{"ruleId":"271","severity":1,"message":"275","line":253,"column":70,"nodeType":"273","messageId":"276","endLine":253,"endColumn":72},{"ruleId":"277","severity":1,"message":"278","line":261,"column":23,"nodeType":"279","endLine":261,"endColumn":74},{"ruleId":"256","replacedBy":"280"},{"ruleId":"258","replacedBy":"281"},{"ruleId":"247","severity":1,"message":"282","line":4,"column":30,"nodeType":"249","messageId":"250","endLine":4,"endColumn":35},{"ruleId":"247","severity":1,"message":"268","line":6,"column":16,"nodeType":"249","messageId":"250","endLine":6,"endColumn":22},{"ruleId":"247","severity":1,"message":"283","line":32,"column":10,"nodeType":"249","messageId":"250","endLine":32,"endColumn":23},{"ruleId":"247","severity":1,"message":"284","line":32,"column":25,"nodeType":"249","messageId":"250","endLine":32,"endColumn":41},{"ruleId":"247","severity":1,"message":"285","line":36,"column":17,"nodeType":"249","messageId":"250","endLine":36,"endColumn":25},{"ruleId":"252","severity":1,"message":"253","line":46,"column":64,"nodeType":"254","messageId":"255","endLine":46,"endColumn":66},{"ruleId":"252","severity":1,"message":"253","line":47,"column":21,"nodeType":"254","messageId":"255","endLine":47,"endColumn":23},{"ruleId":"247","severity":1,"message":"286","line":64,"column":9,"nodeType":"249","messageId":"250","endLine":64,"endColumn":28},{"ruleId":"252","severity":1,"message":"253","line":67,"column":21,"nodeType":"254","messageId":"255","endLine":67,"endColumn":23},{"ruleId":"252","severity":1,"message":"253","line":85,"column":21,"nodeType":"254","messageId":"255","endLine":85,"endColumn":23},{"ruleId":"252","severity":1,"message":"253","line":88,"column":21,"nodeType":"254","messageId":"255","endLine":88,"endColumn":23},{"ruleId":"252","severity":1,"message":"253","line":97,"column":21,"nodeType":"254","messageId":"255","endLine":97,"endColumn":23},{"ruleId":"252","severity":1,"message":"253","line":111,"column":21,"nodeType":"254","messageId":"255","endLine":111,"endColumn":23},{"ruleId":"252","severity":1,"message":"253","line":114,"column":21,"nodeType":"254","messageId":"255","endLine":114,"endColumn":23},{"ruleId":"252","severity":1,"message":"253","line":123,"column":21,"nodeType":"254","messageId":"255","endLine":123,"endColumn":23},{"ruleId":"252","severity":1,"message":"253","line":135,"column":19,"nodeType":"254","messageId":"255","endLine":135,"endColumn":21},{"ruleId":"252","severity":1,"message":"253","line":149,"column":23,"nodeType":"254","messageId":"255","endLine":149,"endColumn":25},{"ruleId":"252","severity":1,"message":"262","line":174,"column":30,"nodeType":"254","messageId":"255","endLine":174,"endColumn":32},{"ruleId":"252","severity":1,"message":"253","line":180,"column":29,"nodeType":"254","messageId":"255","endLine":180,"endColumn":31},{"ruleId":"252","severity":1,"message":"253","line":220,"column":19,"nodeType":"254","messageId":"255","endLine":220,"endColumn":21},{"ruleId":"252","severity":1,"message":"253","line":246,"column":17,"nodeType":"254","messageId":"255","endLine":246,"endColumn":19},{"ruleId":"252","severity":1,"message":"253","line":277,"column":23,"nodeType":"254","messageId":"255","endLine":277,"endColumn":25},{"ruleId":"252","severity":1,"message":"253","line":304,"column":23,"nodeType":"254","messageId":"255","endLine":304,"endColumn":25},{"ruleId":"263","severity":1,"message":"287","line":331,"column":6,"nodeType":"265","endLine":331,"endColumn":8,"suggestions":"288"},{"ruleId":"252","severity":1,"message":"253","line":388,"column":27,"nodeType":"254","messageId":"255","endLine":388,"endColumn":29},{"ruleId":"252","severity":1,"message":"253","line":639,"column":19,"nodeType":"254","messageId":"255","endLine":639,"endColumn":21},{"ruleId":"252","severity":1,"message":"253","line":641,"column":26,"nodeType":"254","messageId":"255","endLine":641,"endColumn":28},{"ruleId":"252","severity":1,"message":"253","line":698,"column":19,"nodeType":"254","messageId":"255","endLine":698,"endColumn":21},{"ruleId":"252","severity":1,"message":"253","line":700,"column":26,"nodeType":"254","messageId":"255","endLine":700,"endColumn":28},{"ruleId":"252","severity":1,"message":"253","line":705,"column":19,"nodeType":"254","messageId":"255","endLine":705,"endColumn":21},{"ruleId":"252","severity":1,"message":"253","line":707,"column":26,"nodeType":"254","messageId":"255","endLine":707,"endColumn":28},{"ruleId":"252","severity":1,"message":"253","line":716,"column":50,"nodeType":"254","messageId":"255","endLine":716,"endColumn":52},{"ruleId":"252","severity":1,"message":"253","line":720,"column":44,"nodeType":"254","messageId":"255","endLine":720,"endColumn":46},{"ruleId":"252","severity":1,"message":"253","line":724,"column":47,"nodeType":"254","messageId":"255","endLine":724,"endColumn":49},{"ruleId":"247","severity":1,"message":"267","line":5,"column":10,"nodeType":"249","messageId":"250","endLine":5,"endColumn":23},{"ruleId":"252","severity":1,"message":"253","line":20,"column":21,"nodeType":"254","messageId":"255","endLine":20,"endColumn":23},{"ruleId":"252","severity":1,"message":"253","line":30,"column":21,"nodeType":"254","messageId":"255","endLine":30,"endColumn":23},{"ruleId":"271","severity":1,"message":"272","line":31,"column":44,"nodeType":"273","messageId":"274","endLine":31,"endColumn":46},{"ruleId":"252","severity":1,"message":"253","line":32,"column":23,"nodeType":"254","messageId":"255","endLine":32,"endColumn":25},{"ruleId":"252","severity":1,"message":"253","line":52,"column":23,"nodeType":"254","messageId":"255","endLine":52,"endColumn":25},{"ruleId":"263","severity":1,"message":"289","line":69,"column":6,"nodeType":"265","endLine":69,"endColumn":8,"suggestions":"290"},{"ruleId":"247","severity":1,"message":"267","line":5,"column":10,"nodeType":"249","messageId":"250","endLine":5,"endColumn":23},{"ruleId":"252","severity":1,"message":"253","line":18,"column":21,"nodeType":"254","messageId":"255","endLine":18,"endColumn":23},{"ruleId":"252","severity":1,"message":"253","line":35,"column":23,"nodeType":"254","messageId":"255","endLine":35,"endColumn":25},{"ruleId":"271","severity":1,"message":"272","line":36,"column":46,"nodeType":"273","messageId":"274","endLine":36,"endColumn":48},{"ruleId":"252","severity":1,"message":"253","line":37,"column":25,"nodeType":"254","messageId":"255","endLine":37,"endColumn":27},{"ruleId":"252","severity":1,"message":"253","line":59,"column":21,"nodeType":"254","messageId":"255","endLine":59,"endColumn":23},{"ruleId":"277","severity":1,"message":"278","line":82,"column":11,"nodeType":"279","endLine":82,"endColumn":58},{"ruleId":"256","replacedBy":"291"},{"ruleId":"258","replacedBy":"292"},{"ruleId":"247","severity":1,"message":"293","line":28,"column":25,"nodeType":"249","messageId":"250","endLine":28,"endColumn":39},{"ruleId":"247","severity":1,"message":"294","line":2,"column":8,"nodeType":"249","messageId":"250","endLine":2,"endColumn":17},{"ruleId":"247","severity":1,"message":"295","line":2,"column":27,"nodeType":"249","messageId":"250","endLine":2,"endColumn":33},{"ruleId":"247","severity":1,"message":"296","line":2,"column":41,"nodeType":"249","messageId":"250","endLine":2,"endColumn":46},{"ruleId":"247","severity":1,"message":"297","line":2,"column":48,"nodeType":"249","messageId":"250","endLine":2,"endColumn":54},{"ruleId":"247","severity":1,"message":"261","line":25,"column":10,"nodeType":"249","messageId":"250","endLine":25,"endColumn":19},{"ruleId":"252","severity":1,"message":"253","line":80,"column":23,"nodeType":"254","messageId":"255","endLine":80,"endColumn":25},{"ruleId":"252","severity":1,"message":"253","line":83,"column":17,"nodeType":"254","messageId":"255","endLine":83,"endColumn":19},{"ruleId":"252","severity":1,"message":"253","line":92,"column":23,"nodeType":"254","messageId":"255","endLine":92,"endColumn":25},{"ruleId":"247","severity":1,"message":"298","line":2,"column":10,"nodeType":"249","messageId":"250","endLine":2,"endColumn":14},{"ruleId":"247","severity":1,"message":"299","line":5,"column":10,"nodeType":"249","messageId":"250","endLine":5,"endColumn":20},{"ruleId":"247","severity":1,"message":"248","line":1,"column":27,"nodeType":"249","messageId":"250","endLine":1,"endColumn":33},{"ruleId":"247","severity":1,"message":"251","line":1,"column":35,"nodeType":"249","messageId":"250","endLine":1,"endColumn":44},{"ruleId":"247","severity":1,"message":"248","line":1,"column":27,"nodeType":"249","messageId":"250","endLine":1,"endColumn":33},{"ruleId":"247","severity":1,"message":"251","line":1,"column":35,"nodeType":"249","messageId":"250","endLine":1,"endColumn":44},{"ruleId":"247","severity":1,"message":"300","line":10,"column":8,"nodeType":"249","messageId":"250","endLine":10,"endColumn":16},{"ruleId":"247","severity":1,"message":"301","line":2,"column":10,"nodeType":"249","messageId":"250","endLine":2,"endColumn":20},"@typescript-eslint/no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["302"],"no-negated-in-lhs",["303"],"'toast' is defined but never used.","'isLoading' is assigned a value but never used.","Expected '!==' and instead saw '!='.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'bot' and 'getFlowsData'. Either include them or remove the dependency array.","ArrayExpression",["304"],"'AddTextButton' is defined but never used.","'uuidv4' is defined but never used.","'headingRef' is assigned a value but never used.","'paragraphRef' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",["302"],["303"],"'Image' is defined but never used.","'isSecondClick' is assigned a value but never used.","'setIsSecondClick' is assigned a value but never used.","'setState' is assigned a value but never used.","'calculateCardHeight' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'props.match.params.id' and 'setBuilderState'. Either include them or remove the dependency array.",["305"],"React Hook useEffect has a missing dependency: 'register'. Either include it or remove the dependency array.",["306"],["302"],["303"],"'onRequestClose' is assigned a value but never used.","'AppLayout' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'grey' is defined but never used.","'AuthButton' is defined but never used.","'feature2' is defined but never used.","'darkerGrey' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"307","fix":"308"},{"desc":"309","fix":"310"},{"desc":"311","fix":"312"},"Update the dependencies array to be: [pageNumber, lastPage, getFlowsData, bot]",{"range":"313","text":"314"},"Update the dependencies array to be: [props.match.params.id, setBuilderState]",{"range":"315","text":"316"},"Update the dependencies array to be: [register]",{"range":"317","text":"318"},[1332,1354],"[pageNumber, lastPage, getFlowsData, bot]",[9317,9319],"[props.match.params.id, setBuilderState]",[2204,2206],"[register]"]