[{"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Flows/index.tsx":"1","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Card/index.tsx":"2","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Toolbar/index.tsx":"3","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Card/styles.ts":"4","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Image/index.tsx":"5","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Flows/helper.tsx":"6","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Image/styles.ts":"7","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Toolbar/styles.ts":"8","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Text/index.tsx":"9","/home/rabinson/Freelancing/ShipboardBot/frontend/src/index.tsx":"10","/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Auth/AuthProvider.tsx":"11","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/LandingPage.tsx":"12","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/auth/ForgotPasswordPage.tsx":"13","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Dashboard/index.tsx":"14","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Bots/index.tsx":"15","/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/bots.ts":"16","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/layout/AuthLayout.tsx":"17","/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Builder/BuilderProvider.tsx":"18","/home/rabinson/Freelancing/ShipboardBot/frontend/src/constants/urls.ts":"19","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/header/styles.ts":"20","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/footer/index.tsx":"21","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/Pagination/styles.ts":"22","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/info/styles.ts":"23","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Sidebar/index.tsx":"24","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Sidebar/styles.ts":"25","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Text/styles.ts":"26"},{"size":9076,"mtime":1610987772080,"results":"27","hashOfConfig":"28"},{"size":8781,"mtime":1610680746817,"results":"29","hashOfConfig":"28"},{"size":5076,"mtime":1610799925750,"results":"30","hashOfConfig":"28"},{"size":2734,"mtime":1610160143779,"results":"31","hashOfConfig":"28"},{"size":2371,"mtime":1610680844027,"results":"32","hashOfConfig":"28"},{"size":6545,"mtime":1610981713036,"results":"33","hashOfConfig":"28"},{"size":1664,"mtime":1610076394115,"results":"34","hashOfConfig":"28"},{"size":1746,"mtime":1610853991933,"results":"35","hashOfConfig":"28"},{"size":2428,"mtime":1610380915083,"results":"36","hashOfConfig":"28"},{"size":515,"mtime":1607764359769,"results":"37","hashOfConfig":"28"},{"size":1534,"mtime":1607842467004,"results":"38","hashOfConfig":"28"},{"size":395,"mtime":1606572185322,"results":"39","hashOfConfig":"28"},{"size":2699,"mtime":1607850305009,"results":"40","hashOfConfig":"28"},{"size":159,"mtime":1607998049825,"results":"41","hashOfConfig":"28"},{"size":4338,"mtime":1608091636749,"results":"42","hashOfConfig":"28"},{"size":976,"mtime":1608088875135,"results":"43","hashOfConfig":"28"},{"size":3062,"mtime":1607357777066,"results":"44","hashOfConfig":"28"},{"size":1175,"mtime":1610985458969,"results":"45","hashOfConfig":"28"},{"size":378,"mtime":1607839803392,"results":"46","hashOfConfig":"28"},{"size":2194,"mtime":1607358477789,"results":"47","hashOfConfig":"28"},{"size":795,"mtime":1607276608868,"results":"48","hashOfConfig":"28"},{"size":686,"mtime":1607915643490,"results":"49","hashOfConfig":"28"},{"size":1251,"mtime":1607358308147,"results":"50","hashOfConfig":"28"},{"size":3609,"mtime":1608218330018,"results":"51","hashOfConfig":"28"},{"size":2446,"mtime":1608360773902,"results":"52","hashOfConfig":"28"},{"size":1065,"mtime":1610160837489,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"v8ty68",{"filePath":"56","messages":"57","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"59"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"74"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Flows/index.tsx",["114"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Card/index.tsx",["115","116","117","118","119","120","121","122","123","124"],"import React, { useState, useEffect, useRef, useContext } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { CardSlider, CardWrapper } from './styles';\nimport { BuilderContext } from '../../../../../services/Builder/BuilderProvider';\nimport { AddTextButton } from '../../../../common/buttons';\nimport { ImageWrapper } from '../Image/styles';\nimport { v4 as uuidv4 } from 'uuid';\nimport Textarea from 'react-expanding-textarea';\nimport {\n  BiImageAdd,\n  BiTrash,\n  BiChevronRight,\n  BiChevronLeft,\n  BiPlus,\n} from 'react-icons/bi';\n\nconst FormCard = ({ messageId, childId }) => {\n  const [builderState, setBuilderState] = useContext(BuilderContext);\n  const { register, handleSubmit } = useForm({ mode: 'onChange' });\n  const [isChangingHeading, setIsChangingHeading] = useState(false);\n  const [isChangingBody, setIsChangingBody] = useState(false);\n\n  const headingRef = useRef<HTMLInputElement>(null);\n  const paragraphRef = useRef<HTMLTextAreaElement>(null);\n  const cardRef = useRef<HTMLDivElement>(null);\n\n  //Find index of specific object using findIndex method.\n  const childIndex = builderState[messageId].children.findIndex(\n    (obj) => obj.id == childId\n  );\n\n  //Card Navigation functions\n  const handleNextButton = (id) => {\n    const cards = builderState[messageId].children[childIndex].cards;\n    const length = cards.length - 1;\n    const activeCardIndex = getActiveCardIndex(cards);\n\n    if (activeCardIndex == length) {\n      makeCardActive(activeCardIndex + 1, activeCardIndex, length + 2, true);\n    } else {\n      makeCardActive(activeCardIndex + 1, activeCardIndex);\n    }\n  };\n\n  const handlePreviousButton = () => {\n    const cards = builderState[messageId].children[childIndex].cards;\n    const activeCardIndex = getActiveCardIndex(cards);\n    if (activeCardIndex != 0) {\n      makeCardActive(activeCardIndex - 1, activeCardIndex);\n    }\n  };\n\n  const makeCardActive = (\n    cardIndex,\n    activeCardIndex,\n    length = 0,\n    addNew = false\n  ) => {\n    if (addNew) {\n      setBuilderState([\n        ...builderState,\n        (builderState[messageId].children[childIndex].cards[\n          activeCardIndex\n        ].active = false),\n        builderState[messageId].children[childIndex].cards.push({\n          id: uuidv4(),\n          active: true,\n          selectedImage: null,\n          imagePreviewUrl: '',\n          heading: 'Subtitle #' + length,\n          body: 'This is body paragraph',\n          height: 290,\n        }),\n      ]);\n    } else {\n      setBuilderState([\n        ...builderState,\n        (builderState[messageId].children[childIndex].cards[\n          cardIndex\n        ].active = true),\n        (builderState[messageId].children[childIndex].cards[\n          activeCardIndex\n        ].active = false),\n      ]);\n    }\n  };\n\n  const getActiveCardIndex = (cards) => {\n    return cards.findIndex((obj) => obj.active == true);\n  };\n\n  const getCardIndex = (id) => {\n    return builderState[messageId].children[childIndex].cards.findIndex(\n      (obj) => obj.id === id\n    );\n  };\n\n  const isLastCard = () => {\n    const cards = builderState[messageId].children[childIndex].cards;\n    const length = cards.length - 1;\n    const activeCardIndex = getActiveCardIndex(cards);\n    return activeCardIndex == length;\n  };\n\n  //Form input submit methods\n  const onUploadImage = (data, id) => {\n    let cardIndex = getCardIndex(id);\n\n    let reader = new FileReader();\n\n    reader.onloadend = () => {\n      var height = cardRef.current.scrollHeight;\n      var updatedCard = {\n        ...builderState[messageId].children[childIndex].cards[cardIndex],\n        selectedImage: data.image[0],\n        imagePreviewUrl: reader.result,\n        height,\n      };\n\n      setBuilderState([\n        ...builderState,\n        (builderState[messageId].children[childIndex].cards[\n          cardIndex\n        ] = updatedCard),\n      ]);\n    };\n\n    reader.readAsDataURL(data.image[0]);\n  };\n\n  const onHeadingChange = (data, id) => {\n    let cardIndex = getCardIndex(id);\n    var height = cardRef.current.scrollHeight;\n    var updatedCard = {\n      ...builderState[messageId].children[childIndex].cards[cardIndex],\n      heading: data.heading,\n      height,\n    };\n    setBuilderState([\n      ...builderState,\n      (builderState[messageId].children[childIndex].cards[\n        cardIndex\n      ] = updatedCard),\n    ]);\n  };\n\n  const onParagraphChange = (data, id) => {\n    let cardIndex = getCardIndex(id);\n    var height = cardRef.current.scrollHeight;\n    var updatedCard = {\n      ...builderState[messageId].children[childIndex].cards[cardIndex],\n      body: data.body,\n      height,\n    };\n    setBuilderState([\n      ...builderState,\n      (builderState[messageId].children[childIndex].cards[\n        cardIndex\n      ] = updatedCard),\n    ]);\n  };\n\n  const handleDelete = () => {\n    setBuilderState([\n      ...builderState,\n      builderState[messageId].height -= 250,\n      builderState[messageId].children.splice(childIndex, 1),\n    ]);\n  };\n  //UseEffects\n  useEffect(() => {\n    if (headingRef.current) {\n      register(headingRef.current);\n      headingRef.current.focus();\n    }\n  }, [isChangingHeading]);\n\n  useEffect(() => {\n    if (paragraphRef.current) {\n      register(paragraphRef.current);\n      paragraphRef.current.focus();\n    }\n  }, [isChangingBody]);\n\n  return (\n    <CardSlider>\n      <div className=\"navigation_btn previous\" onClick={handlePreviousButton}>\n        <BiChevronLeft />\n      </div>\n      <div className=\"navigation_btn next\" onClick={handleNextButton}>\n        {isLastCard() ? <BiPlus /> : <BiChevronRight />}\n      </div>\n      <button className=\"action-btn\" onClick={handleDelete}>\n        <BiTrash />\n      </button>\n      {builderState[messageId].children[childIndex].cards.map((card) => {\n        if (card.active) {\n          return (\n            <CardWrapper ref={cardRef}>\n              <div className=\"card-image\">\n                <ImageWrapper>\n                  {card.imagePreviewUrl ? (\n                    <div>\n                      <img src={card.imagePreviewUrl} alt=\"card-image\" />\n                    </div>\n                  ) : (\n                    <form\n                      onChange={handleSubmit((data) =>\n                        onUploadImage(data, card.id)\n                      )}>\n                      <input\n                        ref={register}\n                        type=\"file\"\n                        id={'card_image' + getCardIndex(card.id)}\n                        name=\"image\"\n                        accept=\"image/*\"\n                      />\n                      <label htmlFor={'card_image' + getCardIndex(card.id)}>\n                        <BiImageAdd />\n                        <p>Upload image</p>\n                      </label>\n                    </form>\n                  )}\n                </ImageWrapper>\n              </div>\n              <div className=\"card-text\">\n                <div\n                  className={\n                    isChangingHeading ? 'card-heading active' : 'card-heading'\n                  }>\n                  <form\n                    onBlur={handleSubmit((data) =>\n                      onHeadingChange(data, card.id)\n                    )}>\n                    <Textarea\n                      className=\"card-title\"\n                      ref={headingRef}\n                      maxLength={27}\n                      id=\"heading\"\n                      name=\"heading\"\n                      defaultValue={card.heading}\n                      onBlur={() => setIsChangingHeading(false)}\n                      onClick={() => {\n                        setIsChangingBody(false);\n                        setIsChangingHeading(true);\n                      }}\n                    />\n                  </form>\n                </div>\n                <div\n                  className={isChangingBody ? 'card-body active' : 'card-body'}>\n                  <form\n                    onBlur={handleSubmit((data) =>\n                      onParagraphChange(data, card.id)\n                    )}>\n                    <Textarea\n                      className=\"card-paragraph\"\n                      maxLength={200}\n                      placeholder=\"Enter your text here\"\n                      onBlur={() => setIsChangingBody(false)}\n                      defaultValue={card.body}\n                      id=\"body\"\n                      name=\"body\"\n                      ref={paragraphRef}\n                      onClick={() => {\n                        setIsChangingHeading(false);\n                        setIsChangingBody(true);\n                      }}\n                    />\n                  </form>\n                </div>\n              </div>\n            </CardWrapper>\n          );\n        }\n      })}\n    </CardSlider>\n  );\n};\n\nexport default FormCard;\n",["125","126"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Toolbar/index.tsx",["127","128","129","130"],"import React, { useContext, useState, useRef, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { ToolbarWrapper, ToolbarMenu, ToolbarButtonGroup } from './styles';\nimport { ToolbarHeading, VerticalGap } from '../../../common/typography';\nimport { ToolbarButton } from '../../../common/buttons';\nimport { BuilderContext } from '../../../../services/Builder/BuilderProvider';\nimport { v4 as uuidv4 } from 'uuid';\nimport FormImage from '../Form/Image/index';\nimport FormText from '../Form/Text/index';\nimport FormCard from '../Form/Card/index';\nimport { InputField } from '../../../common/form';\nimport Textarea from 'react-expanding-textarea';\n\nconst Toolbar = ({ id, hideToolbar }) => {\n  const [builderState, setBuilderState] = useContext(BuilderContext);\n  const [isChangingTitle, setIsChangingTitle] = useState(false);\n  const { register, handleSubmit } = useForm({ mode: 'onChange' });\n\n  const titleRef = useRef<HTMLInputElement>(null);\n\n  //Find index of specific object using findIndex method.\n  const objIndex = builderState.findIndex((obj) => obj.id == id);\n\n  const onChangeTitle = (data) => {\n    setBuilderState([\n      ...builderState,\n      (builderState[objIndex].name = data.title),\n    ]);\n  };\n\n  //UseEffects\n  useEffect(() => {\n    if (titleRef.current) {\n      register(titleRef.current);\n      titleRef.current.focus();\n    }\n  }, [isChangingTitle]);\n\n  return (\n    <ToolbarWrapper>\n      <ToolbarMenu>\n        <div className={isChangingTitle ? 'header active' : 'header'}>\n          <form onBlur={handleSubmit(onChangeTitle)}>\n            <Textarea\n              maxLength={35}\n              className=\"heading-input\"\n              ref={titleRef}\n              id=\"title\"\n              name=\"title\"\n              defaultValue={builderState[objIndex].name}\n              onBlur={() => setIsChangingTitle(false)}\n            />\n          </form>\n        </div>\n        {builderState[objIndex].children.length > 0 ? (\n          builderState[objIndex].children.map((child) => {\n            return (\n              <React.Fragment>\n                <VerticalGap size=\"3\" />\n                {getChildren(child, objIndex)}\n              </React.Fragment>\n            );\n          })\n        ) : (\n          <React.Fragment>\n            <VerticalGap size=\"3\" />\n            <p className=\"no-content-text\">No content</p>\n          </React.Fragment>\n        )}\n        <VerticalGap size=\"3\" />\n        <ToolbarButtons index={objIndex} />\n      </ToolbarMenu>\n    </ToolbarWrapper>\n  );\n};\n\nexport default Toolbar;\n\nconst ToolbarButtons = ({ index }) => {\n  const [builderState, setBuilderState] = useContext(BuilderContext);\n\n  const addText = () => {\n    let height = builderState[index].height;\n    height = height + 30;\n    setBuilderState([\n      ...builderState,\n      (builderState[index].height = height),\n      builderState[index].children.push({\n        id: uuidv4(),\n        type: 'text',\n        value: 'Change text',\n        height: 30,\n      }),\n    ]);\n  };\n\n  const addCard = () => {\n    let height = builderState[index].height;\n    height = height + 150;\n\n    setBuilderState([\n      ...builderState,\n      (builderState[index].height = height),\n      builderState[index].children.push({\n        id: uuidv4(),\n        type: 'card',\n        cards: [\n          {\n            id: uuidv4(),\n            active: true,\n            selectedImage: null,\n            imagePreviewUrl: '',\n            heading: 'subtitle #11',\n            body: 'This is the body paragraph',\n            height: 250,\n          },\n        ],\n      }),\n    ]);\n  };\n\n  const addImage = () => {\n    let height = builderState[index].height;\n    height = height + 150;\n\n    setBuilderState([\n      ...builderState,\n      (builderState[index].height = height),\n      builderState[index].children.push({\n        id: uuidv4(),\n        type: 'image',\n        height: 150,\n        imagePreviewUrl: '',\n        selectedImage: null,\n      }),\n    ]);\n  };\n\n  return (\n    <React.Fragment>\n      <ToolbarButtonGroup>\n        <ToolbarButton\n          height=\"6rem\"\n          width=\"6rem\"\n          fontSize=\"1.2rem\"\n          onClick={addText}>\n          + Text\n        </ToolbarButton>\n        <ToolbarButton\n          height=\"6rem\"\n          width=\"6rem\"\n          fontSize=\"1.2rem\"\n          onClick={addCard}>\n          + Card\n        </ToolbarButton>\n        <ToolbarButton\n          height=\"6rem\"\n          width=\"6rem\"\n          fontSize=\"1.2rem\"\n          onClick={addImage}>\n          + Image\n        </ToolbarButton>\n        <ToolbarButton height=\"4rem\" width=\"25rem\">\n          Next Button\n        </ToolbarButton>\n      </ToolbarButtonGroup>\n    </React.Fragment>\n  );\n};\n\nconst getChildren = (children, messageId) => {\n  if (children.type === 'text') {\n    return <FormText messageId={messageId} childId={children.id} />;\n  } else if (children.type === 'image') {\n    return <FormImage messageId={messageId} childId={children.id} />;\n  } else if (children.type === 'card') {\n    return <FormCard messageId={messageId} childId={children.id} />;\n  }\n};\n",["131","132"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Card/styles.ts",[],["133","134"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Image/index.tsx",["135","136","137"],"import React, { useEffect, useRef, useContext } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { ImageWrapper } from './styles';\nimport { BuilderContext } from '../../../../../services/Builder/BuilderProvider';\nimport { AddTextButton } from '../../../../common/buttons';\nimport { BiImageAdd, BiTrash } from 'react-icons/bi';\n\n\nconst FormImage = ({ messageId, childId }) => {\n  const [builderState, setBuilderState] = useContext(BuilderContext);\n  const { register, handleSubmit } = useForm({ mode: 'onChange' });\n\n  const imageRef = useRef<HTMLInputElement>(null);\n\n  //Find index of specific object using findIndex method.\n  const childIndex = builderState[messageId].children.findIndex(\n    (obj) => obj.id == childId\n  );\n  \n  const image = builderState[messageId].children[childIndex];\n\n  const onSubmit = (data) => {  \n    let reader = new FileReader();\n\n    reader.onloadend = () => {\n      var height = 180\n      var updatedChildren = { ...builderState[messageId].children[childIndex], selectedImage: data.image[0], imagePreviewUrl: reader.result, height }  \n      \n      setBuilderState([\n        ...builderState,\n        builderState[messageId].children[childIndex] = updatedChildren\n      ]);\n    };\n\n    reader.readAsDataURL(data.image[0]);\n  };\n\n  const handleDelete = () => {\n    \n    setBuilderState([\n      ...builderState,\n      builderState[messageId].height -= 150,\n      builderState[messageId].children.splice(childIndex, 1),\n    ]);\n  };\n\n  useEffect(() => {\n    if (imageRef.current) {\n      register(imageRef.current);\n    }\n  });\n\n  return (\n    <ImageWrapper>\n      {image.imagePreviewUrl ? (\n        <div>\n          <img src={image.imagePreviewUrl} alt=\"image\"/>\n          {/* <AddTextButton height=\"4rem\" width=\"100%\">\n            Add Button\n          </AddTextButton> */}\n        </div>\n      ) : (\n        <form onChange={handleSubmit(onSubmit)}>\n          <input\n            ref={imageRef}\n            type=\"file\"\n              id={\"file\"+ childIndex}\n            name=\"image\"\n            accept=\"image/*\"\n          />\n            <label htmlFor={\"file\" + childIndex}>\n            <BiImageAdd />\n            <p>Upload image</p>\n          </label>\n        </form>\n      )}\n      <button className=\"action-btn\">\n        <BiTrash onClick={handleDelete} />\n      </button>\n    </ImageWrapper>\n  );\n};\n\nexport default FormImage;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Flows/helper.tsx",["138"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Image/styles.ts",[],["139","140"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Toolbar/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Text/index.tsx",["141","142","143"],"import React, { useEffect, useState, useRef, useContext } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { BuilderContext } from '../../../../../services/Builder/BuilderProvider';\nimport { AddTextWrapper } from './styles';\nimport { AddTextButton } from '../../../../common/buttons';\nimport { BiTrash } from 'react-icons/bi';\nimport Textarea from 'react-expanding-textarea';\n\nconst FormText = ({ messageId, childId }) => {\n  const [builderState, setBuilderState] = useContext(BuilderContext);\n  const { register, handleSubmit } = useForm({ mode: 'onChange' });\n  const [isChangingBody, setIsChangingBody] = useState(false);\n\n  const textAreaRef = useRef<HTMLTextAreaElement>(null);\n\n  //Find index of specific object using findIndex method.\n  const childIndex = builderState[messageId].children.findIndex(\n    (obj) => obj.id == childId\n  );\n\n  const onTextChange = (data) => {\n    var height = textAreaRef.current.scrollHeight;\n\n    var updatedCard = {\n      ...builderState[messageId].children[childIndex],\n      value: data.text, height\n    };\n    setBuilderState([\n      ...builderState,\n      (builderState[messageId].children[childIndex] = updatedCard),\n    ]);\n  };\n\n  const handleDelete = () => {\n    var height = builderState[messageId].height - textAreaRef.current.scrollHeight;\n\n    setBuilderState([\n      ...builderState, builderState[messageId].height = height,\n      builderState[messageId].children.splice(childIndex, 1),\n    ]);\n  };\n\n  useEffect(() => {\n    if (textAreaRef.current) {\n      register(textAreaRef.current);\n      textAreaRef.current.focus();\n    }\n  }, [isChangingBody]);\n\n  return (\n    <AddTextWrapper>\n       <button className=\"action-btn\">\n        <BiTrash onClick={handleDelete} />\n      </button>\n      <div className={isChangingBody ? 'card-body active' : 'card-body'}>\n        <form onBlur={handleSubmit(onTextChange)}>\n          <Textarea\n            maxLength={500}\n            placeholder=\"Enter your text here\"\n            onBlur={() => setIsChangingBody(false)}\n            defaultValue={builderState[messageId].children[childIndex].value}\n            id=\"text\"\n            name=\"text\"\n            ref={textAreaRef}\n            onClick={() => setIsChangingBody(true)}\n          />\n        </form>\n      </div>\n\n      {/* <AddTextButton height=\"4rem\" width=\"100%\">\n        Add Button\n      </AddTextButton> */}\n    </AddTextWrapper>\n  );\n};\n\nexport default FormText;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/index.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Auth/AuthProvider.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/LandingPage.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/auth/ForgotPasswordPage.tsx",["144"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Dashboard/index.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Bots/index.tsx",["145","146","147","148","149","150"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/bots.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/layout/AuthLayout.tsx",["151"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Builder/BuilderProvider.tsx",["152","153"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/constants/urls.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/header/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/footer/index.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/Pagination/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/info/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Sidebar/index.tsx",["154","155","156"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Sidebar/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Text/styles.ts",[],{"ruleId":null,"fatal":true,"severity":2,"message":"157","line":70,"column":50},{"ruleId":"158","severity":1,"message":"159","line":5,"column":10,"nodeType":"160","messageId":"161","endLine":5,"endColumn":23},{"ruleId":"162","severity":1,"message":"163","line":29,"column":21,"nodeType":"164","messageId":"165","endLine":29,"endColumn":23},{"ruleId":"162","severity":1,"message":"163","line":38,"column":25,"nodeType":"164","messageId":"165","endLine":38,"endColumn":27},{"ruleId":"162","severity":1,"message":"166","line":48,"column":25,"nodeType":"164","messageId":"165","endLine":48,"endColumn":27},{"ruleId":"162","severity":1,"message":"163","line":89,"column":48,"nodeType":"164","messageId":"165","endLine":89,"endColumn":50},{"ruleId":"162","severity":1,"message":"163","line":102,"column":28,"nodeType":"164","messageId":"165","endLine":102,"endColumn":30},{"ruleId":"167","severity":1,"message":"168","line":176,"column":6,"nodeType":"169","endLine":176,"endColumn":25,"suggestions":"170"},{"ruleId":"167","severity":1,"message":"168","line":183,"column":6,"nodeType":"169","endLine":183,"endColumn":22,"suggestions":"171"},{"ruleId":"172","severity":1,"message":"173","line":196,"column":70,"nodeType":"174","messageId":"175","endLine":196,"endColumn":72},{"ruleId":"176","severity":1,"message":"177","line":204,"column":23,"nodeType":"178","endLine":204,"endColumn":74},{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","replacedBy":"182"},{"ruleId":"158","severity":1,"message":"183","line":4,"column":10,"nodeType":"160","messageId":"161","endLine":4,"endColumn":24},{"ruleId":"158","severity":1,"message":"184","line":11,"column":10,"nodeType":"160","messageId":"161","endLine":11,"endColumn":20},{"ruleId":"162","severity":1,"message":"163","line":22,"column":59,"nodeType":"164","messageId":"165","endLine":22,"endColumn":61},{"ruleId":"167","severity":1,"message":"168","line":37,"column":6,"nodeType":"169","endLine":37,"endColumn":23,"suggestions":"185"},{"ruleId":"179","replacedBy":"186"},{"ruleId":"181","replacedBy":"187"},{"ruleId":"179","replacedBy":"188"},{"ruleId":"181","replacedBy":"189"},{"ruleId":"158","severity":1,"message":"159","line":5,"column":10,"nodeType":"160","messageId":"161","endLine":5,"endColumn":23},{"ruleId":"162","severity":1,"message":"163","line":17,"column":21,"nodeType":"164","messageId":"165","endLine":17,"endColumn":23},{"ruleId":"176","severity":1,"message":"177","line":57,"column":11,"nodeType":"178","endLine":57,"endColumn":57},{"ruleId":"162","severity":1,"message":"163","line":222,"column":56,"nodeType":"164","messageId":"165","endLine":222,"endColumn":58},{"ruleId":"179","replacedBy":"190"},{"ruleId":"181","replacedBy":"191"},{"ruleId":"158","severity":1,"message":"159","line":5,"column":10,"nodeType":"160","messageId":"161","endLine":5,"endColumn":23},{"ruleId":"162","severity":1,"message":"163","line":18,"column":21,"nodeType":"164","messageId":"165","endLine":18,"endColumn":23},{"ruleId":"167","severity":1,"message":"168","line":48,"column":6,"nodeType":"169","endLine":48,"endColumn":22,"suggestions":"192"},{"ruleId":"158","severity":1,"message":"193","line":5,"column":22,"nodeType":"160","messageId":"161","endLine":5,"endColumn":30},{"ruleId":"158","severity":1,"message":"194","line":2,"column":8,"nodeType":"160","messageId":"161","endLine":2,"endColumn":17},{"ruleId":"158","severity":1,"message":"195","line":7,"column":8,"nodeType":"160","messageId":"161","endLine":7,"endColumn":13},{"ruleId":"158","severity":1,"message":"196","line":24,"column":10,"nodeType":"160","messageId":"161","endLine":24,"endColumn":19},{"ruleId":"197","severity":1,"message":"198","line":108,"column":23,"nodeType":"178","endLine":112,"endColumn":28},{"ruleId":"197","severity":1,"message":"198","line":115,"column":23,"nodeType":"178","endLine":115,"endColumn":35},{"ruleId":"197","severity":1,"message":"198","line":116,"column":23,"nodeType":"178","endLine":120,"endColumn":28},{"ruleId":"158","severity":1,"message":"199","line":5,"column":10,"nodeType":"160","messageId":"161","endLine":5,"endColumn":20},{"ruleId":"158","severity":1,"message":"200","line":2,"column":10,"nodeType":"160","messageId":"161","endLine":2,"endColumn":23},{"ruleId":"158","severity":1,"message":"201","line":3,"column":16,"nodeType":"160","messageId":"161","endLine":3,"endColumn":22},{"ruleId":"158","severity":1,"message":"202","line":1,"column":36,"nodeType":"160","messageId":"161","endLine":1,"endColumn":39},{"ruleId":"167","severity":1,"message":"203","line":41,"column":6,"nodeType":"169","endLine":41,"endColumn":14,"suggestions":"204"},{"ruleId":"205","severity":1,"message":"206","line":62,"column":13,"nodeType":"178","endLine":62,"endColumn":45},"Parsing error: ',' expected.","@typescript-eslint/no-unused-vars","'AddTextButton' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'register'. Either include it or remove the dependency array.","ArrayExpression",["207"],["208"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-native-reassign",["209"],"no-negated-in-lhs",["210"],"'ToolbarHeading' is defined but never used.","'InputField' is defined but never used.",["211"],["209"],["210"],["209"],["210"],["209"],["210"],["212"],"'FormLink' is defined but never used.","'AppLayout' is defined but never used.","'Table' is defined but never used.","'isLoading' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'AuthButton' is defined but never used.","'FlowStateType' is defined but never used.","'uuidv4' is defined but never used.","'Ref' is defined but never used.","React Hook useEffect has a missing dependency: 'handleSidebarState'. Either include it or remove the dependency array. If 'handleSidebarState' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["213"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.",{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},"no-global-assign","no-unsafe-negation",{"desc":"218","fix":"219"},{"desc":"216","fix":"220"},{"desc":"221","fix":"222"},"Update the dependencies array to be: [isChangingHeading, register]",{"range":"223","text":"224"},"Update the dependencies array to be: [isChangingBody, register]",{"range":"225","text":"226"},"Update the dependencies array to be: [isChangingTitle, register]",{"range":"227","text":"228"},{"range":"229","text":"226"},"Update the dependencies array to be: [handleSidebarState, isOpen]",{"range":"230","text":"231"},[5124,5143],"[isChangingHeading, register]",[5284,5300],"[isChangingBody, register]",[1379,1396],"[isChangingTitle, register]",[1602,1618],[1369,1377],"[handleSidebarState, isOpen]"]