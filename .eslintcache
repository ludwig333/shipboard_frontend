[{"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Toolbar/index.tsx":"1","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Text/index.tsx":"2","/home/rabinson/Freelancing/ShipboardBot/frontend/src/styles/global.ts":"3","/home/rabinson/Freelancing/ShipboardBot/frontend/src/App.tsx":"4","/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Auth/reducer.ts":"5","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/LandingPage.tsx":"6","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/error/404.tsx":"7","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/auth/ForgotPasswordPage.tsx":"8","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Templates/index.tsx":"9","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Settings/index.tsx":"10","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Bots/index.tsx":"11","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/typography.ts":"12","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/buttons.ts":"13","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/Dropdown/styles.ts":"14","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/header/index.tsx":"15","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/Pagination/index.tsx":"16","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Flows/CreateModal.tsx":"17","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/EditModal.tsx":"18","/home/rabinson/Freelancing/ShipboardBot/frontend/src/utils/request.ts":"19","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/info/index.tsx":"20","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/feature/index.tsx":"21","/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/texts.ts":"22","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Card/index.tsx":"23","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Flows/builder.tsx":"24","/home/rabinson/Freelancing/ShipboardBot/frontend/src/styles/theme.ts":"25","/home/rabinson/Freelancing/ShipboardBot/frontend/src/styles/mediaQueries.ts":"26","/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Auth/JWTValidator.ts":"27","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/auth/LoginPage.tsx":"28","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Dashboard/index.tsx":"29","/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/auth.ts":"30","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/form.ts":"31","/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/bots.ts":"32","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Flows/styles.ts":"33","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Flows/DeleteModal.tsx":"34","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Flows/EditModal.tsx":"35","/home/rabinson/Freelancing/ShipboardBot/frontend/src/constants/urls.ts":"36","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/Pagination/styles.ts":"37","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/footer/styles.ts":"38","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Sidebar/index.tsx":"39","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Image/index.tsx":"40","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Flows/index.tsx":"41","/home/rabinson/Freelancing/ShipboardBot/frontend/src/index.tsx":"42","/home/rabinson/Freelancing/ShipboardBot/frontend/src/routes/ProtectedRoute.tsx":"43","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/table.ts":"44","/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/messages.ts":"45","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/CreateModal.tsx":"46","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/header/styles.ts":"47","/home/rabinson/Freelancing/ShipboardBot/frontend/src/utils/pagination.ts":"48","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/info/styles.ts":"49","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Image/styles.ts":"50","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Sidebar/styles.ts":"51","/home/rabinson/Freelancing/ShipboardBot/frontend/src/utils/storage.ts":"52","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/grid.ts":"53","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/layout/AuthLayout.tsx":"54","/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Builder/BuilderProvider.tsx":"55","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/footer/index.tsx":"56","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/navbar/index.tsx":"57","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Text/styles.ts":"58","/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/images.ts":"59","/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Auth/AuthProvider.tsx":"60","/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/flows.ts":"61","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/feature/styles.ts":"62","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/DeleteModal.tsx":"63","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Toolbar/styles.ts":"64","/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Modal/ModalProvider.tsx":"65","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Flows/helper.tsx":"66","/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/cards.ts":"67","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Card/styles.ts":"68","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/auth/RegisterPage.tsx":"69","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/layout/AppLayout.tsx":"70","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/navbar/styles.ts":"71"},{"size":6115,"mtime":1612149634527,"results":"72","hashOfConfig":"73"},{"size":3015,"mtime":1612235798178,"results":"74","hashOfConfig":"73"},{"size":1061,"mtime":1610853751719,"results":"75","hashOfConfig":"73"},{"size":2168,"mtime":1611544707887,"results":"76","hashOfConfig":"73"},{"size":442,"mtime":1607166058000,"results":"77","hashOfConfig":"73"},{"size":395,"mtime":1606572185322,"results":"78","hashOfConfig":"73"},{"size":467,"mtime":1608091184084,"results":"79","hashOfConfig":"73"},{"size":2699,"mtime":1607850305009,"results":"80","hashOfConfig":"73"},{"size":210,"mtime":1610158645219,"results":"81","hashOfConfig":"73"},{"size":218,"mtime":1607998072129,"results":"82","hashOfConfig":"73"},{"size":5089,"mtime":1611759944525,"results":"83","hashOfConfig":"73"},{"size":1320,"mtime":1609667047505,"results":"84","hashOfConfig":"73"},{"size":2213,"mtime":1611420752275,"results":"85","hashOfConfig":"73"},{"size":603,"mtime":1611407912500,"results":"86","hashOfConfig":"73"},{"size":962,"mtime":1607398449634,"results":"87","hashOfConfig":"73"},{"size":1583,"mtime":1611403993930,"results":"88","hashOfConfig":"73"},{"size":2347,"mtime":1611495697651,"results":"89","hashOfConfig":"73"},{"size":2326,"mtime":1611505989860,"results":"90","hashOfConfig":"73"},{"size":494,"mtime":1607840291044,"results":"91","hashOfConfig":"73"},{"size":1029,"mtime":1607690783508,"results":"92","hashOfConfig":"73"},{"size":2469,"mtime":1607354234054,"results":"93","hashOfConfig":"73"},{"size":670,"mtime":1611717938172,"results":"94","hashOfConfig":"73"},{"size":10853,"mtime":1612152852426,"results":"95","hashOfConfig":"73"},{"size":13439,"mtime":1611719307803,"results":"96","hashOfConfig":"73"},{"size":300,"mtime":1606619841444,"results":"97","hashOfConfig":"73"},{"size":437,"mtime":1607357171179,"results":"98","hashOfConfig":"73"},{"size":299,"mtime":1607173241742,"results":"99","hashOfConfig":"73"},{"size":3083,"mtime":1608089518101,"results":"100","hashOfConfig":"73"},{"size":159,"mtime":1607998049825,"results":"101","hashOfConfig":"73"},{"size":1159,"mtime":1607840479831,"results":"102","hashOfConfig":"73"},{"size":945,"mtime":1608217208422,"results":"103","hashOfConfig":"73"},{"size":939,"mtime":1611505690538,"results":"104","hashOfConfig":"73"},{"size":517,"mtime":1611398726250,"results":"105","hashOfConfig":"73"},{"size":1488,"mtime":1611506630557,"results":"106","hashOfConfig":"73"},{"size":2316,"mtime":1611505901411,"results":"107","hashOfConfig":"73"},{"size":605,"mtime":1612149634527,"results":"108","hashOfConfig":"73"},{"size":686,"mtime":1607915643490,"results":"109","hashOfConfig":"73"},{"size":758,"mtime":1607358268935,"results":"110","hashOfConfig":"73"},{"size":3408,"mtime":1611544828468,"results":"111","hashOfConfig":"73"},{"size":3108,"mtime":1612015722469,"results":"112","hashOfConfig":"73"},{"size":4949,"mtime":1611759959539,"results":"113","hashOfConfig":"73"},{"size":515,"mtime":1607764359769,"results":"114","hashOfConfig":"73"},{"size":944,"mtime":1611287624293,"results":"115","hashOfConfig":"73"},{"size":1454,"mtime":1611403637931,"results":"116","hashOfConfig":"73"},{"size":853,"mtime":1611673406318,"results":"117","hashOfConfig":"73"},{"size":2305,"mtime":1611506040626,"results":"118","hashOfConfig":"73"},{"size":2194,"mtime":1607358477789,"results":"119","hashOfConfig":"73"},{"size":570,"mtime":1607912715680,"results":"120","hashOfConfig":"73"},{"size":1251,"mtime":1607358308147,"results":"121","hashOfConfig":"73"},{"size":1664,"mtime":1610076394115,"results":"122","hashOfConfig":"73"},{"size":2446,"mtime":1608360773902,"results":"123","hashOfConfig":"73"},{"size":330,"mtime":1606965896953,"results":"124","hashOfConfig":"73"},{"size":2167,"mtime":1611545543628,"results":"125","hashOfConfig":"73"},{"size":3062,"mtime":1607357777066,"results":"126","hashOfConfig":"73"},{"size":1239,"mtime":1611592415760,"results":"127","hashOfConfig":"73"},{"size":795,"mtime":1607276608868,"results":"128","hashOfConfig":"73"},{"size":717,"mtime":1607357496043,"results":"129","hashOfConfig":"73"},{"size":1065,"mtime":1610160837489,"results":"130","hashOfConfig":"73"},{"size":765,"mtime":1611888511608,"results":"131","hashOfConfig":"73"},{"size":1534,"mtime":1607842467004,"results":"132","hashOfConfig":"73"},{"size":972,"mtime":1611504300151,"results":"133","hashOfConfig":"73"},{"size":707,"mtime":1606842094420,"results":"134","hashOfConfig":"73"},{"size":1475,"mtime":1611506512498,"results":"135","hashOfConfig":"73"},{"size":1746,"mtime":1610853991933,"results":"136","hashOfConfig":"73"},{"size":3565,"mtime":1608961298239,"results":"137","hashOfConfig":"73"},{"size":6734,"mtime":1611635184103,"results":"138","hashOfConfig":"73"},{"size":1341,"mtime":1612151626524,"results":"139","hashOfConfig":"73"},{"size":2734,"mtime":1610160143779,"results":"140","hashOfConfig":"73"},{"size":4457,"mtime":1607849994798,"results":"141","hashOfConfig":"73"},{"size":1207,"mtime":1611403304542,"results":"142","hashOfConfig":"73"},{"size":596,"mtime":1607358244451,"results":"143","hashOfConfig":"73"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"v8ty68",{"filePath":"146","messages":"147","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"154"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"160"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"157"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"163"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"163"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"163"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"182"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"150"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"182"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"150"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"157"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"150"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"150"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"150"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"150"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"150"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"160"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"247","messages":"248","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"150"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"182"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"150"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"283"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"163"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"305","messages":"306","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"182"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Toolbar/index.tsx",["318","319","320","321","322","323","324","325"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Text/index.tsx",["326","327","328","329","330","331","332"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/styles/global.ts",[],["333","334"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/App.tsx",["335","336"],"import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport LandingPage from './pages/LandingPage';\nimport GlobalStyle from './styles/global';\nimport RegisterPage from './pages/auth/RegisterPage';\nimport LoginPage from './pages/auth/LoginPage';\nimport ForgotPassworPage from './pages/auth/ForgotPasswordPage';\nimport { ProtectedRoute } from './routes/ProtectedRoute';\nimport Dashboard from './pages/main/Dashboard/index';\nimport NotFound from './pages/error/404';\nimport { useAuthContext } from './services/Auth/AuthProvider';\nimport Bots from './pages/main/Bots/index';\nimport Flows from './pages/main/Flows/index';\nimport FlowBuilder from './pages/main/Flows/builder';\nimport Templates from './pages/main/Templates/index';\nimport Settings from './pages/main/Settings/index';\nimport ModalProvider from './services/Modal/ModalProvider';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport AppLayout from './components/layout/AppLayout';\n\nconst App: React.FC = () => {\n  const authContext = useAuthContext();\n  return (\n    <ModalProvider>\n      <BrowserRouter>\n        <GlobalStyle />\n        <>\n          <ToastContainer />\n          <Switch>\n            <Route exact path=\"/\" component={LandingPage} />\n            <Route exact path=\"/register\" component={RegisterPage} />\n            <Route exact path=\"/login\" component={LoginPage} />\n            <Route\n              exact\n              path=\"/forgot-password\"\n              component={ForgotPassworPage}\n            />\n            <ProtectedRoute exact path=\"/app\" component={Dashboard} />\n            <ProtectedRoute exact path=\"/bots\" component={Bots} />\n            <ProtectedRoute exact path=\"/bot/:id\" component={Flows} />\n            <ProtectedRoute exact path=\"/bot/flow/:id\" component={ FlowBuilder } />\n            <ProtectedRoute exact path=\"/templates\" component={Templates} />\n            <ProtectedRoute exact path=\"/settings\" component={Settings} />\n            <Route path=\"*\" component={NotFound} />\n          </Switch>\n        </>\n      </BrowserRouter>\n    </ModalProvider>\n  );\n};\n\nexport default App;\n",["337","338"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Auth/reducer.ts",[],["339","340"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/LandingPage.tsx",[],["341","342"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/error/404.tsx",[],["343","344"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/auth/ForgotPasswordPage.tsx",["345"],"import React, { useState, useEffect, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport AuthLayout from '../../components/layout/AuthLayout';\nimport { FormHeader, FormSubHeader } from '../../components/common/typography';\nimport { InputField, FormLink } from '../../components/common/form';\nimport { FormButton } from '../../components/common/buttons';\nimport { IoArrowBack } from 'react-icons/io5';\nimport { forgotPassword } from '../../apis/auth';\n\nconst ForgotPassworPage = () => {\n  const [email, setEmail] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isEmailed, setIsEmailed] = useState(false);\n  const [errorMessage, setErrorMessage] = useState({ email: '' });\n\n  const emailRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    emailRef.current && emailRef.current.focus();\n  }, []);\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setIsLoading(true);\n\n    forgotPassword(email)\n      .then((response) => {\n        setIsEmailed(true);\n      })\n      .catch((err) => {\n        if (err.response.status === 422) {\n          setErrorMessage({\n            email: err.response.data.errors.email\n              ? err.response.data.errors.email[0]\n              : '',\n          });\n        }\n      })\n      .finally(() => {\n        setIsLoading(false);\n    })\n  };\n\n  return (\n    <AuthLayout>\n      {!isEmailed && (\n        <form onSubmit={handleSubmit}>\n          <FormHeader>Forgot password?</FormHeader>\n          <FormSubHeader>\n            No worries! We’ll send you secure email to reset your password.\n          </FormSubHeader>\n          <InputField\n            isError={!!errorMessage.email}\n            className=\"last-input\"\n            id=\"email\"\n            placeholder=\"Type your password\"\n            type=\"email\"\n            ref={emailRef}\n            onChange={(e) => {\n              setEmail(e.target.value);\n            }}\n          />\n          {errorMessage.email && (\n            <span className=\"form-error\">{errorMessage.email}</span>\n          )}\n          <FormButton type=\"submit\" disabled={isLoading}>\n            {isLoading ? 'Loading...' : 'Email me'}\n          </FormButton>\n        </form>\n      )}\n      {isEmailed && (\n        <div>\n          <FormHeader>Email is on the way!</FormHeader>\n          <FormSubHeader>\n            We will send you email with the reset password link if (\n            <strong>{email}</strong>) exists in Shipboard.\n          </FormSubHeader>\n        </div>\n      )}\n      <Link to=\"/login\" className=\"go-back\">\n        <IoArrowBack />\n        <h5>Go Back</h5>\n      </Link>\n    </AuthLayout>\n  );\n};\n\nexport default ForgotPassworPage;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Templates/index.tsx",["346"],"import React from 'react';\nimport AppLayout from '../../../components/layout/AppLayout';\n\nconst Templates = (props: any) => {\n  return <h1 className=\"main-heading\">Templates</h1>;\n};\n\nexport default Templates;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Settings/index.tsx",["347"],"import React from 'react';\nimport AppLayout from '../../../components/layout/AppLayout';\n\nconst Settings = (props:any) => {\n  return (\n      <h1 className=\"main-heading\">Settings</h1>\n  );\n};\n\nexport default Settings;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Bots/index.tsx",["348","349","350","351","352","353","354"],"import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Link, Route, Switch } from 'react-router-dom';\nimport { PrimaryButton } from '../../../components/common/buttons';\nimport { getBots } from '../../../apis/bots';\nimport Pagination from '../../../components/common/Pagination/index';\nimport { TableWrapper } from '../../../components/common/table';\nimport { DropdownWrapper } from '../../../components/common/Dropdown/styles';\nimport { HiDotsVertical } from 'react-icons/hi';\nimport { useModal } from '../../../services/Modal/ModalProvider';\nimport BotCreateModal from '../../../components/dashboard/Bots/CreateModal';\nimport BotEditModal from '../../../components/dashboard/Bots/EditModal';\nimport BotDeleteModal from '../../../components/dashboard/Bots/DeleteModal';\nimport { toast } from 'react-toastify';\n\ntype BotType = {\n  id: string;\n  name: string;\n  last_modified: string;\n};\n\nconst Bots = () => {\n  const { showModal, hideModal } = useModal();\n  const [bots, setBots] = useState<Array<BotType>>();\n  const [pageNumber, setPageNumber] = useState(1);\n  const [isLoading, setIsLoading] = useState(true);\n  const [lastPage, setLastPage] = useState(1);\n\n  const getBotsData = (pageNumber: number) => {\n    getBots(pageNumber)\n      .then((response) => {\n        setBots(response.data);\n        setPageNumber(response.meta.current_page);\n        setLastPage(response.meta.last_page);\n      })\n      .catch((err) => {\n        toast.error(\"Something went wrong\");\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  useEffect(() => {\n    getBotsData(pageNumber);\n  }, [pageNumber, lastPage]);\n\n  const handleCreateOpen = (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => {\n    showModal(() => (\n      <BotCreateModal hideModal={hideModal} handleCreateBot={ handleCreateBot}  />\n    ));\n  };\n\n  const handleEditOpen = (data: BotType) => {\n    showModal(() => (\n      <BotEditModal hideModal={hideModal} bot={data} handleEditBot={handleEditBot} />\n    ));\n  };\n\n  const handleDeleteConfirmation = (data: BotType) => {\n    showModal(() => (\n      <BotDeleteModal\n        hideModal={hideModal} bot={data} handleDeleteBot={handleDeleteBot}\n      />\n    ));\n  };\n\n  const handlePageChange = (pageNumber: number) => {\n    setPageNumber(pageNumber);\n  };\n\n  const handleCreateBot = (newBot: BotType) => { \n    const newBotList = bots.concat(newBot);\n    setBots(newBotList)\n  }\n\n  const handleEditBot = (data) => {\n    const botId = bots.findIndex(\n      (obj) => obj.id == data.id\n    );\n    setBots(bots.map((item, index) => {\n      if (index == botId) {\n        item.name = data.name\n      }\n      return item;\n    }));\n  }\n\n  const handleDeleteBot = (id) => {\n    const botId = bots.findIndex(\n      (obj) => obj.id == id\n    );\n    bots.splice(botId, 1);\n  }\n  \n\n  return (\n    <React.Fragment>\n      <div className=\"page-header\">\n      <h1 className=\"main-heading\">Bots</h1>\n        <PrimaryButton onClick={handleCreateOpen}>Add Bots</PrimaryButton>\n      </div>\n      <div className=\"container\">\n      <TableWrapper>\n        <li className=\"table-header\">\n          <div className=\"col col-1 flex-basis-50\">Name</div>\n          <div className=\"col col-2 flex-basis-20\">Channels</div>\n          <div className=\"col col-3 flex-basis-20\">Modified</div>\n          <div className=\"col col-4 flex-basis-10\">Action</div>\n        </li>\n        {bots &&\n          bots.map((data: BotType) => {\n            return (\n              <React.Fragment key={data.id}>\n                <Link to={\"bot/\" + data.id} className=\"table-row table-row-data\" >\n                <li className=\"table-row\">\n                  <div className=\"col col-1 flex-basis-50\" data-label=\"name\">{data.name}</div>\n                  <div className=\"col col-2 flex-basis-20\" data-label=\"channels\">-</div>\n                  <div className=\"col col-3 flex-basis-20\" data-label=\"last_modified\">{data.last_modified}</div>\n                  <div className=\"col col-4 flex-basis-10\" data-label=\"action\">\n                  <DropdownWrapper>\n                    <label className=\"dropbtn\">\n                      <HiDotsVertical />\n                    </label>\n                    <div className=\"dropdown-content\">\n                      <p\n                        onClick={() => {\n                          handleEditOpen(data);\n                        }}>\n                        Edit\n                      </p>\n                      <p>Configure</p>\n                      <p\n                        onClick={() => {\n                          handleDeleteConfirmation(data);\n                        }}>\n                        Delete\n                      </p>\n                    </div>\n                  </DropdownWrapper>\n                  </div>\n                </li>\n              </Link>\n              </React.Fragment>\n            );\n          })}\n      </TableWrapper>\n     </div>\n\n      <Pagination\n        activePage={pageNumber}\n        total={lastPage}\n        onChange={handlePageChange}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default Bots;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/typography.ts",["355","356"],"import styled from 'styled-components';\nimport { darkerGrey } from '../../styles/theme';\nimport { media } from '../../styles/mediaQueries';\n\nexport const PrimaryHeader = styled.h1`\n  font-family: Comic Neue, Roboto, sans-serif;\n  font-weight: 700;\n  font-size: 3.6rem;\n  color: #000;\n`;\n\nexport const FormHeader = styled(PrimaryHeader)`\n  font-size: 2.6rem;\n  text-align: center;\n`;\n\nexport const FormSubHeader = styled.h2`\n  font-family: Roboto, sans-serif;\n  font-weight: 300;\n  font-size: 1.6rem;\n  color: #000;\n  text-align: center;\n`;\n\nexport const SecondaryHeader = styled.h1`\n  font-family: Roboto, sans-serif;\n  font-weight: 500;\n  line-height: 5.6rem;\n  color: #000;\n  font-size: 2.4rem;\n`; \n\nexport const Paragraph = styled.p`\n  font-family: inherit;\n  font-size: 1.5rem;\n  color: ${(props) => props.theme.darkerGrey};\n  line-height: 2.8rem;\n`;\n\nexport const ToolbarHeading = styled.h2`\n  font-family: Roboto, sans-serif;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 1.8rem;\n  line-height: 2.1rem;\n  color: #797979;\n`;\n\nexport const VerticalGap = styled.div<{size: string}>`\n  width: auto;\n  height: ${(props) => props.size}rem;\n  display: block;\n  flex-shrink: 0;\n`;\n\nexport const HorizontalGap = styled.div<{size: string}>`\n  width: ${(props) => props.size}rem;\n  height: auto;\n  display: block;\n`;","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/buttons.ts",["357"],"import styled from 'styled-components';\nimport Toolbar from '../dashboard/builder/Toolbar/index';\n\nexport const StyledButton = styled.button`\n  display:flex;\n  align-items:center;\n  justify-content:center;\n  background: #ffffff;\n  border-radius: 12px 12px 12px 0px;\n  border: 2px solid #5850eb;\n  box-sizing: border-box;\n  cursor: pointer;\n  font-family: Comic Neue, Roboto, sans-serif;\n  font-size: 1.5rem;\n  padding:.9rem;\n  width: 10rem;\n  outline: none;\n`;\n\nexport const PrimaryButton = styled(StyledButton)`\n  background-color: #5850eb;\n  height: 2.5rem;\n  color: #ffffff;\n  margin-right: 0rem;\n  &:focus {\n    background-color: #251DCA\n  }\n`;\n\nexport const FormButton = styled(PrimaryButton)`\n  width: 100%;\n  height: 3.5rem;\n  font-size: 1.6rem;\n  font-weight: 600;\n  margin-top: 1.5rem;\n`;\n\nexport const AuthButton = styled(StyledButton)`\n  width: 20rem;\n  font-size: 1.6rem;\n`;\n\n\nexport const ToolbarButton = styled.button < { height?: string, width?: string, fontSize?: string}>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: ${props => props.height ? props.height : '2rem'};\n  width: ${props => props.width ? props.width : '2rem'};\n  border: none;\n  padding: 0;\n  background: #ffffff;\n  color: #8392AB;\n  font-family: Roboto, sans-serif;\n  font-weight: 400;\n  font-size: ${props => props.fontSize ? props.fontSize : '1.6rem'};\n  margin: .8rem;\n  cursor: pointer;\n  background-image: url(\"data:image/svg+xml,%3csvg width='100%25' height='100%25' xmlns='http://www.w3.org/2000/svg'%3e%3crect width='100%25' height='100%25' fill='none' rx='7' ry='7' stroke='%238392ABFF' stroke-width='4' stroke-dasharray='10%2c10' stroke-dashoffset='23' stroke-linecap='round'/%3e%3c/svg%3e\");\n  border-radius: 0px 0px 7px 7px;\n  &:hover {\n    background-image: url(\"data:image/svg+xml,%3csvg width='100%25' height='100%25' xmlns='http://www.w3.org/2000/svg'%3e%3crect width='100%25' height='100%25' fill='none' rx='7' ry='7' stroke='%235850EBFF' stroke-width='4' stroke-dasharray='10%2c10' stroke-dashoffset='23' stroke-linecap='round'/%3e%3c/svg%3e\");\n    color: #5850EB;\n  }\n`;\n\nexport const AddTextButton = styled(ToolbarButton)`\n  margin: 0rem;\n  margin-top: -.5rem;\n  width: 100%;\n`;\n",["358","359"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/Dropdown/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/header/index.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/Pagination/index.tsx",["360","361","362","363"],"import React, { useState, useEffect } from 'react';\nimport { PaginationItem, PaginationWrapper } from './styles';\nimport { BiChevronLeft, BiChevronRight } from 'react-icons/bi';\nimport pagination from '../../../utils/pagination';\n\ninterface PaginationPropsInteface {\n  total: number;\n  activePage: number;\n  onChange: (pageNumber: number) => void;\n}\n\nconst Pagination: React.FC<PaginationPropsInteface> = (props) => {\n  const pageBtns = pagination(props.activePage, props.total);\n\n  return (\n    <PaginationWrapper>\n      <PaginationItem>\n        <BiChevronLeft\n          onClick={() => {\n            if (props.activePage != 0) {\n              props.onChange(props.activePage - 1);\n            }\n          }}\n        />\n      </PaginationItem>\n      {pageBtns &&\n        pageBtns.map((page, index) => {\n          if (typeof page !== 'string') {\n            var isActive = page === props.activePage ? 1 : 0;\n            return (\n              <PaginationItem\n                isActive={isActive}\n                onClick={() => {\n                  props.onChange(page);\n                }}\n              key={index}>\n                {page}\n              </PaginationItem>\n            );\n          } else {\n            return <PaginationItem>...</PaginationItem>;\n          }\n        })}\n      <PaginationItem>\n        <BiChevronRight\n          onClick={() => {\n            if (props.activePage != props.total) {\n              props.onChange(props.activePage + 1);\n            }\n          }}\n        />\n      </PaginationItem>\n    </PaginationWrapper>\n  );\n};\n\nexport default Pagination;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Flows/CreateModal.tsx",["364","365"],"import React, { useState, useRef, useEffect } from 'react';\nimport { FormHeader } from '../../common/typography';\nimport { InputField } from '../../common/form';\nimport { FormButton } from '../../common/buttons';\nimport { useForm } from \"react-hook-form\";\nimport { saveFlow } from './../../../apis/flows';\nimport { toast } from 'react-toastify';\n\nconst FlowCreateModal = ({bot, hideModal, handleCreateFlow}) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const { register, handleSubmit, errors, setError } = useForm();  \n\n  const onSubmit = data => {\n    setIsLoading(true);\n    saveFlow({ name: data.name, bot: bot })\n      .then((response) => {\n        hideModal();\n        toast.success(response.message);\n        handleCreateFlow(response.data)\n      }).catch((err) => { \n        if (err.response.status === 422) {\n          if (err.response.data.errors.name) {\n            setError('name', {\n              type: 'server',\n              message: err.response.data.errors.name[0]\n            })\n          } \n        } else {\n          toast.error('Something went wrong')\n        }\n      }).finally(() => { \n        setIsLoading(false);\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"modal-body\">\n        <button className=\"modal-exit\" onClick={hideModal}></button>\n        <div className=\"modal-title\">\n          <FormHeader>Create Flow</FormHeader>\n        </div>\n        <div className=\"modal-content\">\n          <form className=\"bot-create-form\" onSubmit={handleSubmit(onSubmit)}>\n            <InputField\n              isError={!!errors.name}\n              name=\"name\"\n              placeholder=\"Enter flow name\"\n              ref={register({required: true, minLength: 3})}\n            />\n            {errors.name && errors.name.type === 'required' && (<p className=\"form-error\">This field is required</p>)}\n            {errors.name && errors.name.type === 'minLength' && (<p className=\"form-error\">This field is required min length of 3</p>)}\n            {errors.name && errors.name.type === 'server' && (<p className=\"form-error\">{ errors.name.message}</p>)}\n\n            <FormButton type=\"submit\" disabled={isLoading}>\n              {isLoading ? 'Loading...' : 'Save'}\n            </FormButton>\n          </form>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default FlowCreateModal;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/EditModal.tsx",["366","367"],"import React, { useState, useRef, useEffect } from 'react';\nimport { FormHeader } from '../../common/typography';\nimport { InputField } from '../../common/form';\nimport { FormButton } from '../../common/buttons';\nimport { useForm } from \"react-hook-form\";\nimport { updateBot } from './../../../apis/bots';\nimport { toast } from 'react-toastify';\n\nconst BotEditModal = ({bot, hideModal, handleEditBot }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const { register, handleSubmit, errors, setError } = useForm();  \n\n  const onSubmit = data => {\n    setIsLoading(true);\n    updateBot({ name: data.name }, bot.id)\n      .then((response) => {\n        hideModal();\n        toast.success(response.message);\n        handleEditBot(response.data)\n      }).catch((err) => { \n        if (err.response.status === 422) {\n          if (err.response.data.errors.name) {\n            setError('name', {\n              type: 'server',\n              message: err.response.data.errors.name[0]\n            })\n          } \n        } else {\n          toast.error('Something went wrong')\n        }\n      }).finally(() => { \n        setIsLoading(false);\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"modal-body\">\n        <button className=\"modal-exit\" onClick={hideModal}></button>\n        <div className=\"modal-title\">\n          <FormHeader>Edit Bot</FormHeader>\n        </div>\n        <div className=\"modal-content\">\n          <form className=\"bot-create-form\" onSubmit={handleSubmit(onSubmit)}>\n            <InputField\n              isError={!!errors.name}\n              defaultValue={bot.name}\n              name=\"name\"\n              ref={register({required: true, minLength: 3})}\n            />\n            {errors.name && errors.name.type === 'required' && (<p className=\"form-error\">This field is required</p>)}\n            {errors.name && errors.name.type === 'minLength' && (<p className=\"form-error\">This field is required min length of 3</p>)}\n            {errors.name && errors.name.type === 'server' && (<p className=\"form-error\">{ errors.name.message}</p>)}\n\n            <FormButton type=\"submit\" disabled={isLoading}>\n              {isLoading ? 'Loading...' : 'Save'}\n            </FormButton>\n          </form>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default BotEditModal;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/utils/request.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/info/index.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/feature/index.tsx",["368"],"import React from 'react';\nimport { FeatureWrapper, FeatureGrid } from './styles';\nimport {\n  PrimaryHeader,\n  SecondaryHeader,\n  Paragraph,\n} from '../../common/typography';\n\nimport feature1 from '../../../assets/images/features/1.png';\nimport feature2 from '../../../assets/images/features/2.png';\nimport feature3 from '../../../assets/images/features/3.png';\nimport feature4 from '../../../assets/images/features/4.png';\nimport feature5 from '../../../assets/images/features/5.png';\n\nconst Feature = () => {\n  return (\n    <FeatureWrapper>\n      <PrimaryHeader className=\"heading\">Key Features</PrimaryHeader>\n      <FeatureGrid>\n        <div className=\"feature\">\n          <img src={feature1} alt=\"feature1\" />\n          <SecondaryHeader>Easy to develop</SecondaryHeader>\n          <Paragraph>\n            Create components connected them and make the bot flow in ease\n          </Paragraph>\n        </div>\n        <div className=\"feature\">\n          <img src={feature5} alt=\"feature1\" />\n          <SecondaryHeader>Multipe Platform</SecondaryHeader>\n          <Paragraph>\n            Create one bot and publish it in different platforms such as\n            facebook, slack, telegram, etc.\n          </Paragraph>\n        </div>\n        <div className=\"feature\">\n          <img src={feature3} alt=\"feature1\" />\n          <SecondaryHeader>Template Variety</SecondaryHeader>\n          <Paragraph>\n            Free templates which can be used to setup your bot.\n          </Paragraph>\n        </div>\n        <div className=\"feature\">\n          <img src={feature4} alt=\"feature1\" />\n          <SecondaryHeader>Rich Content</SecondaryHeader>\n          <Paragraph>\n            Various message content such as text, gallery, buttons.\n          </Paragraph>\n        </div>\n        <div className=\"feature\">\n          <img src={feature5} alt=\"feature1\" />\n          <SecondaryHeader>Feature 5</SecondaryHeader>\n          <Paragraph>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, t ut labore\n            et dolore magna aliqua.\n          </Paragraph>\n        </div>\n        <div className=\"feature\">\n          <img src={feature5} alt=\"feature1\" />\n          <SecondaryHeader>Feature 6</SecondaryHeader>\n          <Paragraph>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n            eiusmod tempor incididunt\n          </Paragraph>\n        </div>\n      </FeatureGrid>\n    </FeatureWrapper>\n  );\n};\n\nexport default Feature;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/texts.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Card/index.tsx",["369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402"],"import React, { useState, useEffect, useRef, useContext } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { CardSlider, CardWrapper } from './styles';\nimport { BuilderContext } from '../../../../../services/Builder/BuilderProvider';\nimport { AddTextButton } from '../../../../common/buttons';\nimport { ImageWrapper } from '../Image/styles';\nimport { v4 as uuidv4 } from 'uuid';\nimport Textarea from 'react-expanding-textarea';\nimport {\n  BiImageAdd,\n  BiTrash,\n  BiChevronRight,\n  BiChevronLeft,\n  BiPlus,\n} from 'react-icons/bi';\nimport { addCard, deleteCardGroup, updateCard, uploadImage } from '../../../../../apis/cards';\nimport { toast } from 'react-toastify';\n\nconst FormCard = ({ messageId, childId }) => {\n  const [builderState, setBuilderState] = useContext(BuilderContext);\n  const { register, handleSubmit } = useForm({ mode: 'onChange' });\n  const [isChangingHeading, setIsChangingHeading] = useState(false);\n  const [isChangingBody, setIsChangingBody] = useState(false);\n\n  const headingRef = useRef<HTMLInputElement>(null);\n  const paragraphRef = useRef<HTMLTextAreaElement>(null);\n  const cardRef = useRef<HTMLDivElement>(null);\n\n  //Find index of specific object using findIndex method.\n  const childIndex = builderState[messageId].children.findIndex(\n    (obj) => obj.id == childId\n  );\n\n  //Card Navigation functions\n  const handleNextButton = (id) => {\n    const cards = builderState[messageId].children[childIndex].cards;\n    const length = cards.length - 1;\n    const activeCardIndex = getActiveCardIndex(cards);\n\n    if (activeCardIndex == length) {\n      makeCardActive(activeCardIndex + 1, activeCardIndex, length + 2, true);\n    } else {\n      makeCardActive(activeCardIndex + 1, activeCardIndex);\n    }\n  };\n\n  const handlePreviousButton = () => {\n    const cards = builderState[messageId].children[childIndex].cards;\n    const activeCardIndex = getActiveCardIndex(cards);\n    if (activeCardIndex != 0) {\n      makeCardActive(activeCardIndex - 1, activeCardIndex);\n    }\n  };\n\n  const makeCardActive = (\n    cardIndex,\n    activeCardIndex,\n    length = 0,\n    addNew = false\n  ) => {\n    if (addNew) {\n      addCard(childId).then((response) => {\n        setBuilderState(\n          builderState.map((message, index) => { \n            if (index == messageId) { \n              message.children.map((child, ind) => { \n                if (ind == childIndex) {\n                  //First set active card to inactive\n                  child.cards.map((card, inx) => {\n                    console.log(activeCardIndex);\n                  if (inx == activeCardIndex) {\n                    card.active = false\n                  }\n                    return card;\n                })\n                //Then push a new card with active true;\n                  child.cards.push(response.data)\n                }\n              })\n            }\n            return message;\n          })\n        );\n      }).catch((err) => {\n        console.log(err);\n        toast.error(\"Something went wrong\");\n      });\n    } else {\n      setBuilderState(\n        builderState.map((message, index) => { \n          if (index == messageId) { \n            message.children.map((child, ind) => { \n              if (ind == childIndex) {\n                child.cards.map((card, inx) => { \n                  if (inx == cardIndex) { \n                    card.active = true\n                  }\n                  if (inx == activeCardIndex) { \n                    card.active = false\n                  }\n                  return card;\n                })\n              }\n              return child;\n            })\n          }\n          return message;\n        })\n      );\n    }\n  };\n\n  const getActiveCardIndex = (cards) => {\n    return cards.findIndex((obj) => obj.active == true);\n  };\n\n  const getCardIndex = (id) => {\n    return builderState[messageId].children[childIndex].cards.findIndex(\n      (obj) => obj.id === id\n    );\n  };\n\n  const isLastCard = () => {\n    const cards = builderState[messageId].children[childIndex].cards;\n    const length = cards.length - 1;\n    const activeCardIndex = getActiveCardIndex(cards);\n    return activeCardIndex == length;\n  };\n\n  //Form input submit methods\n  const onUploadImage = (data, id) => {\n    let cardIndex = getCardIndex(id);\n    let reader = new FileReader();\n    const formData = new FormData();\n    formData.append('image', data.image[0]);\n    formData.append('name', data.image[0].name);\n\n    reader.onloadend = () => {\n      var height = cardRef.current.scrollHeight;\n      uploadImage(formData, id).then((response) => {\n        setBuilderState(\n          builderState.map((item, index) => {\n            if (index == messageId) {\n              item.children.map((child, ind) => {\n                if (ind == childIndex) {\n                  child.cards.map((card, s) => {\n                    if (s == cardIndex) {\n                      card.selectedImage = data.image[0];\n                      card.imagePreviewUrl = reader.result;\n                      card.height = height;\n                    }\n                    return card;\n                  });\n                }\n                return child;\n              });\n            }\n            return item;\n          })\n        );\n      }).catch((err) => {\n        toast.error(\"Something went wrong\");\n      })\n    };\n\n    reader.readAsDataURL(data.image[0]);\n  };\n\n  const onHeadingChange = (data, id) => {\n    let cardIndex = getCardIndex(id);\n    var height = cardRef.current.scrollHeight;\n    updateCard({\n      heading: data.heading,\n    }, id).then((response) => {\n      setBuilderState(\n        builderState.map((item, index) => {\n          if (index == messageId) {\n            item.children.map((child, ind) => {\n              if (ind == childIndex) {\n                child.cards.map((card, s) => {\n                  if (s == cardIndex) {\n                    card.heading = data.heading;\n                    card.height = height;\n                  }\n                });\n              }\n            });\n          }\n          return item;\n        })\n      );\n    }).catch((err) => {\n      toast.error(\"Something went wrong\");\n    })\n  };\n\n  const onParagraphChange = (data, id) => {\n    let cardIndex = getCardIndex(id);\n    var height = cardRef.current.scrollHeight;\n\n    updateCard({\n      body: data.body,\n    }, id).then((response) => {\n      setBuilderState(\n        builderState.map((item, index) => {\n          if (index == messageId) {\n            item.children.map((child, ind) => {\n              if (ind == childIndex) {\n                child.cards.map((card, s) => {\n                  if (s == cardIndex) {\n                    card.body = data.body;\n                    card.height = height;\n                  }\n                });\n              }\n            });\n          }\n          return item;\n        })\n      );\n    }).catch((err) => {\n      toast.error(\"Something went wrong\");\n    })\n  };\n\n  const handleDelete = () => {\n    deleteCardGroup(childId).then((response) => {\n      setBuilderState(\n        builderState.map((item, index) => {\n          if (index == messageId) {\n            item.height -= 250;\n            item.children.splice(childIndex, 1);\n          }\n          return item;\n        })\n      );\n    }).catch((err) => {\n      toast.error(\"Something went wrong\");\n    })\n  };\n\n  return (\n    <CardSlider>\n      <div className=\"navigation_btn previous\" onClick={handlePreviousButton}>\n        <BiChevronLeft />\n      </div>\n      <div className=\"navigation_btn next\" onClick={handleNextButton}>\n        {isLastCard() ? <BiPlus /> : <BiChevronRight />}\n      </div>\n      <button className=\"action-btn\" onClick={handleDelete}>\n        <BiTrash />\n      </button>\n      {builderState[messageId].children[childIndex].cards.map((card) => {\n        if (card.active) {\n          return (\n            <CardWrapper ref={cardRef}>\n              <div className=\"card-image\">\n                <ImageWrapper>\n                  {card.imagePreviewUrl ? (\n                    <div>\n                      <img src={card.imagePreviewUrl} alt=\"card-image\" />\n                    </div>\n                  ) : (\n                    <form\n                      onChange={handleSubmit((data) =>\n                        onUploadImage(data, card.id)\n                      )}>\n                      <input\n                        ref={register}\n                        type=\"file\"\n                        id={'card_image' + getCardIndex(card.id)}\n                        name=\"image\"\n                        accept=\"image/*\"\n                      />\n                      <label htmlFor={'card_image' + getCardIndex(card.id)}>\n                        <BiImageAdd />\n                        <p>Upload image</p>\n                      </label>\n                    </form>\n                  )}\n                </ImageWrapper>\n              </div>\n              <div className=\"card-text\">\n                <div\n                  className={\n                    isChangingHeading ? 'card-heading active' : 'card-heading'\n                  }>\n                  <form\n                    onBlur={handleSubmit((data) =>\n                      onHeadingChange(data, card.id)\n                    )}>\n                    <input\n                      className=\"card-title\"\n                      ref={register({required: true, minLength: 3 })}\n                      maxLength={27}\n                      id=\"heading\"\n                      name=\"heading\"\n                      defaultValue={card.heading}\n                      onBlur={() => setIsChangingHeading(false)}\n                      onClick={() => {\n                        setIsChangingBody(false);\n                        setIsChangingHeading(true);\n                      }}\n                    />\n                  </form>\n                </div>\n                <div\n                  className={isChangingBody ? 'card-body active' : 'card-body'}>\n                  <form\n                    onBlur={handleSubmit((data) =>\n                      onParagraphChange(data, card.id)\n                    )}>\n                    <Textarea\n                      className=\"card-paragraph\"\n                      maxLength={200}\n                      placeholder=\"Enter your text here\"\n                      onBlur={() => setIsChangingBody(false)}\n                      defaultValue={card.body}\n                      id=\"body\"\n                      name=\"body\"\n                      ref={register({required: true, minLength: 3})}\n                      onClick={() => {\n                        setIsChangingHeading(false);\n                        setIsChangingBody(true);\n                      }}\n                    />\n                  </form>\n                </div>\n              </div>\n            </CardWrapper>\n          );\n        }\n      })}\n    </CardSlider>\n  );\n};\n\nexport default FormCard;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Flows/builder.tsx",["403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421"],"import React, { useState } from 'react';\nimport {withRouter} from 'react-router-dom'\nimport { FlowBuilderWrapper } from './styles';\nimport { Stage, Layer, Rect, Image, Text, Group, Circle } from 'react-konva';\nimport Toolbar from '../../../components/dashboard/builder/Toolbar/index';\nimport { v4 as uuidv4 } from 'uuid';\nimport {\n  handleRenderingChildrens,\n  calculateHeightOfMessageBox,\n  handleWheel,\n  Edge,\n  URLImage,\n} from './helper';\nimport {\n  useBuilder,\n} from '../../../services/Builder/BuilderProvider';\nimport { BiMessageSquareAdd } from 'react-icons/bi';\nimport { saveMessage, getMessages, updateMessage, deleteMessage } from '../../../apis/messages';\nimport { toast } from 'react-toastify';\n\nconst FlowBuilder = (props) => {\n  const [isToolbarActive, setIsToolbarActive] = useState(null);\n  const [builderState, setBuilderState, sidebar] = useBuilder();\n  const [id, setId] = useState(null);\n  const [mousePosition, setMousePosition] = useState({\n    x: 0,\n    y: 0,\n  });\n  const [isEdging, setIsSetting] = useState(false);\n  const [isSecondClick, setIsSecondClick] = useState(false);\n\n  const [state, setState] = useState({\n    layerScale: 1,\n    layerX: 0,\n    layerY: 0,\n  });\n\n  const TrashIcon = \"data:image/svg+xml;base64,\" + window.btoa('<svg stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" viewBox=\"0 0 24 24\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"none\" d=\"M17.004 20L17.003 8h-1-8-1v12H17.004zM13.003 10h2v8h-2V10zM9.003 10h2v8h-2V10zM9.003 4H15.003V6H9.003z\"></path><path d=\"M5.003,20c0,1.103,0.897,2,2,2h10c1.103,0,2-0.897,2-2V8h2V6h-3h-1V4c0-1.103-0.897-2-2-2h-6c-1.103,0-2,0.897-2,2v2h-1h-3 v2h2V20z M9.003,4h6v2h-6V4z M8.003,8h8h1l0.001,12H7.003V8H8.003z\"></path><path d=\"M9.003 10H11.003V18H9.003zM13.003 10H15.003V18H13.003z\"></path></svg>');\n\n  const getNextNode = (id) => {\n    if (id) {\n      const nextIndex = builderState.findIndex((obj) => obj.id == id);\n      if (nextIndex == -1) {\n        return mousePosition;\n      }\n      return builderState[nextIndex].position;\n    }\n  };\n\n  const hideToolbar = () => {\n    setIsToolbarActive(false);\n    setId(0);\n  };\n\n  const showToolbar = (id) => {\n    setId(id);\n    setIsToolbarActive(true);\n  };\n\n  const calculateCardHeight = (state) => {\n    var height;\n    state.foreach((item) => {\n      if (item.type == 'card') {\n        height += item.cards[0].height;\n      } else {\n        height += item.height;\n      }\n    });\n    return height;\n  };\n\n  const getStageWidth = () => {\n    return sidebar ? window.innerWidth - 280 : window.innerWidth - 90;\n  };\n\n  const setSelectedTrue = (messageId) => {\n    var previousSelected = getSelectedNode(builderState);\n    if (previousSelected >= 0) {\n      setBuilderState(\n        builderState.map((item, index) => {\n          if (index == messageId) {\n            item.isSelected = true;\n          }\n          if (index == previousSelected) {\n            item.isSelected = false;\n          }\n          return item;\n        })\n      );\n    } else {\n      setBuilderState(\n        builderState.map((item, index) => {\n          if (index == messageId) {\n            item.isSelected = true;\n          }\n          return item;\n        })\n      );\n    }\n  };\n\n  const setHoverTrue = (messageId) => {\n    var previousHover = getHoveredNode(builderState);\n    if (previousHover >= 0) {\n      setBuilderState(\n        builderState.map((item, index) => {\n          if (index == messageId) {\n            item.isHover = true;\n          }\n          if (index == previousHover) {\n            item.isHover = false;\n          }\n          return item;\n        })\n      );\n    } else {\n      setBuilderState(\n        builderState.map((item, index) => {\n          if (index == messageId) {\n            item.isHover = true;\n          }\n          return item;\n        })\n      );\n    }\n  };\n\n  const setHoverFalse = (messageId) => {\n    setBuilderState(\n      builderState.map((item, index) => {\n        if (index == messageId) {\n          item.isHover = false;\n        }\n        return item;\n      })\n    );\n  };\n\n  const connectEdge = (messageId) => {\n    setIsSetting(true);\n    setBuilderState(\n      builderState.map((item, index) => {\n        if (index == messageId) {\n          item.next = 'dummy';\n        }\n        return item;\n      })\n    );\n  };\n\n  const handleMousePosition = (event) => {\n    if (isEdging) {\n      var point = event.target.getStage().getPointerPosition();\n      setMousePosition({\n        x: point.x,\n        y: point.y,\n      });\n    }\n  };\n\n  const handleClickOnCanvas = () => {\n    setIsSecondClick(true);\n    if (isSecondClick && isEdging) {\n      setIsSetting(false);\n      // window.removeEventListener('mousemove', handleMousePosition);\n      let number = builderState.length + 1;\n      var id = uuidv4();\n      const newState = {\n        id: id,\n        name: 'Send Message #' + number,\n        position: {\n          x: mousePosition.x,\n          y: mousePosition.y,\n        },\n        height: 200,\n        children: [],\n        isHover: false,\n        isSelected: false,\n      };\n      setIsSecondClick(false);\n\n      //find the message with next: dummy\n      var dummyNextMessage = builderState.findIndex(\n        (obj) => obj.next === 'dummy'\n      );\n\n      setBuilderState(\n        builderState.map((item, index) => {\n          if (index == dummyNextMessage) {\n            item.next = id;\n          }\n          return item;\n        })\n      );\n      setBuilderState([...builderState, newState]);\n    }\n  };\n\n  const handleAddMessage = () => {\n    let number = builderState.length + 1;\n    saveMessage({\n      name: 'Send Message #' + number,\n      position_x: 1200,\n      position_y: 60,\n      flow: props.match.params.id\n    }).then((response) => {\n       setBuilderState([...builderState, response.data]);\n\n    }).catch((err) => {\n      toast.error(err.response)\n    })\n  }\n\n  const handleDeleteMessage = (item, index) => {\n    builderState.splice(index, 1);\n    deleteMessage(item.id)\n      .catch((err) => {\n        toast.error(\"Something went wrong\");\n      })\n  }\n\n  const handleDragMessage = (e, item, index) =>  {\n    var updatedPosition = {\n      x: e.target.x(),\n      y: e.target.y(),\n    };\n\n    setBuilderState(\n      builderState.map((item, ind) => {\n        if (ind == index) {\n          item.position = updatedPosition;\n        }\n        return item;\n      })\n    );\n  }\n\n  const updateMessagePosition = (item) => {\n    updateMessage({\n      position_x: item.position.x,\n      position_y: item.position.y\n    }, item.id).catch((err) => {\n      toast.error('Something went wrong')\n    })    \n  }\n\n  React.useEffect(() => {\n    getMessages(props.match.params.id)\n      .then((response) => {\n        setBuilderState(response.data)\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n  }, []);\n\n\n  return (\n    <FlowBuilderWrapper>\n      <div className=\"header\">Flows of { props.match.params.id}</div>\n      <div className=\"stage-action\">\n        <BiMessageSquareAdd\n          onClick={handleAddMessage}\n        />\n      </div>\n\n      {isToolbarActive && <Toolbar id={id} hideToolbar={hideToolbar} />}\n      <Stage\n        width={getStageWidth()}\n        height={window.innerHeight - 70}\n        scaleX={state.layerScale}\n        scaleY={state.layerScale}\n        onMouseMove={handleMousePosition}\n        x={0}\n        y={0}\n        onClick={handleClickOnCanvas}>\n        <Layer name=\"layer_1\" draggable onWheel={handleWheel}>\n          <Rect\n            x={-window.innerWidth}\n            y={-window.innerHeight}\n            width={window.innerWidth * 3}\n            height={window.innerHeight * 3}\n            fill=\"\"\n          />\n          <Group draggable x={200} y={200}>\n            <Rect\n              cornerRadius={16}\n              width={300}\n              height={100}\n              fill=\"#FDFDFD\"\n              strokeWidth={2}\n              shadowColor=\"gray\"\n              shadowOpacity={0.7}\n              shadowBlur={2}\n            />\n            <Circle x={30} y={30} radius={15} fill=\"green\" />\n            <Text\n              x={55}\n              y={22}\n              text=\"Starting Step\"\n              fontFamily={'Roboto'}\n              fontSize={20}\n              fill={'gray'}\n            />\n            <Circle x={280} y={80} radius={9} fill=\"#8392AB\" strokeWidth={1} />\n            <Text\n              x={195}\n              y={72}\n              text=\"Next Step\"\n              fontFamily={'Roboto'}\n              fontSize={15}\n              fontWeight={300}\n              fill={'gray'}\n            />\n          </Group>\n          {builderState &&\n            typeof builderState == 'object' &&\n            builderState.map((item, index) => {\n              return (\n                <React.Fragment key={item.id}>\n                  {item.next ? (\n                    <Edge\n                      height={item.height}\n                      node1={item.position}\n                      node2={getNextNode(item.next)}\n                    />\n                  ) : null}\n                  <Group\n                    x={item.position?.x}\n                    y={item.position?.y}\n                    draggable\n                    onClick={(e) => {\n                      showToolbar(item.id);\n                      setSelectedTrue(index);\n                    }}\n                    onMouseEnter={(e) => {\n                      setHoverTrue(index);\n                    }}\n                    onMouseLeave={(e) => {\n                      setHoverFalse(index);\n                    }}\n                    hitOnDragEnabled={true}\n                    onDragMove={(e) => {\n                      handleDragMessage(e, item, index)\n                    }}\n                    onDragEnd={() => { updateMessagePosition(item) }}\n                    >\n                    <Rect\n                      cornerRadius={16}\n                      height={calculateHeightOfMessageBox(item.children)}\n                      width={340}\n                      fill=\"#FDFDFD\"\n                      strokeWidth={5}\n                      shadowColor={getShadowColor(item)}\n                      shadowOpacity={1}\n                      shadowBlur={10}\n                    />\n                    {item.isHover &&\n                      <>\n                      <Rect\n                        width={50} height={30} x={330} y={10} /> \n                      <URLImage\n                         onMouseOver={() => { document.body.style.cursor = 'pointer' }}\n                        onMouseOut={() => { document.body.style.cursor = 'default' }}\n                        onClick={() => {handleDeleteMessage(item, index)}}\n                        image={TrashIcon} x={345} y={10} height={25} width={25} />\n                      </>\n                    }\n                    <Circle x={30} y={30} radius={15} fill=\"#5850EB\" />\n                    <Text\n                      x={55}\n                      y={22}\n                      text={item.name}\n                      fontFamily={'Roboto'}\n                      fontSize={20}\n                      fill={'gray'}\n                    />\n                    <Group\n                      x={340}\n                      y={item.height - 20}\n                      onClick={(e) => connectEdge(index)}>\n                      <Circle radius={9} fill=\"#8392AB\" strokeWidth={1} />\n                      <Text\n                        x={-80}\n                        y={-8}\n                        text=\"Next Step\"\n                        fontFamily={'Roboto'}\n                        fontSize={15}\n                        fontWeight={300}\n                        fill={'gray'}\n                      />\n                    </Group>\n                    {typeof item.children == 'object' ? (\n                      <>\n                        {item.children.length > 0 ? (\n                          handleRenderingChildrens(item)\n                        ) : (\n                          <React.Fragment key={item}>\n                            <Group>\n                              <Rect\n                                x={20}\n                                y={75}\n                                height={60}\n                                width={300}\n                                fill=\"#EEF1F4\"\n                                cornerRadius={16}\n                              />\n                              <Text\n                                text=\"No Content\"\n                                x={110}\n                                y={95}\n                                fontFamily={'Roboto'}\n                                fontSize={20}\n                                fontWeight={300}\n                                fill={'blue'}\n                              />\n                            </Group>\n                          </React.Fragment>\n                        )}\n                      </>\n                    ) : null}\n                  </Group>\n                </React.Fragment>\n              );\n            })}\n        </Layer>\n      </Stage>\n    </FlowBuilderWrapper>\n  );\n};\n\nconst getShadowColor = (item) => {\n  if (item.isSelected) {\n    return '#1e824c';\n  } else if (item.isHover) {\n    return '#1f3a93';\n  } else {\n    return 'black';\n  }\n};\n\nconst getSelectedNode = (state) => {\n  return state.findIndex((obj) => obj.isSelected == true);\n};\n\nconst getHoveredNode = (state) => {\n  return state.findIndex((obj) => obj.isHovered == true);\n};\n\nexport default withRouter(FlowBuilder);\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/styles/theme.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/styles/mediaQueries.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Auth/JWTValidator.ts",["422"],"import jwt from 'jsonwebtoken';\n\nexport default (token: any) => {\n  if (token) {\n    const data: any = jwt.decode(token);\n\n    const expDate: Date = new Date(data.exp * 1000);\n    const currentDate: Date = new Date();\n    return expDate.valueOf() - currentDate.valueOf() > 0;\n  }\n  return false;\n};\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/auth/LoginPage.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Dashboard/index.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/auth.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/form.ts",["423"],"import styled from 'styled-components'\nimport { grey } from '../../styles/theme';\n\nexport const InputField = styled.input<{isError?: boolean}>`\n  background: ${props => props.isError ? '#FFE4E4' : '#F7F7F7'};\n  border-radius: 7px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.1);\n  box-sizing: border-box;\n  min-height: 3.8rem;\n  min-width: 30rem;\n  padding: .8rem;\n  outline: none;\n  font-family: Roboto, sans-serif;\n  font-style: normal;\n  font-weight: 400;\n  font-size: 1.4rem;\n  color: #000;\n  width: 100%;\n\n\n  &:focus {\n    font-weight: 400;\n    box-shadow: 0 0 0 3px rgba(164, 202, 254, 0.45);\n    border-color: #5850EC;\n  }\n\n  &::placeholder {\n    color: #d7d7d7;\n    font-size: 1.2rem;\n  }\n`;\n\nexport const FormLink = styled.a`\n  text-decoration: none;\n  font-size: 1.2rem;\n  font-family: Roboto, sans-serif;\n  color: #565252;\n\n  &:hover{\n    text-decoration-line: underline;\n    color: #000;\n  }\n`;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/bots.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Flows/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Flows/DeleteModal.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Flows/EditModal.tsx",["424","425"],"import React, { useState, useRef, useEffect } from 'react';\nimport { FormHeader } from '../../common/typography';\nimport { InputField } from '../../common/form';\nimport { FormButton } from '../../common/buttons';\nimport { useForm } from \"react-hook-form\";\nimport { updateFlow } from './../../../apis/flows';\nimport { toast } from 'react-toastify';\n\nconst FlowCreateModal = ({flow, hideModal, handleEditFlow}) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const { register, handleSubmit, errors, setError } = useForm();  \n\n  const onSubmit = data => {\n    updateFlow({ name: data.name }, flow.id)\n      .then((response) => {\n        hideModal();\n        toast.success(response.message);\n        handleEditFlow(response.data)\n      }).catch((err) => { \n        if (err.response.status === 422) {\n          if (err.response.data.errors.name) {\n            setError('name', {\n              type: 'server',\n              message: err.response.data.errors.name[0]\n            })\n          } \n        } else {\n          toast.error('Something went wrong')\n        }\n      }).finally(() => { \n        setIsLoading(false);\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"modal-body\">\n        <button className=\"modal-exit\" onClick={hideModal}></button>\n        <div className=\"modal-title\">\n          <FormHeader>Edit Flow</FormHeader>\n        </div>\n        <div className=\"modal-content\">\n          <form className=\"bot-create-form\" onSubmit={handleSubmit(onSubmit)}>\n            <InputField\n              isError={!!errors.name}\n              defaultValue={flow.name}\n              name=\"name\"\n              ref={register({required: true, minLength: 3})}\n            />\n            {errors.name && errors.name.type === 'required' && (<p className=\"form-error\">This field is required</p>)}\n            {errors.name && errors.name.type === 'minLength' && (<p className=\"form-error\">This field is required min length of 3</p>)}\n            {errors.name && errors.name.type === 'server' && (<p className=\"form-error\">{ errors.name.message}</p>)}\n\n            <FormButton type=\"submit\" disabled={isLoading}>\n              {isLoading ? 'Loading...' : 'Save'}\n            </FormButton>\n          </form>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default FlowCreateModal;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/constants/urls.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/Pagination/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/footer/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Sidebar/index.tsx",["426","427","428","429"],"import React, { useEffect, useRef, Ref } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport logo from '../../../assets/images/logo-light.png';\nimport shortLogo from '../../../assets/images/logo-short.png';\nimport avatar from '../../../assets/images/avatar.jpg';\nimport { AiOutlineDashboard, AiOutlineRobot } from 'react-icons/ai';\nimport { TiFlowMerge } from 'react-icons/ti';\nimport { HiTemplate } from 'react-icons/hi';\nimport { IoSettingsSharp, IoLogOut } from 'react-icons/io5';\nimport { getAuthUser, logOut } from '../../../apis/auth';\nimport { useAuthDispatch } from '../../../services/Auth/AuthProvider';\nimport {\n  SidebarWrapper,\n  SidebarMenu,\n  LogoWrapper,\n  UserInfoWrapper,\n  MenuItem,\n  ToggleBar,\n} from './styles';\nimport { BiChevronsLeft, BiChevronsRight } from 'react-icons/bi';\n\ninterface SidebarProps {\n  handleSidebarState: (isOpen: boolean) => void;\n}\n\nconst Sidebar: React.FC<SidebarProps> = ({ handleSidebarState }) => {\n  const [isOpen, setIsOpen] = React.useState(true);\n  const nameRef = useRef<HTMLHeadingElement>(null);\n  const history = useHistory();\n  const authDispatch = useAuthDispatch();\n\n  useEffect(() => {\n    getAuthUser().then((response) => {\n      var x = document.getElementById('username');\n      if (x) {\n        x.innerHTML = response.data.name;\n      }\n    });\n\n    handleSidebarState(isOpen);\n  }, [isOpen]);\n\n  const handleLogOut = (event: any) => {\n    event.preventDefault();\n    logOut().then((response) => {\n      authDispatch({\n        type: 'LOGOUT',\n      });\n      history.push('/');\n    });\n  };\n\n  return (\n    <SidebarWrapper>\n      <SidebarMenu isOpen={isOpen}>\n        <LogoWrapper>\n          <img src={isOpen ? logo : shortLogo} alt=\"Logo\" />\n        </LogoWrapper>\n        <UserInfoWrapper isOpen={isOpen}>\n          <img src={avatar} alt=\"Avatar\" />\n          <div className=\"user-info\">\n            <h2 ref={nameRef} id=\"username\"></h2>\n            <p>Profile Setting</p>\n          </div>\n        </UserInfoWrapper>\n        <div className=\"menu_list\">\n          <div className=\"menu_list-top\">\n            <Link to=\"/app\">\n              <MenuItem isActive isOpen={isOpen}>\n                <AiOutlineDashboard className=\"menu-icon\" />\n                <p>Dashboard</p>\n              </MenuItem>\n            </Link>\n            <Link to=\"/bots\">\n              <MenuItem isOpen={isOpen}>\n                <AiOutlineRobot className=\"menu-icon\" />\n                <p>Bots</p>\n              </MenuItem>\n            </Link>\n            <Link to=\"/templates\">\n              <MenuItem isOpen={isOpen}>\n                <HiTemplate className=\"menu-icon\" />\n                <p>Templates</p>\n              </MenuItem>\n            </Link>\n          </div>\n          <div className=\"menu_list-bottom\">\n            <Link to=\"/settings\">\n              <MenuItem isOpen={isOpen}>\n                <IoSettingsSharp className=\"menu-icon\" />\n                <p>Settings</p>\n              </MenuItem>\n            </Link>\n            <MenuItem isOpen={isOpen} onClick={handleLogOut}>\n              <IoLogOut className=\"menu-icon\" />\n              <p>Logout</p>\n            </MenuItem>\n          </div>\n        </div>\n      </SidebarMenu>\n      <ToggleBar onClick={() => setIsOpen(!isOpen)}>\n        {isOpen && <BiChevronsLeft />}\n        {!isOpen && <BiChevronsRight />}\n      </ToggleBar>\n    </SidebarWrapper>\n  );\n};\n\nexport default Sidebar;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Image/index.tsx",["430","431","432","433","434","435","436"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Flows/index.tsx",["437","438","439","440","441"],"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { GridWrapper } from '../../../components/common/grid';\nimport { PrimaryButton } from './../../../components/common/buttons';\nimport { HiDotsVertical } from 'react-icons/hi';\nimport { DropdownWrapper } from '../../../components/common/Dropdown/styles';\nimport { useModal } from '../../../services/Modal/ModalProvider';\nimport { getFlows } from '../../../apis/flows';\nimport {withRouter} from 'react-router-dom'\nimport FlowCreateModal from '../../../components/dashboard/Flows/CreateModal';\nimport FlowEditModal from '../../../components/dashboard/Flows/EditModal';\nimport FlowDeleteModal from '../../../components/dashboard/Flows/DeleteModal';\nimport Pagination from '../../../components/common/Pagination/index';\n\n\n\ntype FlowType = {\n  id: string;\n  name: string;\n  last_modified: string;\n};\n\nconst Flows = (props) => {\n  const { showModal, hideModal } = useModal();\n  const [flows, setFlows] = useState<Array<FlowType>>();\n  const [pageNumber, setPageNumber] = useState(1);\n  const [isLoading, setIsLoading] = useState(true);\n  const [lastPage, setLastPage] = useState(1);\n\n  const botId = props.match.params.id;\n\n  const getFlowsData = (bot:string, pageNumber: number) => {\n    getFlows(bot, pageNumber)\n      .then((response) => {\n        setFlows(response.data);\n        setPageNumber(response.meta.current_page);\n        setLastPage(response.meta.last_page);\n      })\n      .catch((err) => {\n        console.log(\"Something went wrong\");\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  useEffect(() => {\n    getFlowsData(botId, pageNumber);\n  }, [pageNumber, lastPage]);\n\n\n  const handleCreateOpen = (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => {\n    showModal(() => (\n      <FlowCreateModal bot={botId} hideModal={hideModal} handleCreateFlow={ handleCreateFlow } />\n    ));\n  };\n\n  const handleEditOpen = (data: FlowType) => {\n    showModal(() => (\n      <FlowEditModal hideModal={hideModal} flow={data} handleEditFlow={ handleEditFlow } />\n    ));\n  };\n\n  const handleDeleteConfirmation = (data: FlowType) => {\n    showModal(() => (\n      <FlowDeleteModal hideModal={hideModal} flow={data} handleDeleteFlow={ handleDeleteFlow }/>\n    ));\n  };\n\n  const handlePageChange = (pageNumber: number) => {\n    setPageNumber(pageNumber);\n  };\n\n  const handleCreateFlow = (newFlow: FlowType) => { \n    const newFlowList = flows.concat(newFlow);\n    setFlows(newFlowList)\n  }\n\n  const handleEditFlow = (data) => {\n    const flowId = flows.findIndex(\n      (obj) => obj.id == data.id\n    );\n    setFlows(flows.map((item, index) => {\n      if (index == flowId) {\n        item.name = data.name\n      }\n      return item;\n    }));\n  }\n\n  const handleDeleteFlow = (id) => {\n    const flowId = flows.findIndex(\n      (obj) => obj.id == id\n    );\n    flows.splice(flowId, 1);\n  }\n  \n  return (\n    <React.Fragment>\n    <div className=\"page-header\">\n      <h1 className=\"main-heading\">Flows</h1>\n        <PrimaryButton onClick={handleCreateOpen}>Add Flow</PrimaryButton>\n    </div>\n      <GridWrapper>\n        <div className=\"grid-row\">\n          {flows && flows.map((data: FlowType) => {\n            return (\n              <React.Fragment key={data.id}>\n                <Link to={'flow/' + data.id}>\n                  <div className=\"grid-item\">\n                    <div className=\"grid-item-wrapper\">\n                      <div className=\"grid-item-container\">\n                        <div className=\"image\">\n                          Image\n                        </div>\n                        <div className=\"tag\">\n                          <p>{data.name}</p>\n                          <DropdownWrapper>\n                            <label className=\"dropbtn\">\n                              <HiDotsVertical />\n                            </label>\n                            <div className=\"dropdown-content\">\n                              <p\n                                onClick={() => {\n                                  handleEditOpen(data);\n                                }}>\n                                Edit\n                              </p>\n                              <p\n                                onClick={() => {\n                                  handleDeleteConfirmation(data);\n                                }}>\n                                Delete\n                              </p>\n                            </div>\n                          </DropdownWrapper>\n                        </div>           \n                    </div>\n                  </div>\n                </div>\n                </Link>\n              </React.Fragment>\n            );\n          })}\n      </div>\n    </GridWrapper>\n\n    <Pagination\n      activePage={pageNumber}\n      total={lastPage}\n      onChange={handlePageChange}\n    />\n  </React.Fragment>\n\n   );\n};\n\nexport default withRouter(Flows);\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/index.tsx",[],["442","443"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/routes/ProtectedRoute.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/table.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/messages.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/CreateModal.tsx",[],["444","445"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/header/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/utils/pagination.ts",["446"],"export default  (c: number, m: number) => {\n  let current = c,\n    last = m,\n    delta = 2,\n    left = current - delta,\n    right = current + delta + 1,\n    range = [],\n    rangeWithDots = [],\n    l\n\n  for (let i = 1; i <= last; i++) {\n    if (i === 1 || i === last || (i >= left && i < right)) {\n      range.push(i)\n    }\n  }\n\n  for (let i of range) {\n    if (l) {\n      if (i - l === 2) {\n        rangeWithDots.push(l + 1)\n      } else if (i - l !== 1) {\n        rangeWithDots.push(\"...\")\n      }\n    }\n    rangeWithDots.push(i)\n    l = i\n  }\n\n  return rangeWithDots\n}","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/info/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Image/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Sidebar/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/utils/storage.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/grid.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/layout/AuthLayout.tsx",["447"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport logo from '../../assets/images/logo-dark.png';\nimport { AuthButton } from '../common/buttons';\n\ninterface LayoutProps {\n  children?: any;\n  type?: string;\n}\n\nconst AuthLayout: React.FC<LayoutProps> = (props) => {\n  return (\n    <LayoutWrapper>\n      <nav className=\"logo-bar\">\n        <Link to=\"/\">\n          <img className=\"logo-img\" src={logo} alt=\"Shipboard Logo\" />\n        </Link>\n      </nav>\n      <AuthContainer>\n        <div className=\"card\">{props.children}</div>\n        {/* {props.type === 'login' && (\n          <div className=\"auth-buttons\">\n            <AuthButton>Sign in with Google</AuthButton>\n            <AuthButton>Sign in with Facebook</AuthButton>\n          </div>\n        )} */}\n      </AuthContainer>\n      <FooterWrapper>\n        <p>©Shipbot Pvt. Ltd. 2020. All rights reserved</p>\n      </FooterWrapper>\n    </LayoutWrapper>\n  );\n};\n\nexport default AuthLayout;\n\nconst LayoutWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n  min-width: 50rem;\n  position: relative;\n\n  .logo-bar {\n    align-content: center;\n    display: flex;\n    margin: auto;\n    max-width: 144rem;\n    min-height: 10rem;\n    width: 100%;\n\n    img {\n      height: 4.5rem;\n      margin-top: 2rem;\n    }\n  }\n`;\n\nconst AuthContainer = styled.div`\n  align-content: center;\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  justify-content: center;\n  margin: auto;\n  position: relative;\n\n  .card {\n    align-items: center;\n    background: #ffffff;\n    border-radius: 24px;\n    box-shadow: 0px 4px 24px rgba(0, 0, 0, 0.12);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    margin-top: -10rem;\n    max-width: 40rem;\n    min-height: 30rem;\n    padding: 4rem;\n\n    h1 {\n      padding-bottom: 1rem;\n    }\n\n    h2 {\n      margin-top: -1rem;\n      padding-bottom: 1rem;\n    }\n\n    input {\n      margin-bottom: 1rem;\n      margin-top: 1rem;\n    }\n\n    .last-input {\n      margin-bottom: 3rem;\n    }\n\n    .link {\n      display: flex;\n      justify-content: space-around;\n      margin-top: 1rem;\n      width: 100%;\n    }\n\n    .go-back {\n      align-items: center;\n      align-self: flex-start;\n      color: #000;\n      cursor: pointer;\n      display: flex;\n      margin-top: 1rem;\n      text-decoration: none;\n\n      &:hover{\n        color: #000;\n        text-decoration-line: underline;\n      }\n\n      h5 {\n        font-family: Roboto, sans-serif;\n        font-size: 1.2rem;\n        font-weight: 300;\n      }\n\n      svg {\n        width: 1.5rem;\n        height: 1.5rem;\n      }\n\n      &:hover {\n        h5 {\n          text-decoration: underline;\n        }\n      }\n    }\n  }\n\n  .auth-buttons {\n    margin-left: -5rem;\n    margin-right: -5rem;\n    display: flex;\n    justify-content: space-between;\n    margin-top: 6rem;\n  }\n`;\n\nconst FooterWrapper = styled.footer`\n  bottom: 0rem;\n  font-size: 1.2rem;\n  padding-right: 10rem;\n  position: absolute;\n  text-align: right;\n  width: 100%;\n`;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Builder/BuilderProvider.tsx",["448","449"],"import React, { useState, createContext, useContext } from 'react';\nimport { FlowStateType } from '../../../types';\nimport { v4 as uuidv4 } from 'uuid';\n\n// const initialBuilderState = [\n//   {\n//     id: '12kl23-23k23l0-23l2',\n//     name: 'Send Message #1',\n//     height: 200,\n//     position: {\n//       x: 700,\n//       y: 50,\n//     },\n//     children: [],\n//     next: '2323-23jljkj23-23jo2i3',\n//     isHover: false,\n//     isSelected: false,\n//   },\n//   {\n//     id: '2323-23jljkj23-23jo2i3',\n//     name: 'Send Message #2',\n//     height: 200,\n//     position: {\n//       x: 1000,\n//       y: 100,\n//     },\n//     children: [],\n//     isHover: false,\n//     isSelected: false,\n//   },\n// ];\n\nexport const BuilderContext = createContext(undefined);\n\nexport const BuilderProvider = ({ sidebar, children }) => {\n  const [builderState, setBuilderState] = useState([]);\n  return (\n    <BuilderContext.Provider value={[builderState, setBuilderState, sidebar]} >\n      {children}\n    </BuilderContext.Provider>\n  );\n};\n\nexport const useBuilder = () => {\n  const context = useContext(BuilderContext);\n  if (context === undefined) {\n    throw new Error('useBuilderState must be used within a BuilderProvider');\n  }\n  return context;\n};\n",["450","451"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/footer/index.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/navbar/index.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Text/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/images.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Auth/AuthProvider.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/flows.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/feature/styles.ts",["452"],"import styled from 'styled-components';\nimport { darkerGrey } from '../../../styles/theme';\n\nexport const FeatureWrapper = styled.section`\n  margin: auto;\n  max-width: 120rem;\n  margin-top: 3rem;\n  \n  .heading {\n    text-align: center;\n    margin-top: 2rem;\n  }\n`;\n\nexport const FeatureGrid = styled.div`\nmargin-top:1rem;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  text-align: none;\n\n  .feature {\n    background-color: ${props => props.theme.white};\n    border-radius: 20px;\n    box-shadow: 0px 4px 24px rgba(0, 0, 0, 0.25);    height: 24rem;\n    margin: 2rem;\n    padding: 2rem;\n    width: 35rem;\n\n    img {\n      width: 4rem;\n      height: auto;\n      margin-top: 1rem;\n    }\n  }\n`;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/DeleteModal.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Toolbar/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Modal/ModalProvider.tsx",["453"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Flows/helper.tsx",["454"],"import React from 'react';\nimport {Rect, Image, Text, Group, Shape } from 'react-konva';\nimport useImage from 'use-image';\n\nexport const Edge = ({ height, node1, node2 }) => {\n  node1 = {\n    x: node1.x + 300,\n    y: node1.y + 10\n  }\n  node2 = {\n    x: node2.x + 20,\n    y: node2.y + 20\n  }\n  const p1 = { x: (node1.x + node2.x) / 2, y: node1.y };\n  const p2 = { x: (node1.x + node2.x) / 2, y: node2.y };\n  return (\n    <Shape\n      sceneFunc={(context, shape) => {\n        context.beginPath();\n        context.moveTo(node1.x, node1.y);\n        context.bezierCurveTo(p1.x, p1.y, p2.x, p2.y, node2.x, node2.y);\n        // (!) Konva specific method, it is very important\n        context.fillStrokeShape(shape);\n      }}\n      stroke=\"black\"\n      strokeWidth={2}\n    />\n  );\n};\n\nexport const handleRenderingChildrens = (item) => {\n  var lastPosition = 70;\n  return item.children.map(function (child) {\n    var yposition = lastPosition;\n    if (child.type === 'card') {\n      lastPosition = lastPosition + child.cards[0].height + 10;\n    } else {\n      lastPosition = lastPosition + child.height + 40;\n\n    }\n    return getChildren(child, yposition);\n  });\n};\n\nexport const calculateHeightOfMessageBox = (message) => {\n  var height = 200;\n\n  if (typeof message == 'object') {\n    if (message.length > 0) {\n      message.forEach((item) => {\n        if (item.type === 'card') {\n          var activeCard = getActiveCard(item.cards);\n          height = height + item.cards[activeCard].height;\n        } else {\n          height = height + item.height;\n        }\n      });\n    }\n  }\n  return height;\n};\nexport const getChildren = (children, lastPosition) => {\n  if (children.type === 'text') {\n    return (\n      <>\n        <Rect\n          x={20}\n          y={lastPosition}\n          fill=\"#F0F4F7\"\n          cornerRadius={5}\n          height={children.height + 30}\n          width={300}\n          stroke=\"lightGrey\"\n          strokeWidth={1}\n          shadowColor=\"#95bbdf\"\n          shadowOpacity={0.5}\n          shadowBlur={7}\n        />\n        <Text\n          x={30}\n          y={lastPosition + 20}\n          text={children.value}\n          fontSize={15}\n          width={280}\n          lineHeight={1.5}\n        />\n      </>\n    );\n  } else if (children.type === 'image') {\n    return getImage(children, lastPosition);\n  } else if (children.type === 'card') {\n    return (\n      <Group x={20} y={lastPosition}>\n        {handleRenderingCards(children)}\n      </Group>\n    );\n  }\n};\n\nexport const getImage = (children, lastPosition) => {\n  if (children.imagePreviewUrl) {\n    return (\n      <URLImage\n        x={25}\n        y={lastPosition}\n        image={children.imagePreviewUrl}\n        height={180}\n        width={300}\n      />\n    );\n  } else {\n    return (\n      <Group>\n        <Rect\n          x={20}\n          y={lastPosition}\n          cornerRadius={5}\n          height={children.height}\n          width={300}\n          fill=\"#E1E5EA\"\n          stroke=\"#8392AB\"\n          dash={[10, 5]}\n          strokeWidth={1}\n          shadowColor=\"#95bbdf\"\n          shadowOpacity={0.5}\n          shadowBlur={7}\n        />\n        <Text\n          x={120}\n          y={lastPosition + 65}\n          text={'Upload Image'}\n          fontSize={16}\n        />\n      </Group>\n    );\n  }\n};\n\nexport const handleRenderingCards = (children) => {\n  var activeCard = getActiveCard(children.cards);\n\n  return (\n    <React.Fragment>\n      <Rect\n        x={0}\n        y={0}\n        cornerRadius={5}\n        fill=\"#F2F5F7\"\n        height={children.cards[activeCard].height - 30}\n        width={300}\n        stroke=\"lightGrey\"\n        strokeWidth={1}\n        shadowColor=\"#95bbdf\"\n        shadowOpacity={0.5}\n        shadowBlur={7}\n      />\n      {getCardImage(children.cards[activeCard])}\n      <Text\n        x={10}\n        width={260}\n        y={185}\n        text={children.cards[activeCard].heading}\n        fontFamily={'Roboto'}\n        fontSize={16}\n        fontStyle={'bold'}\n        fill={'black'}\n      />\n      <Text\n        x={10}\n        y={210}\n        width={280}\n        text={children.cards[activeCard].body}\n        fontFamily={'Roboto'}\n        fontSize={15}\n        fill={'black'}\n        lineHeight={1.5}\n      />\n    </React.Fragment>\n  );\n};\nconst getCardImage = (children) => {\n  if (children.imagePreviewUrl) {\n    return (\n      <URLImage\n        x={0}\n        y={0}\n        image={children.imagePreviewUrl}\n        height={160}\n        width={300}\n      />\n    );\n  } else {\n    return (\n      <Group>\n        <Rect\n          x={20}\n          y={20}\n          fill=\"#E1E5EA\"\n          stroke=\"#8392AB\"\n          cornerRadius={5}\n          height={150}\n          width={260}\n          dash={[10, 5]}\n          strokeWidth={1}\n          shadowColor=\"#95bbdf\"\n          shadowOpacity={0.5}\n          shadowBlur={7}\n        />\n        <Text x={100} y={85} text={'Upload Image'} fontSize={16} />\n      </Group>\n    );\n  }\n};\n\ntype URLImageType = {\n  x: any,\n  y: any,\n  image: any,\n  height: any,\n  width: any,\n  onMouseOver?: any,\n  onMouseOut?: any,\n  onClick?: any\n}\nexport const URLImage = (props:URLImageType) => {\n  const [img] = useImage(props.image);\n  return <Image image={img} x={props.x} y={props.y} height={props.height} width={props.width} onMouseOver={props.onMouseOver} onMouseOut={props.onMouseOut} onClick={props.onClick}/>;\n};\n\nexport const getActiveCard = (cards) => {\n  var activeCard = cards.findIndex((obj) => obj.active == true);\n  return activeCard;\n};\n\nexport const handleWheel = (e) => {\n  e.evt.preventDefault();\n\n  const scaleBy = 0.9;\n  const stage = e.target.getStage();\n  const layer = stage.find('.layer_1')[0];\n\n  const oldScale = layer.scaleX();\n  const newScale = e.evt.deltaY > 0 ? oldScale * scaleBy : oldScale / scaleBy;\n  layer.scale({ x: newScale, y: newScale });\n\n  const layerPointerPosition = getRelativePointerPosition(layer);\n  const correctedLayerPointerPosition = {\n    x: layer.x() + layerPointerPosition.x * newScale,\n    y: layer.y() + layerPointerPosition.y * newScale,\n  };\n\n  const mousePointTo = {\n    x: correctedLayerPointerPosition.x / oldScale - layer.x() / oldScale,\n    y: correctedLayerPointerPosition.y / oldScale - layer.y() / oldScale,\n  };\n\n  const newLayerPos = {\n    x:\n      -(mousePointTo.x - correctedLayerPointerPosition.x / newScale) * newScale,\n    y:\n      -(mousePointTo.y - correctedLayerPointerPosition.y / newScale) * newScale,\n  };\n\n  layer.position(newLayerPos);\n  stage.draw();\n};\n\nexport const getRelativePointerPosition = (node) => {\n  // returns mouse pointer position relative to the input node\n  var transform = node.getAbsoluteTransform().copy();\n  transform.invert();\n  var pos = node.getStage().getPointerPosition();\n  return transform.point(pos);\n};\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/cards.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Card/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/auth/RegisterPage.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/layout/AppLayout.tsx",["455","456"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/navbar/styles.ts",[],{"ruleId":"457","severity":1,"message":"458","line":1,"column":39,"nodeType":"459","messageId":"460","endLine":1,"endColumn":45},{"ruleId":"457","severity":1,"message":"461","line":1,"column":47,"nodeType":"459","messageId":"460","endLine":1,"endColumn":56},{"ruleId":"457","severity":1,"message":"462","line":7,"column":16,"nodeType":"459","messageId":"460","endLine":7,"endColumn":22},{"ruleId":"463","severity":1,"message":"464","line":26,"column":59,"nodeType":"465","messageId":"466","endLine":26,"endColumn":61},{"ruleId":"463","severity":1,"message":"464","line":34,"column":19,"nodeType":"465","messageId":"466","endLine":34,"endColumn":21},{"ruleId":"463","severity":1,"message":"464","line":109,"column":19,"nodeType":"465","messageId":"466","endLine":109,"endColumn":21},{"ruleId":"463","severity":1,"message":"464","line":134,"column":19,"nodeType":"465","messageId":"466","endLine":134,"endColumn":21},{"ruleId":"463","severity":1,"message":"464","line":157,"column":19,"nodeType":"465","messageId":"466","endLine":157,"endColumn":21},{"ruleId":"457","severity":1,"message":"467","line":5,"column":10,"nodeType":"459","messageId":"460","endLine":5,"endColumn":23},{"ruleId":"463","severity":1,"message":"464","line":20,"column":21,"nodeType":"465","messageId":"466","endLine":20,"endColumn":23},{"ruleId":"463","severity":1,"message":"464","line":30,"column":21,"nodeType":"465","messageId":"466","endLine":30,"endColumn":23},{"ruleId":"468","severity":1,"message":"469","line":31,"column":44,"nodeType":"470","messageId":"471","endLine":31,"endColumn":46},{"ruleId":"463","severity":1,"message":"464","line":32,"column":23,"nodeType":"465","messageId":"466","endLine":32,"endColumn":25},{"ruleId":"463","severity":1,"message":"464","line":52,"column":23,"nodeType":"465","messageId":"466","endLine":52,"endColumn":25},{"ruleId":"472","severity":1,"message":"473","line":69,"column":6,"nodeType":"474","endLine":69,"endColumn":8,"suggestions":"475"},{"ruleId":"476","replacedBy":"477"},{"ruleId":"478","replacedBy":"479"},{"ruleId":"457","severity":1,"message":"480","line":20,"column":8,"nodeType":"459","messageId":"460","endLine":20,"endColumn":17},{"ruleId":"457","severity":1,"message":"481","line":23,"column":9,"nodeType":"459","messageId":"460","endLine":23,"endColumn":20},{"ruleId":"476","replacedBy":"482"},{"ruleId":"478","replacedBy":"483"},{"ruleId":"476","replacedBy":"484"},{"ruleId":"478","replacedBy":"485"},{"ruleId":"476","replacedBy":"486"},{"ruleId":"478","replacedBy":"487"},{"ruleId":"476","replacedBy":"488"},{"ruleId":"478","replacedBy":"489"},{"ruleId":"457","severity":1,"message":"490","line":5,"column":22,"nodeType":"459","messageId":"460","endLine":5,"endColumn":30},{"ruleId":"457","severity":1,"message":"480","line":2,"column":8,"nodeType":"459","messageId":"460","endLine":2,"endColumn":17},{"ruleId":"457","severity":1,"message":"480","line":2,"column":8,"nodeType":"459","messageId":"460","endLine":2,"endColumn":17},{"ruleId":"457","severity":1,"message":"491","line":2,"column":27,"nodeType":"459","messageId":"460","endLine":2,"endColumn":33},{"ruleId":"457","severity":1,"message":"492","line":2,"column":41,"nodeType":"459","messageId":"460","endLine":2,"endColumn":46},{"ruleId":"457","severity":1,"message":"493","line":2,"column":48,"nodeType":"459","messageId":"460","endLine":2,"endColumn":54},{"ruleId":"457","severity":1,"message":"494","line":25,"column":10,"nodeType":"459","messageId":"460","endLine":25,"endColumn":19},{"ruleId":"463","severity":1,"message":"464","line":80,"column":23,"nodeType":"465","messageId":"466","endLine":80,"endColumn":25},{"ruleId":"463","severity":1,"message":"464","line":83,"column":17,"nodeType":"465","messageId":"466","endLine":83,"endColumn":19},{"ruleId":"463","severity":1,"message":"464","line":92,"column":23,"nodeType":"465","messageId":"466","endLine":92,"endColumn":25},{"ruleId":"457","severity":1,"message":"495","line":2,"column":10,"nodeType":"459","messageId":"460","endLine":2,"endColumn":20},{"ruleId":"457","severity":1,"message":"496","line":3,"column":10,"nodeType":"459","messageId":"460","endLine":3,"endColumn":15},{"ruleId":"457","severity":1,"message":"497","line":2,"column":8,"nodeType":"459","messageId":"460","endLine":2,"endColumn":15},{"ruleId":"476","replacedBy":"498"},{"ruleId":"478","replacedBy":"499"},{"ruleId":"457","severity":1,"message":"500","line":1,"column":17,"nodeType":"459","messageId":"460","endLine":1,"endColumn":25},{"ruleId":"457","severity":1,"message":"461","line":1,"column":27,"nodeType":"459","messageId":"460","endLine":1,"endColumn":36},{"ruleId":"463","severity":1,"message":"501","line":20,"column":34,"nodeType":"465","messageId":"466","endLine":20,"endColumn":36},{"ruleId":"463","severity":1,"message":"501","line":47,"column":34,"nodeType":"465","messageId":"466","endLine":47,"endColumn":36},{"ruleId":"457","severity":1,"message":"458","line":1,"column":27,"nodeType":"459","messageId":"460","endLine":1,"endColumn":33},{"ruleId":"457","severity":1,"message":"461","line":1,"column":35,"nodeType":"459","messageId":"460","endLine":1,"endColumn":44},{"ruleId":"457","severity":1,"message":"458","line":1,"column":27,"nodeType":"459","messageId":"460","endLine":1,"endColumn":33},{"ruleId":"457","severity":1,"message":"461","line":1,"column":35,"nodeType":"459","messageId":"460","endLine":1,"endColumn":44},{"ruleId":"457","severity":1,"message":"502","line":10,"column":8,"nodeType":"459","messageId":"460","endLine":10,"endColumn":16},{"ruleId":"457","severity":1,"message":"461","line":1,"column":27,"nodeType":"459","messageId":"460","endLine":1,"endColumn":36},{"ruleId":"457","severity":1,"message":"467","line":5,"column":10,"nodeType":"459","messageId":"460","endLine":5,"endColumn":23},{"ruleId":"457","severity":1,"message":"462","line":7,"column":16,"nodeType":"459","messageId":"460","endLine":7,"endColumn":22},{"ruleId":"457","severity":1,"message":"503","line":25,"column":9,"nodeType":"459","messageId":"460","endLine":25,"endColumn":19},{"ruleId":"457","severity":1,"message":"504","line":26,"column":9,"nodeType":"459","messageId":"460","endLine":26,"endColumn":21},{"ruleId":"463","severity":1,"message":"464","line":31,"column":21,"nodeType":"465","messageId":"466","endLine":31,"endColumn":23},{"ruleId":"463","severity":1,"message":"464","line":40,"column":25,"nodeType":"465","messageId":"466","endLine":40,"endColumn":27},{"ruleId":"463","severity":1,"message":"501","line":50,"column":25,"nodeType":"465","messageId":"466","endLine":50,"endColumn":27},{"ruleId":"463","severity":1,"message":"464","line":65,"column":23,"nodeType":"465","messageId":"466","endLine":65,"endColumn":25},{"ruleId":"468","severity":1,"message":"469","line":66,"column":49,"nodeType":"470","messageId":"471","endLine":66,"endColumn":51},{"ruleId":"463","severity":1,"message":"464","line":67,"column":25,"nodeType":"465","messageId":"466","endLine":67,"endColumn":27},{"ruleId":"463","severity":1,"message":"464","line":71,"column":27,"nodeType":"465","messageId":"466","endLine":71,"endColumn":29},{"ruleId":"463","severity":1,"message":"464","line":91,"column":21,"nodeType":"465","messageId":"466","endLine":91,"endColumn":23},{"ruleId":"463","severity":1,"message":"464","line":93,"column":23,"nodeType":"465","messageId":"466","endLine":93,"endColumn":25},{"ruleId":"463","severity":1,"message":"464","line":95,"column":27,"nodeType":"465","messageId":"466","endLine":95,"endColumn":29},{"ruleId":"463","severity":1,"message":"464","line":98,"column":27,"nodeType":"465","messageId":"466","endLine":98,"endColumn":29},{"ruleId":"463","severity":1,"message":"464","line":114,"column":48,"nodeType":"465","messageId":"466","endLine":114,"endColumn":50},{"ruleId":"463","severity":1,"message":"464","line":127,"column":28,"nodeType":"465","messageId":"466","endLine":127,"endColumn":30},{"ruleId":"463","severity":1,"message":"464","line":143,"column":23,"nodeType":"465","messageId":"466","endLine":143,"endColumn":25},{"ruleId":"463","severity":1,"message":"464","line":145,"column":25,"nodeType":"465","messageId":"466","endLine":145,"endColumn":27},{"ruleId":"463","severity":1,"message":"464","line":147,"column":27,"nodeType":"465","messageId":"466","endLine":147,"endColumn":29},{"ruleId":"463","severity":1,"message":"464","line":177,"column":21,"nodeType":"465","messageId":"466","endLine":177,"endColumn":23},{"ruleId":"468","severity":1,"message":"469","line":178,"column":44,"nodeType":"470","messageId":"471","endLine":178,"endColumn":46},{"ruleId":"463","severity":1,"message":"464","line":179,"column":23,"nodeType":"465","messageId":"466","endLine":179,"endColumn":25},{"ruleId":"468","severity":1,"message":"469","line":180,"column":43,"nodeType":"470","messageId":"471","endLine":180,"endColumn":45},{"ruleId":"463","severity":1,"message":"464","line":181,"column":25,"nodeType":"465","messageId":"466","endLine":181,"endColumn":27},{"ruleId":"463","severity":1,"message":"464","line":206,"column":21,"nodeType":"465","messageId":"466","endLine":206,"endColumn":23},{"ruleId":"468","severity":1,"message":"469","line":207,"column":44,"nodeType":"470","messageId":"471","endLine":207,"endColumn":46},{"ruleId":"463","severity":1,"message":"464","line":208,"column":23,"nodeType":"465","messageId":"466","endLine":208,"endColumn":25},{"ruleId":"468","severity":1,"message":"469","line":209,"column":43,"nodeType":"470","messageId":"471","endLine":209,"endColumn":45},{"ruleId":"463","severity":1,"message":"464","line":210,"column":25,"nodeType":"465","messageId":"466","endLine":210,"endColumn":27},{"ruleId":"463","severity":1,"message":"464","line":230,"column":21,"nodeType":"465","messageId":"466","endLine":230,"endColumn":23},{"ruleId":"468","severity":1,"message":"505","line":253,"column":70,"nodeType":"470","messageId":"506","endLine":253,"endColumn":72},{"ruleId":"507","severity":1,"message":"508","line":261,"column":23,"nodeType":"509","endLine":261,"endColumn":74},{"ruleId":"457","severity":1,"message":"510","line":4,"column":30,"nodeType":"459","messageId":"460","endLine":4,"endColumn":35},{"ruleId":"457","severity":1,"message":"511","line":32,"column":17,"nodeType":"459","messageId":"460","endLine":32,"endColumn":25},{"ruleId":"463","severity":1,"message":"464","line":42,"column":64,"nodeType":"465","messageId":"466","endLine":42,"endColumn":66},{"ruleId":"463","severity":1,"message":"464","line":43,"column":21,"nodeType":"465","messageId":"466","endLine":43,"endColumn":23},{"ruleId":"457","severity":1,"message":"512","line":60,"column":9,"nodeType":"459","messageId":"460","endLine":60,"endColumn":28},{"ruleId":"463","severity":1,"message":"464","line":63,"column":21,"nodeType":"465","messageId":"466","endLine":63,"endColumn":23},{"ruleId":"463","severity":1,"message":"464","line":81,"column":21,"nodeType":"465","messageId":"466","endLine":81,"endColumn":23},{"ruleId":"463","severity":1,"message":"464","line":84,"column":21,"nodeType":"465","messageId":"466","endLine":84,"endColumn":23},{"ruleId":"463","severity":1,"message":"464","line":93,"column":21,"nodeType":"465","messageId":"466","endLine":93,"endColumn":23},{"ruleId":"463","severity":1,"message":"464","line":107,"column":21,"nodeType":"465","messageId":"466","endLine":107,"endColumn":23},{"ruleId":"463","severity":1,"message":"464","line":110,"column":21,"nodeType":"465","messageId":"466","endLine":110,"endColumn":23},{"ruleId":"463","severity":1,"message":"464","line":119,"column":21,"nodeType":"465","messageId":"466","endLine":119,"endColumn":23},{"ruleId":"463","severity":1,"message":"464","line":131,"column":19,"nodeType":"465","messageId":"466","endLine":131,"endColumn":21},{"ruleId":"463","severity":1,"message":"464","line":143,"column":19,"nodeType":"465","messageId":"466","endLine":143,"endColumn":21},{"ruleId":"463","severity":1,"message":"464","line":189,"column":21,"nodeType":"465","messageId":"466","endLine":189,"endColumn":23},{"ruleId":"463","severity":1,"message":"464","line":230,"column":17,"nodeType":"465","messageId":"466","endLine":230,"endColumn":19},{"ruleId":"472","severity":1,"message":"513","line":255,"column":6,"nodeType":"474","endLine":255,"endColumn":8,"suggestions":"514"},{"ruleId":"463","severity":1,"message":"464","line":443,"column":50,"nodeType":"465","messageId":"466","endLine":443,"endColumn":52},{"ruleId":"463","severity":1,"message":"464","line":447,"column":49,"nodeType":"465","messageId":"466","endLine":447,"endColumn":51},{"ruleId":"515","severity":1,"message":"516","line":3,"column":1,"nodeType":"517","endLine":12,"endColumn":3},{"ruleId":"457","severity":1,"message":"518","line":2,"column":10,"nodeType":"459","messageId":"460","endLine":2,"endColumn":14},{"ruleId":"457","severity":1,"message":"458","line":1,"column":27,"nodeType":"459","messageId":"460","endLine":1,"endColumn":33},{"ruleId":"457","severity":1,"message":"461","line":1,"column":35,"nodeType":"459","messageId":"460","endLine":1,"endColumn":44},{"ruleId":"457","severity":1,"message":"519","line":1,"column":36,"nodeType":"459","messageId":"460","endLine":1,"endColumn":39},{"ruleId":"457","severity":1,"message":"520","line":7,"column":10,"nodeType":"459","messageId":"460","endLine":7,"endColumn":21},{"ruleId":"472","severity":1,"message":"521","line":41,"column":6,"nodeType":"474","endLine":41,"endColumn":14,"suggestions":"522"},{"ruleId":"523","severity":1,"message":"524","line":62,"column":13,"nodeType":"509","endLine":62,"endColumn":45},{"ruleId":"457","severity":1,"message":"467","line":5,"column":10,"nodeType":"459","messageId":"460","endLine":5,"endColumn":23},{"ruleId":"463","severity":1,"message":"464","line":18,"column":21,"nodeType":"465","messageId":"466","endLine":18,"endColumn":23},{"ruleId":"463","severity":1,"message":"464","line":35,"column":23,"nodeType":"465","messageId":"466","endLine":35,"endColumn":25},{"ruleId":"468","severity":1,"message":"469","line":36,"column":46,"nodeType":"470","messageId":"471","endLine":36,"endColumn":48},{"ruleId":"463","severity":1,"message":"464","line":37,"column":25,"nodeType":"465","messageId":"466","endLine":37,"endColumn":27},{"ruleId":"463","severity":1,"message":"464","line":59,"column":21,"nodeType":"465","messageId":"466","endLine":59,"endColumn":23},{"ruleId":"507","severity":1,"message":"508","line":82,"column":11,"nodeType":"509","endLine":82,"endColumn":58},{"ruleId":"457","severity":1,"message":"494","line":27,"column":10,"nodeType":"459","messageId":"460","endLine":27,"endColumn":19},{"ruleId":"472","severity":1,"message":"525","line":49,"column":6,"nodeType":"474","endLine":49,"endColumn":28,"suggestions":"526"},{"ruleId":"463","severity":1,"message":"464","line":83,"column":23,"nodeType":"465","messageId":"466","endLine":83,"endColumn":25},{"ruleId":"463","severity":1,"message":"464","line":86,"column":17,"nodeType":"465","messageId":"466","endLine":86,"endColumn":19},{"ruleId":"463","severity":1,"message":"464","line":95,"column":23,"nodeType":"465","messageId":"466","endLine":95,"endColumn":25},{"ruleId":"476","replacedBy":"527"},{"ruleId":"478","replacedBy":"528"},{"ruleId":"476","replacedBy":"529"},{"ruleId":"478","replacedBy":"530"},{"ruleId":"515","severity":1,"message":"516","line":1,"column":1,"nodeType":"517","endLine":30,"endColumn":2},{"ruleId":"457","severity":1,"message":"531","line":5,"column":10,"nodeType":"459","messageId":"460","endLine":5,"endColumn":20},{"ruleId":"457","severity":1,"message":"532","line":2,"column":10,"nodeType":"459","messageId":"460","endLine":2,"endColumn":23},{"ruleId":"457","severity":1,"message":"462","line":3,"column":16,"nodeType":"459","messageId":"460","endLine":3,"endColumn":22},{"ruleId":"476","replacedBy":"533"},{"ruleId":"478","replacedBy":"534"},{"ruleId":"457","severity":1,"message":"495","line":2,"column":10,"nodeType":"459","messageId":"460","endLine":2,"endColumn":20},{"ruleId":"457","severity":1,"message":"535","line":28,"column":25,"nodeType":"459","messageId":"460","endLine":28,"endColumn":39},{"ruleId":"463","severity":1,"message":"464","line":231,"column":56,"nodeType":"465","messageId":"466","endLine":231,"endColumn":58},{"ruleId":"457","severity":1,"message":"536","line":4,"column":8,"nodeType":"459","messageId":"460","endLine":4,"endColumn":18},{"ruleId":"457","severity":1,"message":"537","line":13,"column":9,"nodeType":"459","messageId":"460","endLine":13,"endColumn":21},"@typescript-eslint/no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'uuidv4' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'AddTextButton' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'register'. Either include it or remove the dependency array.","ArrayExpression",["538"],"no-native-reassign",["539"],"no-negated-in-lhs",["540"],"'AppLayout' is defined but never used.","'authContext' is assigned a value but never used.",["539"],["540"],["539"],["540"],["539"],["540"],["539"],["540"],"'FormLink' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'isLoading' is assigned a value but never used.","'darkerGrey' is defined but never used.","'media' is defined but never used.","'Toolbar' is defined but never used.",["539"],["540"],"'useState' is defined but never used.","Expected '!==' and instead saw '!='.","'feature2' is defined but never used.","'headingRef' is assigned a value but never used.","'paragraphRef' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Image' is defined but never used.","'setState' is assigned a value but never used.","'calculateCardHeight' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'props.match.params.id' and 'setBuilderState'. Either include them or remove the dependency array.",["541"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'grey' is defined but never used.","'Ref' is defined but never used.","'TiFlowMerge' is defined but never used.","React Hook useEffect has a missing dependency: 'handleSidebarState'. Either include it or remove the dependency array. If 'handleSidebarState' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["542"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","React Hook useEffect has a missing dependency: 'botId'. Either include it or remove the dependency array.",["543"],["539"],["540"],["539"],["540"],"'AuthButton' is defined but never used.","'FlowStateType' is defined but never used.",["539"],["540"],"'onRequestClose' is assigned a value but never used.","'Breadcrumb' is defined but never used.","'sidebarState' is assigned a value but never used.",{"desc":"544","fix":"545"},"no-global-assign","no-unsafe-negation",{"desc":"546","fix":"547"},{"desc":"548","fix":"549"},{"desc":"550","fix":"551"},"Update the dependencies array to be: [register]",{"range":"552","text":"553"},"Update the dependencies array to be: [props.match.params.id, setBuilderState]",{"range":"554","text":"555"},"Update the dependencies array to be: [handleSidebarState, isOpen]",{"range":"556","text":"557"},"Update the dependencies array to be: [pageNumber, lastPage, botId]",{"range":"558","text":"559"},[2204,2206],"[register]",[6813,6815],"[props.match.params.id, setBuilderState]",[1369,1377],"[handleSidebarState, isOpen]",[1682,1704],"[pageNumber, lastPage, botId]"]