[{"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Flows/index.tsx":"1","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Toolbar/index.tsx":"2","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Image/index.tsx":"3","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Card/index.tsx":"4","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Image/styles.ts":"5","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Text/index.tsx":"6","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Text/styles.ts":"7","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Toolbar/styles.ts":"8","/home/rabinson/Freelancing/ShipboardBot/frontend/src/styles/theme.ts":"9","/home/rabinson/Freelancing/ShipboardBot/frontend/src/App.tsx":"10","/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Auth/reducer.ts":"11","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/LandingPage.tsx":"12","/home/rabinson/Freelancing/ShipboardBot/frontend/src/routes/ProtectedRoute.tsx":"13","/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Modal/ModalProvider.tsx":"14","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Templates/index.tsx":"15","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Bots/index.tsx":"16","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/form.ts":"17","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/Table/styles.ts":"18","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/Dropdown/styles.ts":"19","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/header/index.tsx":"20","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/DeleteModal.tsx":"21","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Flows/helper.tsx":"22","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/feature/index.tsx":"23","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/info/styles.ts":"24","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/navbar/styles.ts":"25","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Sidebar/styles.ts":"26","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Card/styles.ts":"27","/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Auth/AuthProvider.tsx":"28","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/error/404.tsx":"29","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/auth/RegisterPage.tsx":"30","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/layout/AuthLayout.tsx":"31","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/Modal.tsx":"32","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/footer/index.tsx":"33","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/navbar/index.tsx":"34","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/feature/styles.ts":"35","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Sidebar/index.tsx":"36","/home/rabinson/Freelancing/ShipboardBot/frontend/src/utils/storage.ts":"37","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/buttons.ts":"38","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/Pagination/index.tsx":"39","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/header/styles.ts":"40","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/Pagination/styles.ts":"41","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/footer/styles.ts":"42","/home/rabinson/Freelancing/ShipboardBot/frontend/src/styles/mediaQueries.ts":"43","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/auth/ForgotPasswordPage.tsx":"44","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Settings/index.tsx":"45","/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/auth.ts":"46","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/layout/AppLayout.tsx":"47","/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Builder/BuilderProvider.tsx":"48","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/info/index.tsx":"49","/home/rabinson/Freelancing/ShipboardBot/frontend/src/index.tsx":"50","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Dashboard/index.tsx":"51","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Flows/styles.ts":"52","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/typography.ts":"53","/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/bots.ts":"54","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/auth/LoginPage.tsx":"55","/home/rabinson/Freelancing/ShipboardBot/frontend/src/constants/urls.ts":"56"},{"size":11691,"mtime":1611285114389,"results":"57","hashOfConfig":"58"},{"size":5420,"mtime":1611241317414,"results":"59","hashOfConfig":"58"},{"size":2555,"mtime":1611030422899,"results":"60","hashOfConfig":"58"},{"size":9574,"mtime":1611072281689,"results":"61","hashOfConfig":"58"},{"size":1664,"mtime":1610076394115,"results":"62","hashOfConfig":"58"},{"size":2581,"mtime":1611242525486,"results":"63","hashOfConfig":"58"},{"size":1065,"mtime":1610160837489,"results":"64","hashOfConfig":"58"},{"size":1746,"mtime":1610853991933,"results":"65","hashOfConfig":"58"},{"size":300,"mtime":1606619841444,"results":"66","hashOfConfig":"58"},{"size":2024,"mtime":1611287788342,"results":"67","hashOfConfig":"58"},{"size":442,"mtime":1607166058000,"results":"68","hashOfConfig":"58"},{"size":395,"mtime":1606572185322,"results":"69","hashOfConfig":"58"},{"size":944,"mtime":1611287624293,"results":"70","hashOfConfig":"58"},{"size":3565,"mtime":1608961298239,"results":"71","hashOfConfig":"58"},{"size":210,"mtime":1610158645219,"results":"72","hashOfConfig":"58"},{"size":4577,"mtime":1611287202994,"results":"73","hashOfConfig":"58"},{"size":945,"mtime":1608217208422,"results":"74","hashOfConfig":"58"},{"size":1615,"mtime":1607262024293,"results":"75","hashOfConfig":"58"},{"size":605,"mtime":1607959318429,"results":"76","hashOfConfig":"58"},{"size":962,"mtime":1607398449634,"results":"77","hashOfConfig":"58"},{"size":1108,"mtime":1608088908001,"results":"78","hashOfConfig":"58"},{"size":6487,"mtime":1611242174813,"results":"79","hashOfConfig":"58"},{"size":2469,"mtime":1607354234054,"results":"80","hashOfConfig":"58"},{"size":1251,"mtime":1607358308147,"results":"81","hashOfConfig":"58"},{"size":596,"mtime":1607358244451,"results":"82","hashOfConfig":"58"},{"size":2446,"mtime":1608360773902,"results":"83","hashOfConfig":"58"},{"size":2734,"mtime":1610160143779,"results":"84","hashOfConfig":"58"},{"size":1534,"mtime":1607842467004,"results":"85","hashOfConfig":"58"},{"size":467,"mtime":1608091184084,"results":"86","hashOfConfig":"58"},{"size":4457,"mtime":1607849994798,"results":"87","hashOfConfig":"58"},{"size":3062,"mtime":1607357777066,"results":"88","hashOfConfig":"58"},{"size":4044,"mtime":1608088537269,"results":"89","hashOfConfig":"58"},{"size":795,"mtime":1607276608868,"results":"90","hashOfConfig":"58"},{"size":717,"mtime":1607357496043,"results":"91","hashOfConfig":"58"},{"size":707,"mtime":1606842094420,"results":"92","hashOfConfig":"58"},{"size":3609,"mtime":1608218330018,"results":"93","hashOfConfig":"58"},{"size":330,"mtime":1606965896953,"results":"94","hashOfConfig":"58"},{"size":2109,"mtime":1608351731407,"results":"95","hashOfConfig":"58"},{"size":1433,"mtime":1608056204918,"results":"96","hashOfConfig":"58"},{"size":2194,"mtime":1607358477789,"results":"97","hashOfConfig":"58"},{"size":686,"mtime":1607915643490,"results":"98","hashOfConfig":"58"},{"size":758,"mtime":1607358268935,"results":"99","hashOfConfig":"58"},{"size":437,"mtime":1607357171179,"results":"100","hashOfConfig":"58"},{"size":2699,"mtime":1607850305009,"results":"101","hashOfConfig":"58"},{"size":218,"mtime":1607998072129,"results":"102","hashOfConfig":"58"},{"size":1159,"mtime":1607840479831,"results":"103","hashOfConfig":"58"},{"size":1199,"mtime":1610850848463,"results":"104","hashOfConfig":"58"},{"size":1175,"mtime":1610988958710,"results":"105","hashOfConfig":"58"},{"size":1029,"mtime":1607690783508,"results":"106","hashOfConfig":"58"},{"size":515,"mtime":1607764359769,"results":"107","hashOfConfig":"58"},{"size":159,"mtime":1607998049825,"results":"108","hashOfConfig":"58"},{"size":517,"mtime":1610853338359,"results":"109","hashOfConfig":"58"},{"size":1320,"mtime":1609667047505,"results":"110","hashOfConfig":"58"},{"size":976,"mtime":1608088875135,"results":"111","hashOfConfig":"58"},{"size":3083,"mtime":1608089518101,"results":"112","hashOfConfig":"58"},{"size":378,"mtime":1607839803392,"results":"113","hashOfConfig":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"v8ty68",{"filePath":"116","messages":"117","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"123"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"129"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"155"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"143"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"143"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"119"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"146"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"119"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"204","messages":"205","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"155"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"143"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"143"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"155"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"143"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"143"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"143"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Flows/index.tsx",["255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Toolbar/index.tsx",["275","276","277","278","279","280","281","282"],"import React, { useContext, useState, useRef, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { ToolbarWrapper, ToolbarMenu, ToolbarButtonGroup } from './styles';\nimport { ToolbarHeading, VerticalGap } from '../../../common/typography';\nimport { ToolbarButton } from '../../../common/buttons';\nimport { BuilderContext } from '../../../../services/Builder/BuilderProvider';\nimport { v4 as uuidv4 } from 'uuid';\nimport FormImage from '../Form/Image/index';\nimport FormText from '../Form/Text/index';\nimport FormCard from '../Form/Card/index';\nimport { InputField } from '../../../common/form';\nimport Textarea from 'react-expanding-textarea';\n\nconst Toolbar = ({ id, hideToolbar }) => {\n  const [builderState, setBuilderState] = useContext(BuilderContext);\n  const [isChangingTitle, setIsChangingTitle] = useState(false);\n  const { register, handleSubmit } = useForm({ mode: 'onChange' });\n\n  const titleRef = useRef<HTMLInputElement>(null);\n\n  //Find index of specific object using findIndex method.\n  const objIndex = builderState.findIndex((obj) => obj.id == id);\n\n  const onChangeTitle = (data) => {\n    setBuilderState(\n      builderState.map((item, ind) => {\n        if (ind == objIndex) {\n         item.name = data.title\n        }\n        return item;\n      })\n    );\n  };\n\n  //UseEffects\n  useEffect(() => {\n    if (titleRef.current) {\n      register(titleRef.current);\n      titleRef.current.focus();\n    }\n  }, [isChangingTitle]);\n\n  return (\n    <ToolbarWrapper>\n      <ToolbarMenu>\n        <div className={isChangingTitle ? 'header active' : 'header'}>\n          <form onBlur={handleSubmit(onChangeTitle)}>\n            <Textarea\n              maxLength={35}\n              className=\"heading-input\"\n              ref={titleRef}\n              id=\"title\"\n              name=\"title\"\n              defaultValue={builderState[objIndex].name}\n              onBlur={() => setIsChangingTitle(false)}\n            />\n          </form>\n        </div>\n        {builderState[objIndex].children.length > 0 ? (\n          builderState[objIndex].children.map((child) => {\n            return (\n              <React.Fragment>\n                <VerticalGap size=\"3\" />\n                {getChildren(child, objIndex)}\n              </React.Fragment>\n            );\n          })\n        ) : (\n          <React.Fragment>\n            <VerticalGap size=\"3\" />\n            <p className=\"no-content-text\">No content</p>\n          </React.Fragment>\n        )}\n        <VerticalGap size=\"3\" />\n        <ToolbarButtons index={objIndex} />\n      </ToolbarMenu>\n    </ToolbarWrapper>\n  );\n};\n\nexport default Toolbar;\n\nconst ToolbarButtons = ({ index }) => {\n  const [builderState, setBuilderState] = useContext(BuilderContext);\n\n  const addText = () => {\n    let height = builderState[index].height;\n    height = height + 50;\n    setBuilderState(\n      builderState.map((item, ind) => {\n        if (ind == index) {\n          item.height = height;\n          item.children.push({\n            id: uuidv4(),\n            type: 'text',\n            value: 'Change text',\n            height: 50,\n          });\n        }\n        return item;\n      })\n    );\n  };\n\n  const addCard = () => {\n    let height = builderState[index].height;\n    height = height + 150;\n\n    setBuilderState(\n      builderState.map((item, ind) => {\n        if (ind == index) {\n          item.height = height;\n          item.children.push({\n            id: uuidv4(),\n            type: 'card',\n            cards: [\n              {\n                id: uuidv4(),\n                active: true,\n                selectedImage: null,\n                imagePreviewUrl: '',\n                heading: 'subtitle #11',\n                body: 'This is the body paragraph',\n                height: 150,\n              },\n            ],\n          });\n        }\n        return item;\n      })\n    );\n  };\n\n  const addImage = () => {\n    let height = builderState[index].height;\n    height = height + 150;\n    setBuilderState(\n      builderState.map((item, ind) => {\n        if (ind == index) {\n          item.height = height;\n          item.children.push({\n            id: uuidv4(),\n            type: 'image',\n            height: 150,\n            imagePreviewUrl: '',\n            selectedImage: null,\n          });\n        }\n        return item;\n      })\n    );\n  };\n\n  return (\n    <React.Fragment>\n      <ToolbarButtonGroup>\n        <ToolbarButton\n          height=\"6rem\"\n          width=\"6rem\"\n          fontSize=\"1.2rem\"\n          onClick={addText}>\n          + Text\n        </ToolbarButton>\n        <ToolbarButton\n          height=\"6rem\"\n          width=\"6rem\"\n          fontSize=\"1.2rem\"\n          onClick={addCard}>\n          + Card\n        </ToolbarButton>\n        <ToolbarButton\n          height=\"6rem\"\n          width=\"6rem\"\n          fontSize=\"1.2rem\"\n          onClick={addImage}>\n          + Image\n        </ToolbarButton>\n        <ToolbarButton height=\"4rem\" width=\"25rem\">\n          Next Button\n        </ToolbarButton>\n      </ToolbarButtonGroup>\n    </React.Fragment>\n  );\n};\n\nconst getChildren = (children, messageId) => {\n  if (children.type === 'text') {\n    return <FormText messageId={messageId} childId={children.id} />;\n  } else if (children.type === 'image') {\n    return <FormImage messageId={messageId} childId={children.id} />;\n  } else if (children.type === 'card') {\n    return <FormCard messageId={messageId} childId={children.id} />;\n  }\n};\n",["283","284"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Image/index.tsx",["285","286","287","288","289","290","291"],"import React, { useEffect, useRef, useContext } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { ImageWrapper } from './styles';\nimport { BuilderContext } from '../../../../../services/Builder/BuilderProvider';\nimport { AddTextButton } from '../../../../common/buttons';\nimport { BiImageAdd, BiTrash } from 'react-icons/bi';\n\nconst FormImage = ({ messageId, childId }) => {\n  const [builderState, setBuilderState] = useContext(BuilderContext);\n  const { register, handleSubmit } = useForm({ mode: 'onChange' });\n\n  const imageRef = useRef<HTMLInputElement>(null);\n\n  //Find index of specific object using findIndex method.\n  const childIndex = builderState[messageId].children.findIndex(\n    (obj) => obj.id == childId\n  );\n\n  const image = builderState[messageId].children[childIndex];\n\n  const onSubmit = (data) => {\n    let reader = new FileReader();\n\n    reader.onloadend = () => {\n      var height = 180;\n\n      setBuilderState(\n        builderState.map((item, index) => {\n          if (index == messageId) {\n            item.children.map((child, ind) => {\n              if (ind == childIndex) {\n                child.selectedImage = data.image[0];\n                child.imagePreviewUrl = reader.result;\n                child.height = height;\n              }\n            });\n          }\n          return item;\n        })\n      );\n    };\n\n    reader.readAsDataURL(data.image[0]);\n  };\n\n  const handleDelete = () => {\n    setBuilderState(\n      builderState.map((item, index) => {\n        if (index == messageId) {\n          item.height -= 150;\n          item.children.splice(childIndex,1)\n        }\n        return item;\n      })\n    );\n  };\n\n  useEffect(() => {\n    if (imageRef.current) {\n      register(imageRef.current);\n    }\n  });\n\n  return (\n    <ImageWrapper>\n      {image.imagePreviewUrl ? (\n        <div>\n          <img src={image.imagePreviewUrl} alt=\"image\" />\n          {/* <AddTextButton height=\"4rem\" width=\"100%\">\n            Add Button\n          </AddTextButton> */}\n        </div>\n      ) : (\n        <form onChange={handleSubmit(onSubmit)}>\n          <input\n            ref={imageRef}\n            type=\"file\"\n            id={'file' + childIndex}\n            name=\"image\"\n            accept=\"image/*\"\n          />\n          <label htmlFor={'file' + childIndex}>\n            <BiImageAdd />\n            <p>Upload image</p>\n          </label>\n        </form>\n      )}\n      <button className=\"action-btn\">\n        <BiTrash onClick={handleDelete} />\n      </button>\n    </ImageWrapper>\n  );\n};\n\nexport default FormImage;\n",["292","293"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Card/index.tsx",["294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326"],"import React, { useState, useEffect, useRef, useContext } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { CardSlider, CardWrapper } from './styles';\nimport { BuilderContext } from '../../../../../services/Builder/BuilderProvider';\nimport { AddTextButton } from '../../../../common/buttons';\nimport { ImageWrapper } from '../Image/styles';\nimport { v4 as uuidv4 } from 'uuid';\nimport Textarea from 'react-expanding-textarea';\nimport {\n  BiImageAdd,\n  BiTrash,\n  BiChevronRight,\n  BiChevronLeft,\n  BiPlus,\n} from 'react-icons/bi';\n\nconst FormCard = ({ messageId, childId }) => {\n  const [builderState, setBuilderState] = useContext(BuilderContext);\n  const { register, handleSubmit } = useForm({ mode: 'onChange' });\n  const [isChangingHeading, setIsChangingHeading] = useState(false);\n  const [isChangingBody, setIsChangingBody] = useState(false);\n\n  const headingRef = useRef<HTMLInputElement>(null);\n  const paragraphRef = useRef<HTMLTextAreaElement>(null);\n  const cardRef = useRef<HTMLDivElement>(null);\n\n  //Find index of specific object using findIndex method.\n  const childIndex = builderState[messageId].children.findIndex(\n    (obj) => obj.id == childId\n  );\n\n  //Card Navigation functions\n  const handleNextButton = (id) => {\n    const cards = builderState[messageId].children[childIndex].cards;\n    const length = cards.length - 1;\n    const activeCardIndex = getActiveCardIndex(cards);\n\n    if (activeCardIndex == length) {\n      makeCardActive(activeCardIndex + 1, activeCardIndex, length + 2, true);\n    } else {\n      makeCardActive(activeCardIndex + 1, activeCardIndex);\n    }\n  };\n\n  const handlePreviousButton = () => {\n    const cards = builderState[messageId].children[childIndex].cards;\n    const activeCardIndex = getActiveCardIndex(cards);\n    if (activeCardIndex != 0) {\n      makeCardActive(activeCardIndex - 1, activeCardIndex);\n    }\n  };\n\n  const makeCardActive = (\n    cardIndex,\n    activeCardIndex,\n    length = 0,\n    addNew = false\n  ) => {\n    if (addNew) {\n      setBuilderState([\n        ...builderState,\n        (builderState[messageId].children[childIndex].cards[\n          activeCardIndex\n        ].active = false),\n        builderState[messageId].children[childIndex].cards.push({\n          id: uuidv4(),\n          active: true,\n          selectedImage: null,\n          imagePreviewUrl: '',\n          heading: 'Subtitle #' + length,\n          body: 'This is body paragraph',\n          height: 290,\n        }),\n      ]);\n    } else {\n      setBuilderState(builderState.map((message, index) => { \n        if (index == messageId) { \n          message.children.map((child, ind) => { \n            if (ind == childIndex) {\n              child.cards.map((card, inx) => { \n                if (inx == cardIndex) { \n                  card.active = true\n                }\n                if (inx == activeCardIndex) { \n                  card.active = false\n                }\n              })\n            }\n          })\n        }\n      }));\n    }\n  };\n\n  const getActiveCardIndex = (cards) => {\n    return cards.findIndex((obj) => obj.active == true);\n  };\n\n  const getCardIndex = (id) => {\n    return builderState[messageId].children[childIndex].cards.findIndex(\n      (obj) => obj.id === id\n    );\n  };\n\n  const isLastCard = () => {\n    const cards = builderState[messageId].children[childIndex].cards;\n    const length = cards.length - 1;\n    const activeCardIndex = getActiveCardIndex(cards);\n    return activeCardIndex == length;\n  };\n\n  //Form input submit methods\n  const onUploadImage = (data, id) => {\n    let cardIndex = getCardIndex(id);\n\n    let reader = new FileReader();\n\n    reader.onloadend = () => {\n      var height = cardRef.current.scrollHeight;\n\n      setBuilderState(\n        builderState.map((item, index) => {\n          if (index == messageId) {\n            item.children.map((child, ind) => {\n              if (ind == childIndex) {\n                child.cards.map((card, s) => {\n                  if (s == cardIndex) {\n                    card.selectedImage = data.image[0];\n                    card.imagePreviewUrl = reader.result;\n                    card.height = height;\n                  }\n                });\n              }\n            });\n          }\n          return item;\n        })\n      );\n    };\n\n    reader.readAsDataURL(data.image[0]);\n  };\n\n  const onHeadingChange = (data, id) => {\n    let cardIndex = getCardIndex(id);\n    var height = cardRef.current.scrollHeight;\n\n    setBuilderState(\n      builderState.map((item, index) => {\n        if (index == messageId) {\n          item.children.map((child, ind) => {\n            if (ind == childIndex) {\n              child.cards.map((card, s) => {\n                if (s == cardIndex) {\n                  card.heading = data.heading;\n                  card.height = height;\n                }\n              });\n            }\n          });\n        }\n        return item;\n      })\n    );\n  };\n\n  const onParagraphChange = (data, id) => {\n    let cardIndex = getCardIndex(id);\n    var height = cardRef.current.scrollHeight;\n\n    setBuilderState(\n      builderState.map((item, index) => {\n        if (index == messageId) {\n          item.children.map((child, ind) => {\n            if (ind == childIndex) {\n              child.cards.map((card, s) => {\n                if (s == cardIndex) {\n                  card.body = data.body;\n                  card.height = height;\n                }\n              });\n            }\n          });\n        }\n        return item;\n      })\n    );\n  };\n\n  const handleDelete = () => {\n    setBuilderState(\n      builderState.map((item, index) => {\n        if (index == messageId) {\n          item.height -= 250;\n          item.children.splice(childIndex, 1);\n        }\n        return item;\n      })\n    );\n  };\n\n  //UseEffects\n  useEffect(() => {\n    if (headingRef.current) {\n      register(headingRef.current);\n      headingRef.current.focus();\n    }\n  }, [isChangingHeading]);\n\n  useEffect(() => {\n    if (paragraphRef.current) {\n      register(paragraphRef.current);\n      paragraphRef.current.focus();\n    }\n  }, [isChangingBody]);\n\n  return (\n    <CardSlider>\n      <div className=\"navigation_btn previous\" onClick={handlePreviousButton}>\n        <BiChevronLeft />\n      </div>\n      <div className=\"navigation_btn next\" onClick={handleNextButton}>\n        {isLastCard() ? <BiPlus /> : <BiChevronRight />}\n      </div>\n      <button className=\"action-btn\" onClick={handleDelete}>\n        <BiTrash />\n      </button>\n      {builderState[messageId].children[childIndex].cards.map((card) => {\n        if (card.active) {\n          return (\n            <CardWrapper ref={cardRef}>\n              <div className=\"card-image\">\n                <ImageWrapper>\n                  {card.imagePreviewUrl ? (\n                    <div>\n                      <img src={card.imagePreviewUrl} alt=\"card-image\" />\n                    </div>\n                  ) : (\n                    <form\n                      onChange={handleSubmit((data) =>\n                        onUploadImage(data, card.id)\n                      )}>\n                      <input\n                        ref={register}\n                        type=\"file\"\n                        id={'card_image' + getCardIndex(card.id)}\n                        name=\"image\"\n                        accept=\"image/*\"\n                      />\n                      <label htmlFor={'card_image' + getCardIndex(card.id)}>\n                        <BiImageAdd />\n                        <p>Upload image</p>\n                      </label>\n                    </form>\n                  )}\n                </ImageWrapper>\n              </div>\n              <div className=\"card-text\">\n                <div\n                  className={\n                    isChangingHeading ? 'card-heading active' : 'card-heading'\n                  }>\n                  <form\n                    onBlur={handleSubmit((data) =>\n                      onHeadingChange(data, card.id)\n                    )}>\n                    <Textarea\n                      className=\"card-title\"\n                      ref={headingRef}\n                      maxLength={27}\n                      id=\"heading\"\n                      name=\"heading\"\n                      defaultValue={card.heading}\n                      onBlur={() => setIsChangingHeading(false)}\n                      onClick={() => {\n                        setIsChangingBody(false);\n                        setIsChangingHeading(true);\n                      }}\n                    />\n                  </form>\n                </div>\n                <div\n                  className={isChangingBody ? 'card-body active' : 'card-body'}>\n                  <form\n                    onBlur={handleSubmit((data) =>\n                      onParagraphChange(data, card.id)\n                    )}>\n                    <Textarea\n                      className=\"card-paragraph\"\n                      maxLength={200}\n                      placeholder=\"Enter your text here\"\n                      onBlur={() => setIsChangingBody(false)}\n                      defaultValue={card.body}\n                      id=\"body\"\n                      name=\"body\"\n                      ref={paragraphRef}\n                      onClick={() => {\n                        setIsChangingHeading(false);\n                        setIsChangingBody(true);\n                      }}\n                    />\n                  </form>\n                </div>\n              </div>\n            </CardWrapper>\n          );\n        }\n      })}\n    </CardSlider>\n  );\n};\n\nexport default FormCard;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Image/styles.ts",[],["327","328"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Text/index.tsx",["329","330","331","332","333","334"],"import React, { useEffect, useState, useRef, useContext } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { BuilderContext } from '../../../../../services/Builder/BuilderProvider';\nimport { AddTextWrapper } from './styles';\nimport { AddTextButton } from '../../../../common/buttons';\nimport { BiTrash } from 'react-icons/bi';\nimport Textarea from 'react-expanding-textarea';\n\nconst FormText = ({ messageId, childId }) => {\n  const [builderState, setBuilderState] = useContext(BuilderContext);\n  const { register, handleSubmit } = useForm({ mode: 'onChange' });\n  const [isChangingBody, setIsChangingBody] = useState(false);\n\n  const textAreaRef = useRef<HTMLTextAreaElement>(null);\n\n  //Find index of specific object using findIndex method.\n  const childIndex = builderState[messageId].children.findIndex(\n    (obj) => obj.id == childId\n  );\n\n  const onTextChange = (data) => {\n    var height = textAreaRef.current.scrollHeight;\n    setBuilderState(\n      builderState.map((item, index) => {\n        if (index == messageId) {\n          item.children.map((child, ind) => {\n            if (ind == childIndex) {\n              child.value = data.text;\n              child.height = height;\n            }\n          });\n        }\n        return item;\n      })\n    );\n  };\n\n  const handleDelete = () => {\n    var height =\n      builderState[messageId].height - textAreaRef.current.scrollHeight;\n    setBuilderState(\n      builderState.map((item, index) => {\n        if (index == messageId) {\n          item.height = height;\n          item.children.splice(childIndex,1)\n        }\n        return item;\n      })\n    );\n  };\n\n  useEffect(() => {\n    if (textAreaRef.current) {\n      register(textAreaRef.current);\n      textAreaRef.current.focus();\n    }\n  }, [isChangingBody]);\n\n  return (\n    <AddTextWrapper>\n      <button className=\"action-btn\">\n        <BiTrash onClick={handleDelete} />\n      </button>\n      <div className={isChangingBody ? 'card-body active' : 'card-body'}>\n        <form onBlur={handleSubmit(onTextChange)}>\n          <Textarea\n            maxLength={500}\n            placeholder=\"Enter your text here\"\n            onBlur={() => setIsChangingBody(false)}\n            defaultValue={builderState[messageId].children[childIndex].value}\n            id=\"text\"\n            name=\"text\"\n            ref={textAreaRef}\n            onClick={() => setIsChangingBody(true)}\n          />\n        </form>\n      </div>\n\n      <AddTextButton height=\"4rem\" width=\"100%\">\n        Add Button\n      </AddTextButton>\n    </AddTextWrapper>\n  );\n};\n\nexport default FormText;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Text/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Toolbar/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/styles/theme.ts",[],["335","336"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/App.tsx",["337","338"],"import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport LandingPage from './pages/LandingPage';\nimport GlobalStyle from './styles/global';\nimport RegisterPage from './pages/auth/RegisterPage';\nimport LoginPage from './pages/auth/LoginPage';\nimport ForgotPassworPage from './pages/auth/ForgotPasswordPage';\nimport { ProtectedRoute } from './routes/ProtectedRoute';\nimport Dashboard from './pages/main/Dashboard/index';\nimport NotFound from './pages/error/404';\nimport { useAuthContext } from './services/Auth/AuthProvider';\nimport Bots from './pages/main/Bots/index';\nimport Flows from './pages/main/Flows/index';\nimport Templates from './pages/main/Templates/index';\nimport Settings from './pages/main/Settings/index';\nimport ModalProvider from './services/Modal/ModalProvider';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport AppLayout from './components/layout/AppLayout';\n\nconst App: React.FC = () => {\n  const authContext = useAuthContext();\n  return (\n    <ModalProvider>\n      <BrowserRouter>\n        <GlobalStyle />\n        <>\n          <ToastContainer />\n          <Switch>\n            <Route exact path=\"/\" component={LandingPage} />\n            <Route exact path=\"/register\" component={RegisterPage} />\n            <Route exact path=\"/login\" component={LoginPage} />\n            <Route\n              exact\n              path=\"/forgot-password\"\n              component={ForgotPassworPage}\n            />\n            <ProtectedRoute exact path=\"/app\" component={Dashboard} />\n            <ProtectedRoute exact path=\"/bots\" component={Bots} />\n            <ProtectedRoute path=\"/bot/:id\" component={Flows} />\n            <ProtectedRoute exact path=\"/templates\" component={Templates} />\n            <ProtectedRoute exact path=\"/settings\" component={Settings} />\n            <Route path=\"*\" component={NotFound} />\n          </Switch>\n        </>\n      </BrowserRouter>\n    </ModalProvider>\n  );\n};\n\nexport default App;\n",["339","340"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Auth/reducer.ts",[],["341","342"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/LandingPage.tsx",[],["343","344"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/routes/ProtectedRoute.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Modal/ModalProvider.tsx",["345"],"import React, { createContext, useContext, useState } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\ntype ModalStateContextType = {\n  View?: React.FC<{ hideModal: () => void }>;\n  isOpen: boolean;\n  onRequestClose?: () => void;\n};\n\ntype ModalStateModifierContextType = {\n  showModal: (View: React.FC, onRequestClose?: () => void) => void;\n  hideModal: () => void;\n};\n\nconst ModalStateContext = createContext<\n  ModalStateContextType | null | undefined\n>(null);\n\nconst ModalStateModifierContext = createContext<ModalStateModifierContextType>({\n  showModal: () => {},\n  hideModal: () => {},\n});\n\nconst ModalProvider = ({ children }: { children: React.ReactNode }) => {\n  const [modalState, setModalState] = useState<ModalStateContextType | null>();\n  const { isOpen, View, onRequestClose } = modalState || {\n    View: undefined,\n    onRequestClose: undefined,\n  };\n\n  const showModal = (\n    View?: React.FC<{ hideModal: () => void }>,\n    onRequestClose?: () => void\n  ) => {\n    setModalState({ View, isOpen: true, onRequestClose });\n  };\n  const hideModal = () => {\n    setModalState({\n      View: undefined,\n      isOpen: false,\n      onRequestClose: undefined,\n    });\n  };\n  const modalSpring = useSpring({\n    from: { display: 'none' },\n    to: async (next: any) => {\n      if (isOpen) {\n        await next({\n          display: 'block',\n          transform: 'translate(0px,0px)',\n          opacity: 1,\n        });\n      } else {\n        await next({ transform: 'translate(0px,100px)', opacity: 0 });\n        await next({\n          display: 'none',\n        });\n      }\n    },\n  });\n  return (\n    <ModalStateContext.Provider value={modalState}>\n      <ModalStateModifierContext.Provider value={{ showModal, hideModal }}>\n        {children}\n        <ModalWrapper>\n          <animated.div style={modalSpring} className=\"modal\">\n            {View && <View hideModal={hideModal} />}\n          </animated.div>\n        </ModalWrapper>\n      </ModalStateModifierContext.Provider>\n    </ModalStateContext.Provider>\n  );\n};\nModalProvider.propTypes = {\n  children: PropTypes.element,\n};\n\nexport default ModalProvider;\n\nexport const useModal = () => {\n  const context = useContext(ModalStateModifierContext);\n  if (context === undefined) {\n    throw new Error('useModal must be used within a ModalProvider');\n  }\n  return context;\n};\n\nexport const ModalWrapper = styled.div`\n\n  .modal {\n    position: fixed;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100vh;\n    background: rgba(0, 0, 0, 0.7);\n    backdrop-filter: blur(5px);\n    overflow-y: scroll;\n    overflow-x: hidden;\n    padding: 4rem 0;\n    h1 {\n      padding-bottom: 1rem;\n    }\n    h2 {\n      margin-top: -1rem;\n    }\n    input {\n      margin-bottom: 1rem;\n      margin-top: 1rem;\n    }\n    .last-input {\n      margin-bottom: 3rem;\n    }\n    &-exit {\n      background: rgb(255, 0, 76, 0.7);\n      border-radius: 10rem;\n      border: 0;\n      cursor: pointer;\n      height: 1.5rem;\n      outline: none;\n      padding: 0.5rem;\n      position: absolute;\n      right: 2rem;\n      top: 2rem;\n      width: 1.5rem;\n      &:active {\n        filter: brightness(0.8);\n      }\n    }\n    &-body {\n      align-items: center;\n      background: #ffffff;\n      border-radius: 24px;\n      box-shadow: 0px 4px 24px rgba(0, 0, 0, 0.12);\n      margin: 0 auto;\n      max-width: 40rem;\n      min-height: 25rem;\n      padding: 4rem;\n      position: relative;\n      /* p,\n      h2 {\n        color: black;\n      } */\n    }\n  }\n`;\n",["346","347"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Templates/index.tsx",["348"],"import React from 'react';\nimport AppLayout from '../../../components/layout/AppLayout';\n\nconst Templates = (props: any) => {\n  return <h1 className=\"main-heading\">Templates</h1>;\n};\n\nexport default Templates;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Bots/index.tsx",["349","350","351","352","353","354","355","356","357","358"],"import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Link, Route, Switch } from 'react-router-dom';\nimport AppLayout from '../../../components/layout/AppLayout';\nimport { PrimaryButton } from '../../../components/common/buttons';\nimport BotModal from '../../../components/dashboard/Bots/Modal';\nimport { getBots } from '../../../apis/bots';\nimport Pagination from '../../../components/common/Pagination/index';\nimport Table from '../../../components/common/Table';\nimport { TableWrapper } from '../../../components/common/Table/styles';\nimport { DropdownWrapper } from '../../../components/common/Dropdown/styles';\nimport { HiDotsVertical } from 'react-icons/hi';\nimport DeleteModal from '../../../components/dashboard/Bots/DeleteModal';\nimport { useModal } from '../../../services/Modal/ModalProvider';\nimport Flows from '../Flows/index';\nimport { ProtectedRoute } from '../../../routes/ProtectedRoute';\n\ntype BotType = {\n  id: string;\n  name: string;\n  last_modified: string;\n};\n\nconst Bots = () => {\n  const { showModal, hideModal } = useModal();\n  const [bots, setBots] = useState<Array<BotType>>();\n  const [pageNumber, setPageNumber] = useState(1);\n  const [isLoading, setIsLoading] = useState(true);\n  const [lastPage, setLastPage] = useState(1);\n  const [refreshPage, setRefreshPage] = useState(false);\n\n  const getBotsData = (pageNumber: number) => {\n    getBots(pageNumber)\n      .then((response) => {\n        setBots(response.data);\n        setPageNumber(response.meta.current_page);\n        setLastPage(response.meta.last_page);\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  useEffect(() => {\n    getBotsData(pageNumber);\n  }, [pageNumber, lastPage, refreshPage]);\n\n  const handleRefresh = () => {\n    setRefreshPage(true);\n    setRefreshPage(false);\n  };\n  const handleCreateOpen = (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => {\n    showModal(() => (\n      <BotModal hideModal={hideModal} reloadPage={handleRefresh} />\n    ));\n  };\n\n  const handleEditOpen = (data: BotType) => {\n    showModal(() => (\n      <BotModal hideModal={hideModal} bots={data} reloadPage={handleRefresh} />\n    ));\n  };\n\n  const handleDeleteConfirmation = (data: BotType) => {\n    showModal(() => (\n      <DeleteModal\n        hideModal={hideModal}\n        bot={data}\n        reloadPage={handleRefresh}\n      />\n    ));\n  };\n\n  const handlePageChange = (pageNumber: number) => {\n    setPageNumber(pageNumber);\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"page-header\">\n        <h1 className=\"heading\">Bots</h1>\n        <PrimaryButton onClick={handleCreateOpen}>Add Bot</PrimaryButton>\n      </div>\n      <TableWrapper>\n        <div className=\"table-row\">\n          <p className=\"table-col-1\"></p>\n          <p className=\"table-col-3\">Name</p>\n          <p className=\"table-col-3\">Channels</p>\n          <p className=\"table-col-3\">Modified</p>\n          <p className=\"table-col-1\">Action</p>\n        </div>\n\n        <Router>\n        {bots &&\n          bots.map((data: BotType) => {\n            return (\n              <Link to={\"bot/\"+data.id} className=\"table-row table-row-data\">\n                <p className=\"table-col-1\"></p>\n                <p className=\"table-col-3\">{data.name}</p>\n                <p className=\"table-col-3\">-</p>\n                <p className=\"table-col-3\">{data.last_modified}</p>\n                <p className=\"table-col-1\">\n                  <DropdownWrapper>\n                    <label className=\"dropbtn\">\n                      <HiDotsVertical />\n                    </label>\n                    <div className=\"dropdown-content\">\n                      <a\n                        href=\"#\"\n                        onClick={() => {\n                          handleEditOpen(data);\n                        }}>\n                        Edit\n                      </a>\n                      <a href=\"#\">Configure</a>\n                      <a\n                        href=\"#\"\n                        onClick={() => {\n                          handleDeleteConfirmation(data);\n                        }}>\n                        Delete\n                      </a>\n                    </div>\n                  </DropdownWrapper>\n                </p>\n              </Link>\n            );\n          })}\n        </Router>\n      </TableWrapper>\n\n      <Pagination\n        activePage={pageNumber}\n        total={lastPage}\n        onChange={handlePageChange}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default Bots;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/form.ts",["359"],"import styled from 'styled-components'\nimport { grey } from '../../styles/theme';\n\nexport const InputField = styled.input<{isError?: boolean}>`\n  background: ${props => props.isError ? '#FFE4E4' : '#F7F7F7'};\n  border-radius: 7px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.1);\n  box-sizing: border-box;\n  min-height: 3.8rem;\n  min-width: 30rem;\n  padding: .8rem;\n  outline: none;\n  font-family: Roboto, sans-serif;\n  font-style: normal;\n  font-weight: 400;\n  font-size: 1.4rem;\n  color: #000;\n  width: 100%;\n\n\n  &:focus {\n    font-weight: 400;\n    box-shadow: 0 0 0 3px rgba(164, 202, 254, 0.45);\n    border-color: #5850EC;\n  }\n\n  &::placeholder {\n    color: #d7d7d7;\n    font-size: 1.2rem;\n  }\n`;\n\nexport const FormLink = styled.a`\n  text-decoration: none;\n  font-size: 1.2rem;\n  font-family: Roboto, sans-serif;\n  color: #565252;\n\n  &:hover{\n    text-decoration-line: underline;\n    color: #000;\n  }\n`;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/Table/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/Dropdown/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/header/index.tsx",[],["360","361"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/DeleteModal.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Flows/helper.tsx",["362"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/feature/index.tsx",["363"],"import React from 'react';\nimport { FeatureWrapper, FeatureGrid } from './styles';\nimport {\n  PrimaryHeader,\n  SecondaryHeader,\n  Paragraph,\n} from '../../common/typography';\n\nimport feature1 from '../../../assets/images/features/1.png';\nimport feature2 from '../../../assets/images/features/2.png';\nimport feature3 from '../../../assets/images/features/3.png';\nimport feature4 from '../../../assets/images/features/4.png';\nimport feature5 from '../../../assets/images/features/5.png';\n\nconst Feature = () => {\n  return (\n    <FeatureWrapper>\n      <PrimaryHeader className=\"heading\">Key Features</PrimaryHeader>\n      <FeatureGrid>\n        <div className=\"feature\">\n          <img src={feature1} alt=\"feature1\" />\n          <SecondaryHeader>Easy to develop</SecondaryHeader>\n          <Paragraph>\n            Create components connected them and make the bot flow in ease\n          </Paragraph>\n        </div>\n        <div className=\"feature\">\n          <img src={feature5} alt=\"feature1\" />\n          <SecondaryHeader>Multipe Platform</SecondaryHeader>\n          <Paragraph>\n            Create one bot and publish it in different platforms such as\n            facebook, slack, telegram, etc.\n          </Paragraph>\n        </div>\n        <div className=\"feature\">\n          <img src={feature3} alt=\"feature1\" />\n          <SecondaryHeader>Template Variety</SecondaryHeader>\n          <Paragraph>\n            Free templates which can be used to setup your bot.\n          </Paragraph>\n        </div>\n        <div className=\"feature\">\n          <img src={feature4} alt=\"feature1\" />\n          <SecondaryHeader>Rich Content</SecondaryHeader>\n          <Paragraph>\n            Various message content such as text, gallery, buttons.\n          </Paragraph>\n        </div>\n        <div className=\"feature\">\n          <img src={feature5} alt=\"feature1\" />\n          <SecondaryHeader>Feature 5</SecondaryHeader>\n          <Paragraph>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, t ut labore\n            et dolore magna aliqua.\n          </Paragraph>\n        </div>\n        <div className=\"feature\">\n          <img src={feature5} alt=\"feature1\" />\n          <SecondaryHeader>Feature 6</SecondaryHeader>\n          <Paragraph>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n            eiusmod tempor incididunt\n          </Paragraph>\n        </div>\n      </FeatureGrid>\n    </FeatureWrapper>\n  );\n};\n\nexport default Feature;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/info/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/navbar/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Sidebar/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Card/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Auth/AuthProvider.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/error/404.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/auth/RegisterPage.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/layout/AuthLayout.tsx",["364"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport logo from '../../assets/images/logo-dark.png';\nimport { AuthButton } from '../common/buttons';\n\ninterface LayoutProps {\n  children?: any;\n  type?: string;\n}\n\nconst AuthLayout: React.FC<LayoutProps> = (props) => {\n  return (\n    <LayoutWrapper>\n      <nav className=\"logo-bar\">\n        <Link to=\"/\">\n          <img className=\"logo-img\" src={logo} alt=\"Shipboard Logo\" />\n        </Link>\n      </nav>\n      <AuthContainer>\n        <div className=\"card\">{props.children}</div>\n        {/* {props.type === 'login' && (\n          <div className=\"auth-buttons\">\n            <AuthButton>Sign in with Google</AuthButton>\n            <AuthButton>Sign in with Facebook</AuthButton>\n          </div>\n        )} */}\n      </AuthContainer>\n      <FooterWrapper>\n        <p>©Shipbot Pvt. Ltd. 2020. All rights reserved</p>\n      </FooterWrapper>\n    </LayoutWrapper>\n  );\n};\n\nexport default AuthLayout;\n\nconst LayoutWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n  min-width: 50rem;\n  position: relative;\n\n  .logo-bar {\n    align-content: center;\n    display: flex;\n    margin: auto;\n    max-width: 144rem;\n    min-height: 10rem;\n    width: 100%;\n\n    img {\n      height: 4.5rem;\n      margin-top: 2rem;\n    }\n  }\n`;\n\nconst AuthContainer = styled.div`\n  align-content: center;\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  justify-content: center;\n  margin: auto;\n  position: relative;\n\n  .card {\n    align-items: center;\n    background: #ffffff;\n    border-radius: 24px;\n    box-shadow: 0px 4px 24px rgba(0, 0, 0, 0.12);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    margin-top: -10rem;\n    max-width: 40rem;\n    min-height: 30rem;\n    padding: 4rem;\n\n    h1 {\n      padding-bottom: 1rem;\n    }\n\n    h2 {\n      margin-top: -1rem;\n      padding-bottom: 1rem;\n    }\n\n    input {\n      margin-bottom: 1rem;\n      margin-top: 1rem;\n    }\n\n    .last-input {\n      margin-bottom: 3rem;\n    }\n\n    .link {\n      display: flex;\n      justify-content: space-around;\n      margin-top: 1rem;\n      width: 100%;\n    }\n\n    .go-back {\n      align-items: center;\n      align-self: flex-start;\n      color: #000;\n      cursor: pointer;\n      display: flex;\n      margin-top: 1rem;\n      text-decoration: none;\n\n      &:hover{\n        color: #000;\n        text-decoration-line: underline;\n      }\n\n      h5 {\n        font-family: Roboto, sans-serif;\n        font-size: 1.2rem;\n        font-weight: 300;\n      }\n\n      svg {\n        width: 1.5rem;\n        height: 1.5rem;\n      }\n\n      &:hover {\n        h5 {\n          text-decoration: underline;\n        }\n      }\n    }\n  }\n\n  .auth-buttons {\n    margin-left: -5rem;\n    margin-right: -5rem;\n    display: flex;\n    justify-content: space-between;\n    margin-top: 6rem;\n  }\n`;\n\nconst FooterWrapper = styled.footer`\n  bottom: 0rem;\n  font-size: 1.2rem;\n  padding-right: 10rem;\n  position: absolute;\n  text-align: right;\n  width: 100%;\n`;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/Modal.tsx",["365"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/footer/index.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/navbar/index.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/feature/styles.ts",["366"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Sidebar/index.tsx",["367","368","369"],"import React, { useEffect, useRef, Ref } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport logo from '../../../assets/images/logo-light.png';\nimport shortLogo from '../../../assets/images/logo-short.png';\nimport avatar from '../../../assets/images/avatar.jpg';\nimport { AiOutlineDashboard, AiOutlineRobot } from 'react-icons/ai';\nimport { TiFlowMerge } from 'react-icons/ti';\nimport { HiTemplate } from 'react-icons/hi';\nimport { IoSettingsSharp, IoLogOut } from 'react-icons/io5';\nimport { getAuthUser, logOut } from '../../../apis/auth';\nimport { useAuthDispatch } from '../../../services/Auth/AuthProvider';\nimport {\n  SidebarWrapper,\n  SidebarMenu,\n  LogoWrapper,\n  UserInfoWrapper,\n  MenuItem,\n  ToggleBar,\n} from './styles';\nimport { BiChevronsLeft, BiChevronsRight } from 'react-icons/bi';\n\ninterface SidebarProps {\n  handleSidebarState: (isOpen: boolean) => void;\n}\n\nconst Sidebar: React.FC<SidebarProps> = ({ handleSidebarState }) => {\n  const [isOpen, setIsOpen] = React.useState(true);\n  const nameRef = useRef<HTMLHeadingElement>(null);\n  const history = useHistory();\n  const authDispatch = useAuthDispatch();\n\n  useEffect(() => {\n    getAuthUser().then((response) => {\n      var x = document.getElementById('username');\n      if (x) {\n        x.innerHTML = response.data.name;\n      }\n    });\n\n    handleSidebarState(isOpen);\n  }, [isOpen]);\n\n  const handleLogOut = (event: any) => {\n    event.preventDefault();\n    logOut().then((response) => {\n      authDispatch({\n        type: 'LOGOUT',\n      });\n      history.push('/');\n    });\n  };\n\n  return (\n    <SidebarWrapper>\n      <SidebarMenu isOpen={isOpen}>\n        <LogoWrapper>\n          <img src={isOpen ? logo : shortLogo} alt=\"Logo\" />\n        </LogoWrapper>\n        <UserInfoWrapper isOpen={isOpen}>\n          <img src={avatar} alt=\"Avatar\" />\n          <div className=\"user-info\">\n            <h2 ref={nameRef} id=\"username\"></h2>\n            <p>Profile Setting</p>\n          </div>\n        </UserInfoWrapper>\n        <div className=\"menu_list\">\n          <div className=\"menu_list-top\">\n            <Link to=\"/app\">\n              <MenuItem isActive isOpen={isOpen}>\n                <AiOutlineDashboard className=\"menu-icon\" />\n                <p>Dashboard</p>\n              </MenuItem>\n            </Link>\n            <Link to=\"/bots\">\n              <MenuItem isOpen={isOpen}>\n                <AiOutlineRobot className=\"menu-icon\" />\n                <p>Bots</p>\n              </MenuItem>\n            </Link>\n            <Link to=\"/flows\">\n              <MenuItem isOpen={isOpen}>\n                <TiFlowMerge className=\"menu-icon\" />\n                <p>Flows</p>\n              </MenuItem>\n            </Link>\n            <Link to=\"/templates\">\n              <MenuItem isOpen={isOpen}>\n                <HiTemplate className=\"menu-icon\" />\n                <p>Templates</p>\n              </MenuItem>\n            </Link>\n          </div>\n          <div className=\"menu_list-bottom\">\n            <Link to=\"/settings\">\n              <MenuItem isOpen={isOpen}>\n                <IoSettingsSharp className=\"menu-icon\" />\n                <p>Settings</p>\n              </MenuItem>\n            </Link>\n            <MenuItem isOpen={isOpen} onClick={handleLogOut}>\n              <IoLogOut className=\"menu-icon\" />\n              <p>Logout</p>\n            </MenuItem>\n          </div>\n        </div>\n      </SidebarMenu>\n      <ToggleBar onClick={() => setIsOpen(!isOpen)}>\n        {isOpen && <BiChevronsLeft />}\n        {!isOpen && <BiChevronsRight />}\n      </ToggleBar>\n    </SidebarWrapper>\n  );\n};\n\nexport default Sidebar;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/utils/storage.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/buttons.ts",["370"],"import styled from 'styled-components';\nimport Toolbar from '../dashboard/builder/Toolbar/index';\n\nexport const StyledButton = styled.button`\n  background: #ffffff;\n  border-radius: 12px 12px 12px 0px;\n  border: 2px solid #5850eb;\n  box-sizing: border-box;\n  cursor: pointer;\n  font-family: Comic Neue, Roboto, sans-serif;\n  font-size: 1.5rem;\n  padding:.9rem;\n  width: 10rem;\n  outline: none;\n`;\n\nexport const PrimaryButton = styled(StyledButton)`\n  background-color: #5850eb;\n  color: #ffffff;\n  margin-right: 0rem;\n  &:focus {\n    background-color: #251DCA\n  }\n`;\n\nexport const FormButton = styled(PrimaryButton)`\n  width: 100%;\n  height: 3.5rem;\n  font-size: 1.6rem;\n  font-weight: 600;\n`;\n\nexport const AuthButton = styled(StyledButton)`\n  width: 20rem;\n  font-size: 1.6rem;\n`;\n\n\nexport const ToolbarButton = styled.button < { height?: string, width?: string, fontSize?: string}>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: ${props => props.height ? props.height : '2rem'};\n  width: ${props => props.width ? props.width : '2rem'};\n  border: none;\n  padding: 0;\n  background: #ffffff;\n  color: #8392AB;\n  font-family: Roboto, sans-serif;\n  font-weight: 400;\n  font-size: ${props => props.fontSize ? props.fontSize : '1.6rem'};\n  margin: .8rem;\n  cursor: pointer;\n  background-image: url(\"data:image/svg+xml,%3csvg width='100%25' height='100%25' xmlns='http://www.w3.org/2000/svg'%3e%3crect width='100%25' height='100%25' fill='none' rx='7' ry='7' stroke='%238392ABFF' stroke-width='4' stroke-dasharray='10%2c10' stroke-dashoffset='23' stroke-linecap='round'/%3e%3c/svg%3e\");\n  border-radius: 0px 0px 7px 7px;\n  &:hover {\n    background-image: url(\"data:image/svg+xml,%3csvg width='100%25' height='100%25' xmlns='http://www.w3.org/2000/svg'%3e%3crect width='100%25' height='100%25' fill='none' rx='7' ry='7' stroke='%235850EBFF' stroke-width='4' stroke-dasharray='10%2c10' stroke-dashoffset='23' stroke-linecap='round'/%3e%3c/svg%3e\");\n    color: #5850EB;\n  }\n`;\n\nexport const AddTextButton = styled(ToolbarButton)`\n  margin: 0rem;\n  margin-top: -.5rem;\n  width: 100%;\n`;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/Pagination/index.tsx",["371","372"],"import React, { useState, useEffect } from 'react';\nimport { PaginationItem, PaginationWrapper } from './styles';\nimport { BiChevronLeft, BiChevronRight } from 'react-icons/bi';\nimport pagination from '../../../utils/pagination';\n\ninterface PaginationPropsInteface {\n  total: number;\n  activePage: number;\n  onChange: (pageNumber: number) => void;\n}\n\nconst Pagination: React.FC<PaginationPropsInteface> = (props) => {\n  const pageBtns = pagination(props.activePage, props.total);\n\n  return (\n    <PaginationWrapper>\n      <PaginationItem>\n        <BiChevronLeft\n          onClick={() => {\n            props.onChange(props.activePage - 1);\n          }}\n        />\n      </PaginationItem>\n      {pageBtns &&\n        pageBtns.map((page, index) => {\n          if (typeof page !== 'string') {\n            var isActive = page === props.activePage ? 1 : 0;\n            return (\n              <PaginationItem\n                isActive={isActive}\n                onClick={() => {\n                  props.onChange(page);\n                }}>\n                {page}\n              </PaginationItem>\n            );\n          } else {\n            return <PaginationItem>...</PaginationItem>;\n          }\n        })}\n      <PaginationItem>\n        <BiChevronRight\n          onClick={() => {\n            props.onChange(props.activePage + 1);\n          }}\n        />\n      </PaginationItem>\n    </PaginationWrapper>\n  );\n};\n\nexport default Pagination;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/header/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/Pagination/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/footer/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/styles/mediaQueries.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/auth/ForgotPasswordPage.tsx",["373"],"import React, { useState, useEffect, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport AuthLayout from '../../components/layout/AuthLayout';\nimport { FormHeader, FormSubHeader } from '../../components/common/typography';\nimport { InputField, FormLink } from '../../components/common/form';\nimport { FormButton } from '../../components/common/buttons';\nimport { IoArrowBack } from 'react-icons/io5';\nimport { forgotPassword } from '../../apis/auth';\n\nconst ForgotPassworPage = () => {\n  const [email, setEmail] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isEmailed, setIsEmailed] = useState(false);\n  const [errorMessage, setErrorMessage] = useState({ email: '' });\n\n  const emailRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    emailRef.current && emailRef.current.focus();\n  }, []);\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setIsLoading(true);\n\n    forgotPassword(email)\n      .then((response) => {\n        setIsEmailed(true);\n      })\n      .catch((err) => {\n        if (err.response.status === 422) {\n          setErrorMessage({\n            email: err.response.data.errors.email\n              ? err.response.data.errors.email[0]\n              : '',\n          });\n        }\n      })\n      .finally(() => {\n        setIsLoading(false);\n    })\n  };\n\n  return (\n    <AuthLayout>\n      {!isEmailed && (\n        <form onSubmit={handleSubmit}>\n          <FormHeader>Forgot password?</FormHeader>\n          <FormSubHeader>\n            No worries! We’ll send you secure email to reset your password.\n          </FormSubHeader>\n          <InputField\n            isError={!!errorMessage.email}\n            className=\"last-input\"\n            id=\"email\"\n            placeholder=\"Type your password\"\n            type=\"email\"\n            ref={emailRef}\n            onChange={(e) => {\n              setEmail(e.target.value);\n            }}\n          />\n          {errorMessage.email && (\n            <span className=\"form-error\">{errorMessage.email}</span>\n          )}\n          <FormButton type=\"submit\" disabled={isLoading}>\n            {isLoading ? 'Loading...' : 'Email me'}\n          </FormButton>\n        </form>\n      )}\n      {isEmailed && (\n        <div>\n          <FormHeader>Email is on the way!</FormHeader>\n          <FormSubHeader>\n            We will send you email with the reset password link if (\n            <strong>{email}</strong>) exists in Shipboard.\n          </FormSubHeader>\n        </div>\n      )}\n      <Link to=\"/login\" className=\"go-back\">\n        <IoArrowBack />\n        <h5>Go Back</h5>\n      </Link>\n    </AuthLayout>\n  );\n};\n\nexport default ForgotPassworPage;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Settings/index.tsx",["374"],"import React from 'react';\nimport AppLayout from '../../../components/layout/AppLayout';\n\nconst Settings = (props:any) => {\n  return (\n      <h1 className=\"main-heading\">Settings</h1>\n  );\n};\n\nexport default Settings;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/auth.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/layout/AppLayout.tsx",["375","376"],"import React from 'react';\nimport styled from 'styled-components';\nimport Sidebar from '../dashboard/Sidebar';\nimport Breadcrumb from '../dashboard/Breadcrumb';\nimport { BuilderProvider } from '../../services/Builder/BuilderProvider';\n\ninterface LayoutProps {\n  children?: any;\n}\n\nconst AppLayout: React.FC<LayoutProps> = (props) => {\n  const [isOpen, setIsOpen] = React.useState<boolean>(true);\n  const sidebarState = React.useRef();\n\n  const handleSidebarState = React.useCallback((isOpen) => {\n    setIsOpen(isOpen);\n  }, []);\n\n  return (\n    <LayoutWrapper>\n      <Sidebar handleSidebarState={handleSidebarState} />\n      <BuilderProvider sidebar={isOpen}>\n        <AppContainer>\n          {/* <Breadcrumb /> */}\n          {props.children}\n        </AppContainer>\n      </BuilderProvider>\n    </LayoutWrapper>\n  );\n};\n\nexport default AppLayout;\n\nconst LayoutWrapper = styled.div`\n  display: flex;\n  min-height: 100vh;\n`;\n\nconst AppContainer = styled.div`\n  margin-left: -2rem;\n  flex-grow: 1;\n\n  h1 {\n    margin-top: 2rem;\n    margin-left: 2rem;\n  }\n\n  .page-header {\n    display: flex;\n    justify-content: space-between;\n    margin: 2rem;\n\n    .button {\n      align-self: center;\n    }\n  }\n`;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Builder/BuilderProvider.tsx",["377","378"],"import React, { useState, createContext, useContext } from 'react';\nimport { FlowStateType } from '../../../types';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst initialBuilderState = [\n  {\n    id: '12kl23-23k23l0-23l2',\n    name: 'Send Message #1',\n    height: 200,\n    position: {\n      x: 700,\n      y: 50,\n    },\n    children: [],\n    next: '2323-23jljkj23-23jo2i3',\n    isHover: false,\n    isSelected: false,\n  },\n  {\n    id: '2323-23jljkj23-23jo2i3',\n    name: 'Send Message #2',\n    height: 200,\n    position: {\n      x: 1000,\n      y: 100,\n    },\n    children: [],\n    isHover: false,\n    isSelected: false,\n  },\n];\n\nexport const BuilderContext = createContext(undefined);\n\nexport const BuilderProvider = ({ sidebar, children }) => {\n  const [builderState, setBuilderState] = useState(initialBuilderState);\n  return (\n    <BuilderContext.Provider value={[builderState, setBuilderState, sidebar]} >\n      {children}\n    </BuilderContext.Provider>\n  );\n};\n\nexport const useBuilder = () => {\n  const context = useContext(BuilderContext);\n  if (context === undefined) {\n    throw new Error('useBuilderState must be used within a BuilderProvider');\n  }\n  return context;\n};\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/info/index.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/index.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Dashboard/index.tsx",[],["379","380"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Flows/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/typography.ts",["381","382"],"import styled from 'styled-components';\nimport { darkerGrey } from '../../styles/theme';\nimport { media } from '../../styles/mediaQueries';\n\nexport const PrimaryHeader = styled.h1`\n  font-family: Comic Neue, Roboto, sans-serif;\n  font-weight: 700;\n  font-size: 3.6rem;\n  color: #000;\n`;\n\nexport const FormHeader = styled(PrimaryHeader)`\n  font-size: 2.6rem;\n  text-align: center;\n`;\n\nexport const FormSubHeader = styled.h2`\n  font-family: Roboto, sans-serif;\n  font-weight: 300;\n  font-size: 1.6rem;\n  color: #000;\n  text-align: center;\n`;\n\nexport const SecondaryHeader = styled.h1`\n  font-family: Roboto, sans-serif;\n  font-weight: 500;\n  line-height: 5.6rem;\n  color: #000;\n  font-size: 2.4rem;\n`; \n\nexport const Paragraph = styled.p`\n  font-family: inherit;\n  font-size: 1.5rem;\n  color: ${(props) => props.theme.darkerGrey};\n  line-height: 2.8rem;\n`;\n\nexport const ToolbarHeading = styled.h2`\n  font-family: Roboto, sans-serif;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 1.8rem;\n  line-height: 2.1rem;\n  color: #797979;\n`;\n\nexport const VerticalGap = styled.div<{size: string}>`\n  width: auto;\n  height: ${(props) => props.size}rem;\n  display: block;\n  flex-shrink: 0;\n`;\n\nexport const HorizontalGap = styled.div<{size: string}>`\n  width: ${(props) => props.size}rem;\n  height: auto;\n  display: block;\n`;","/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/bots.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/auth/LoginPage.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/constants/urls.ts",[],{"ruleId":"383","severity":1,"message":"384","line":4,"column":30,"nodeType":"385","messageId":"386","endLine":4,"endColumn":35},{"ruleId":"383","severity":1,"message":"387","line":14,"column":3,"nodeType":"385","messageId":"386","endLine":14,"endColumn":17},{"ruleId":"383","severity":1,"message":"388","line":30,"column":17,"nodeType":"385","messageId":"386","endLine":30,"endColumn":25},{"ruleId":"389","severity":1,"message":"390","line":38,"column":64,"nodeType":"391","messageId":"392","endLine":38,"endColumn":66},{"ruleId":"389","severity":1,"message":"390","line":39,"column":21,"nodeType":"391","messageId":"392","endLine":39,"endColumn":23},{"ruleId":"383","severity":1,"message":"393","line":56,"column":9,"nodeType":"385","messageId":"386","endLine":56,"endColumn":28},{"ruleId":"389","severity":1,"message":"390","line":59,"column":21,"nodeType":"391","messageId":"392","endLine":59,"endColumn":23},{"ruleId":"389","severity":1,"message":"390","line":77,"column":21,"nodeType":"391","messageId":"392","endLine":77,"endColumn":23},{"ruleId":"389","severity":1,"message":"390","line":80,"column":21,"nodeType":"391","messageId":"392","endLine":80,"endColumn":23},{"ruleId":"389","severity":1,"message":"390","line":89,"column":21,"nodeType":"391","messageId":"392","endLine":89,"endColumn":23},{"ruleId":"389","severity":1,"message":"390","line":103,"column":21,"nodeType":"391","messageId":"392","endLine":103,"endColumn":23},{"ruleId":"389","severity":1,"message":"390","line":106,"column":21,"nodeType":"391","messageId":"392","endLine":106,"endColumn":23},{"ruleId":"389","severity":1,"message":"390","line":115,"column":21,"nodeType":"391","messageId":"392","endLine":115,"endColumn":23},{"ruleId":"389","severity":1,"message":"390","line":127,"column":19,"nodeType":"391","messageId":"392","endLine":127,"endColumn":21},{"ruleId":"389","severity":1,"message":"390","line":139,"column":19,"nodeType":"391","messageId":"392","endLine":139,"endColumn":21},{"ruleId":"389","severity":1,"message":"390","line":185,"column":21,"nodeType":"391","messageId":"392","endLine":185,"endColumn":23},{"ruleId":"389","severity":1,"message":"390","line":300,"column":41,"nodeType":"391","messageId":"392","endLine":300,"endColumn":43},{"ruleId":"389","severity":1,"message":"390","line":304,"column":35,"nodeType":"391","messageId":"392","endLine":304,"endColumn":37},{"ruleId":"389","severity":1,"message":"390","line":395,"column":50,"nodeType":"391","messageId":"392","endLine":395,"endColumn":52},{"ruleId":"389","severity":1,"message":"390","line":399,"column":49,"nodeType":"391","messageId":"392","endLine":399,"endColumn":51},{"ruleId":"383","severity":1,"message":"394","line":4,"column":10,"nodeType":"385","messageId":"386","endLine":4,"endColumn":24},{"ruleId":"383","severity":1,"message":"395","line":11,"column":10,"nodeType":"385","messageId":"386","endLine":11,"endColumn":20},{"ruleId":"389","severity":1,"message":"390","line":22,"column":59,"nodeType":"391","messageId":"392","endLine":22,"endColumn":61},{"ruleId":"389","severity":1,"message":"390","line":27,"column":17,"nodeType":"391","messageId":"392","endLine":27,"endColumn":19},{"ruleId":"396","severity":1,"message":"397","line":41,"column":6,"nodeType":"398","endLine":41,"endColumn":23,"suggestions":"399"},{"ruleId":"389","severity":1,"message":"390","line":91,"column":17,"nodeType":"391","messageId":"392","endLine":91,"endColumn":19},{"ruleId":"389","severity":1,"message":"390","line":111,"column":17,"nodeType":"391","messageId":"392","endLine":111,"endColumn":19},{"ruleId":"389","severity":1,"message":"390","line":139,"column":17,"nodeType":"391","messageId":"392","endLine":139,"endColumn":19},{"ruleId":"400","replacedBy":"401"},{"ruleId":"402","replacedBy":"403"},{"ruleId":"383","severity":1,"message":"404","line":5,"column":10,"nodeType":"385","messageId":"386","endLine":5,"endColumn":23},{"ruleId":"389","severity":1,"message":"390","line":16,"column":21,"nodeType":"391","messageId":"392","endLine":16,"endColumn":23},{"ruleId":"389","severity":1,"message":"390","line":29,"column":21,"nodeType":"391","messageId":"392","endLine":29,"endColumn":23},{"ruleId":"405","severity":1,"message":"406","line":30,"column":44,"nodeType":"407","messageId":"408","endLine":30,"endColumn":46},{"ruleId":"389","severity":1,"message":"390","line":31,"column":23,"nodeType":"391","messageId":"392","endLine":31,"endColumn":25},{"ruleId":"389","severity":1,"message":"390","line":49,"column":19,"nodeType":"391","messageId":"392","endLine":49,"endColumn":21},{"ruleId":"409","severity":1,"message":"410","line":68,"column":11,"nodeType":"411","endLine":68,"endColumn":58},{"ruleId":"400","replacedBy":"412"},{"ruleId":"402","replacedBy":"413"},{"ruleId":"383","severity":1,"message":"404","line":5,"column":10,"nodeType":"385","messageId":"386","endLine":5,"endColumn":23},{"ruleId":"389","severity":1,"message":"390","line":29,"column":21,"nodeType":"391","messageId":"392","endLine":29,"endColumn":23},{"ruleId":"389","severity":1,"message":"390","line":38,"column":25,"nodeType":"391","messageId":"392","endLine":38,"endColumn":27},{"ruleId":"389","severity":1,"message":"414","line":48,"column":25,"nodeType":"391","messageId":"392","endLine":48,"endColumn":27},{"ruleId":"405","severity":1,"message":"406","line":76,"column":57,"nodeType":"407","messageId":"408","endLine":76,"endColumn":59},{"ruleId":"389","severity":1,"message":"390","line":77,"column":19,"nodeType":"391","messageId":"392","endLine":77,"endColumn":21},{"ruleId":"405","severity":1,"message":"406","line":78,"column":45,"nodeType":"407","messageId":"408","endLine":78,"endColumn":47},{"ruleId":"389","severity":1,"message":"390","line":79,"column":21,"nodeType":"391","messageId":"392","endLine":79,"endColumn":23},{"ruleId":"405","severity":1,"message":"406","line":80,"column":43,"nodeType":"407","messageId":"408","endLine":80,"endColumn":45},{"ruleId":"389","severity":1,"message":"390","line":81,"column":25,"nodeType":"391","messageId":"392","endLine":81,"endColumn":27},{"ruleId":"389","severity":1,"message":"390","line":84,"column":25,"nodeType":"391","messageId":"392","endLine":84,"endColumn":27},{"ruleId":"389","severity":1,"message":"390","line":96,"column":48,"nodeType":"391","messageId":"392","endLine":96,"endColumn":50},{"ruleId":"389","severity":1,"message":"390","line":109,"column":28,"nodeType":"391","messageId":"392","endLine":109,"endColumn":30},{"ruleId":"389","severity":1,"message":"390","line":123,"column":21,"nodeType":"391","messageId":"392","endLine":123,"endColumn":23},{"ruleId":"405","severity":1,"message":"406","line":124,"column":44,"nodeType":"407","messageId":"408","endLine":124,"endColumn":46},{"ruleId":"389","severity":1,"message":"390","line":125,"column":23,"nodeType":"391","messageId":"392","endLine":125,"endColumn":25},{"ruleId":"405","severity":1,"message":"406","line":126,"column":43,"nodeType":"407","messageId":"408","endLine":126,"endColumn":45},{"ruleId":"389","severity":1,"message":"390","line":127,"column":25,"nodeType":"391","messageId":"392","endLine":127,"endColumn":27},{"ruleId":"389","severity":1,"message":"390","line":150,"column":19,"nodeType":"391","messageId":"392","endLine":150,"endColumn":21},{"ruleId":"405","severity":1,"message":"406","line":151,"column":42,"nodeType":"407","messageId":"408","endLine":151,"endColumn":44},{"ruleId":"389","severity":1,"message":"390","line":152,"column":21,"nodeType":"391","messageId":"392","endLine":152,"endColumn":23},{"ruleId":"405","severity":1,"message":"406","line":153,"column":41,"nodeType":"407","messageId":"408","endLine":153,"endColumn":43},{"ruleId":"389","severity":1,"message":"390","line":154,"column":23,"nodeType":"391","messageId":"392","endLine":154,"endColumn":25},{"ruleId":"389","severity":1,"message":"390","line":173,"column":19,"nodeType":"391","messageId":"392","endLine":173,"endColumn":21},{"ruleId":"405","severity":1,"message":"406","line":174,"column":42,"nodeType":"407","messageId":"408","endLine":174,"endColumn":44},{"ruleId":"389","severity":1,"message":"390","line":175,"column":21,"nodeType":"391","messageId":"392","endLine":175,"endColumn":23},{"ruleId":"405","severity":1,"message":"406","line":176,"column":41,"nodeType":"407","messageId":"408","endLine":176,"endColumn":43},{"ruleId":"389","severity":1,"message":"390","line":177,"column":23,"nodeType":"391","messageId":"392","endLine":177,"endColumn":25},{"ruleId":"389","severity":1,"message":"390","line":193,"column":19,"nodeType":"391","messageId":"392","endLine":193,"endColumn":21},{"ruleId":"396","severity":1,"message":"397","line":208,"column":6,"nodeType":"398","endLine":208,"endColumn":25,"suggestions":"415"},{"ruleId":"396","severity":1,"message":"397","line":215,"column":6,"nodeType":"398","endLine":215,"endColumn":22,"suggestions":"416"},{"ruleId":"405","severity":1,"message":"417","line":228,"column":70,"nodeType":"407","messageId":"418","endLine":228,"endColumn":72},{"ruleId":"409","severity":1,"message":"410","line":236,"column":23,"nodeType":"411","endLine":236,"endColumn":74},{"ruleId":"400","replacedBy":"419"},{"ruleId":"402","replacedBy":"420"},{"ruleId":"389","severity":1,"message":"390","line":18,"column":21,"nodeType":"391","messageId":"392","endLine":18,"endColumn":23},{"ruleId":"389","severity":1,"message":"390","line":25,"column":19,"nodeType":"391","messageId":"392","endLine":25,"endColumn":21},{"ruleId":"405","severity":1,"message":"406","line":26,"column":42,"nodeType":"407","messageId":"408","endLine":26,"endColumn":44},{"ruleId":"389","severity":1,"message":"390","line":27,"column":21,"nodeType":"391","messageId":"392","endLine":27,"endColumn":23},{"ruleId":"389","severity":1,"message":"390","line":43,"column":19,"nodeType":"391","messageId":"392","endLine":43,"endColumn":21},{"ruleId":"396","severity":1,"message":"397","line":57,"column":6,"nodeType":"398","endLine":57,"endColumn":22,"suggestions":"421"},{"ruleId":"400","replacedBy":"422"},{"ruleId":"402","replacedBy":"423"},{"ruleId":"383","severity":1,"message":"424","line":19,"column":8,"nodeType":"385","messageId":"386","endLine":19,"endColumn":17},{"ruleId":"383","severity":1,"message":"425","line":22,"column":9,"nodeType":"385","messageId":"386","endLine":22,"endColumn":20},{"ruleId":"400","replacedBy":"426"},{"ruleId":"402","replacedBy":"427"},{"ruleId":"400","replacedBy":"428"},{"ruleId":"402","replacedBy":"429"},{"ruleId":"400","replacedBy":"430"},{"ruleId":"402","replacedBy":"431"},{"ruleId":"383","severity":1,"message":"432","line":28,"column":25,"nodeType":"385","messageId":"386","endLine":28,"endColumn":39},{"ruleId":"400","replacedBy":"433"},{"ruleId":"402","replacedBy":"434"},{"ruleId":"383","severity":1,"message":"424","line":2,"column":8,"nodeType":"385","messageId":"386","endLine":2,"endColumn":17},{"ruleId":"383","severity":1,"message":"435","line":2,"column":41,"nodeType":"385","messageId":"386","endLine":2,"endColumn":46},{"ruleId":"383","severity":1,"message":"436","line":2,"column":48,"nodeType":"385","messageId":"386","endLine":2,"endColumn":54},{"ruleId":"383","severity":1,"message":"424","line":3,"column":8,"nodeType":"385","messageId":"386","endLine":3,"endColumn":17},{"ruleId":"383","severity":1,"message":"437","line":8,"column":8,"nodeType":"385","messageId":"386","endLine":8,"endColumn":13},{"ruleId":"383","severity":1,"message":"438","line":14,"column":8,"nodeType":"385","messageId":"386","endLine":14,"endColumn":13},{"ruleId":"383","severity":1,"message":"439","line":15,"column":10,"nodeType":"385","messageId":"386","endLine":15,"endColumn":24},{"ruleId":"383","severity":1,"message":"440","line":27,"column":10,"nodeType":"385","messageId":"386","endLine":27,"endColumn":19},{"ruleId":"441","severity":1,"message":"442","line":112,"column":23,"nodeType":"411","endLine":116,"endColumn":28},{"ruleId":"441","severity":1,"message":"442","line":119,"column":23,"nodeType":"411","endLine":119,"endColumn":35},{"ruleId":"441","severity":1,"message":"442","line":120,"column":23,"nodeType":"411","endLine":124,"endColumn":28},{"ruleId":"383","severity":1,"message":"443","line":2,"column":10,"nodeType":"385","messageId":"386","endLine":2,"endColumn":14},{"ruleId":"400","replacedBy":"444"},{"ruleId":"402","replacedBy":"445"},{"ruleId":"389","severity":1,"message":"390","line":221,"column":56,"nodeType":"391","messageId":"392","endLine":221,"endColumn":58},{"ruleId":"383","severity":1,"message":"446","line":10,"column":8,"nodeType":"385","messageId":"386","endLine":10,"endColumn":16},{"ruleId":"383","severity":1,"message":"447","line":5,"column":10,"nodeType":"385","messageId":"386","endLine":5,"endColumn":20},{"ruleId":"396","severity":1,"message":"448","line":40,"column":6,"nodeType":"398","endLine":40,"endColumn":8,"suggestions":"449"},{"ruleId":"383","severity":1,"message":"450","line":2,"column":10,"nodeType":"385","messageId":"386","endLine":2,"endColumn":20},{"ruleId":"383","severity":1,"message":"451","line":1,"column":36,"nodeType":"385","messageId":"386","endLine":1,"endColumn":39},{"ruleId":"396","severity":1,"message":"452","line":41,"column":6,"nodeType":"398","endLine":41,"endColumn":14,"suggestions":"453"},{"ruleId":"454","severity":1,"message":"455","line":62,"column":13,"nodeType":"411","endLine":62,"endColumn":45},{"ruleId":"383","severity":1,"message":"456","line":2,"column":8,"nodeType":"385","messageId":"386","endLine":2,"endColumn":15},{"ruleId":"383","severity":1,"message":"457","line":1,"column":17,"nodeType":"385","messageId":"386","endLine":1,"endColumn":25},{"ruleId":"383","severity":1,"message":"458","line":1,"column":27,"nodeType":"385","messageId":"386","endLine":1,"endColumn":36},{"ruleId":"383","severity":1,"message":"459","line":5,"column":22,"nodeType":"385","messageId":"386","endLine":5,"endColumn":30},{"ruleId":"383","severity":1,"message":"424","line":2,"column":8,"nodeType":"385","messageId":"386","endLine":2,"endColumn":17},{"ruleId":"383","severity":1,"message":"460","line":4,"column":8,"nodeType":"385","messageId":"386","endLine":4,"endColumn":18},{"ruleId":"383","severity":1,"message":"461","line":13,"column":9,"nodeType":"385","messageId":"386","endLine":13,"endColumn":21},{"ruleId":"383","severity":1,"message":"462","line":2,"column":10,"nodeType":"385","messageId":"386","endLine":2,"endColumn":23},{"ruleId":"383","severity":1,"message":"463","line":3,"column":16,"nodeType":"385","messageId":"386","endLine":3,"endColumn":22},{"ruleId":"400","replacedBy":"464"},{"ruleId":"402","replacedBy":"465"},{"ruleId":"383","severity":1,"message":"450","line":2,"column":10,"nodeType":"385","messageId":"386","endLine":2,"endColumn":20},{"ruleId":"383","severity":1,"message":"466","line":3,"column":10,"nodeType":"385","messageId":"386","endLine":3,"endColumn":15},"@typescript-eslint/no-unused-vars","'Image' is defined but never used.","Identifier","unusedVar","'BuilderContext' is defined but never used.","'setState' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'calculateCardHeight' is assigned a value but never used.","'ToolbarHeading' is defined but never used.","'InputField' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'register'. Either include it or remove the dependency array.","ArrayExpression",["467"],"no-native-reassign",["468"],"no-negated-in-lhs",["469"],"'AddTextButton' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",["468"],["469"],"Expected '!==' and instead saw '!='.",["470"],["471"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd",["468"],["469"],["472"],["468"],["469"],"'AppLayout' is defined but never used.","'authContext' is assigned a value but never used.",["468"],["469"],["468"],["469"],["468"],["469"],"'onRequestClose' is assigned a value but never used.",["468"],["469"],"'Route' is defined but never used.","'Switch' is defined but never used.","'Table' is defined but never used.","'Flows' is defined but never used.","'ProtectedRoute' is defined but never used.","'isLoading' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'grey' is defined but never used.",["468"],["469"],"'feature2' is defined but never used.","'AuthButton' is defined but never used.","React Hook useEffect has missing dependencies: 'botData' and 'bots'. Either include them or remove the dependency array. You can also do a functional update 'setBotData(b => ...)' if you only need 'botData' in the 'setBotData' call.",["473"],"'darkerGrey' is defined but never used.","'Ref' is defined but never used.","React Hook useEffect has a missing dependency: 'handleSidebarState'. Either include it or remove the dependency array. If 'handleSidebarState' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["474"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'Toolbar' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'FormLink' is defined but never used.","'Breadcrumb' is defined but never used.","'sidebarState' is assigned a value but never used.","'FlowStateType' is defined but never used.","'uuidv4' is defined but never used.",["468"],["469"],"'media' is defined but never used.",{"desc":"475","fix":"476"},"no-global-assign","no-unsafe-negation",{"desc":"477","fix":"478"},{"desc":"479","fix":"480"},{"desc":"479","fix":"481"},{"desc":"482","fix":"483"},{"desc":"484","fix":"485"},"Update the dependencies array to be: [isChangingTitle, register]",{"range":"486","text":"487"},"Update the dependencies array to be: [isChangingHeading, register]",{"range":"488","text":"489"},"Update the dependencies array to be: [isChangingBody, register]",{"range":"490","text":"491"},{"range":"492","text":"491"},"Update the dependencies array to be: [botData, bots]",{"range":"493","text":"494"},"Update the dependencies array to be: [handleSidebarState, isOpen]",{"range":"495","text":"496"},[1447,1464],"[isChangingTitle, register]",[5917,5936],"[isChangingHeading, register]",[6077,6093],"[isChangingBody, register]",[1764,1780],[1057,1059],"[botData, bots]",[1369,1377],"[handleSidebarState, isOpen]"]