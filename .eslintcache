[{"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Bots/index.tsx":"1","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/buttons.ts":"2","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/Dropdown/styles.ts":"3","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/table.ts":"4","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/Pagination/index.tsx":"5","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/Pagination/styles.ts":"6","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Bots/styles.ts":"7","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/layout/AppLayout.tsx":"8","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Flows/index.tsx":"9","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/grid.ts":"10","/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/flows.ts":"11","/home/rabinson/Freelancing/ShipboardBot/frontend/src/styles/theme.ts":"12","/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Auth/AuthProvider.tsx":"13","/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Auth/reducer.ts":"14","/home/rabinson/Freelancing/ShipboardBot/frontend/src/routes/ProtectedRoute.tsx":"15","/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Modal/ModalProvider.tsx":"16","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Templates/index.tsx":"17","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/form.ts":"18","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/layout/AuthLayout.tsx":"19","/home/rabinson/Freelancing/ShipboardBot/frontend/src/utils/request.ts":"20","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/info/index.tsx":"21","/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Builder/BuilderProvider.tsx":"22","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/navbar/styles.ts":"23","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Sidebar/index.tsx":"24","/home/rabinson/Freelancing/ShipboardBot/frontend/src/index.tsx":"25","/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Auth/JWTValidator.ts":"26","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/error/404.tsx":"27","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/auth/RegisterPage.tsx":"28","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/typography.ts":"29","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/header/styles.ts":"30","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/navbar/index.tsx":"31","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/feature/styles.ts":"32","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Sidebar/styles.ts":"33","/home/rabinson/Freelancing/ShipboardBot/frontend/src/App.tsx":"34","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Dashboard/index.tsx":"35","/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/auth.ts":"36","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/footer/index.tsx":"37","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/info/styles.ts":"38","/home/rabinson/Freelancing/ShipboardBot/frontend/src/styles/global.ts":"39","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/LandingPage.tsx":"40","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/auth/LoginPage.tsx":"41","/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/bots.ts":"42","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/feature/index.tsx":"43","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/footer/styles.ts":"44","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Flows/CreateModal.tsx":"45","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Flows/EditModal.tsx":"46","/home/rabinson/Freelancing/ShipboardBot/frontend/src/styles/mediaQueries.ts":"47","/home/rabinson/Freelancing/ShipboardBot/frontend/src/constants/urls.ts":"48","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Flows/DeleteModal.tsx":"49","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/header/index.tsx":"50","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/CreateModal.tsx":"51","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/EditModal.tsx":"52","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/DeleteModal.tsx":"53","/home/rabinson/Freelancing/ShipboardBot/frontend/src/utils/storage.ts":"54","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Settings/index.tsx":"55"},{"size":5030,"mtime":1611542967063,"results":"56","hashOfConfig":"57"},{"size":2213,"mtime":1611420752275,"results":"58","hashOfConfig":"57"},{"size":603,"mtime":1611407912500,"results":"59","hashOfConfig":"57"},{"size":1454,"mtime":1611403637931,"results":"60","hashOfConfig":"57"},{"size":1583,"mtime":1611403993930,"results":"61","hashOfConfig":"57"},{"size":686,"mtime":1607915643490,"results":"62","hashOfConfig":"57"},{"size":105,"mtime":1611401434713,"results":"63","hashOfConfig":"57"},{"size":1207,"mtime":1611403304542,"results":"64","hashOfConfig":"57"},{"size":4761,"mtime":1611542913537,"results":"65","hashOfConfig":"57"},{"size":1957,"mtime":1611407658574,"results":"66","hashOfConfig":"57"},{"size":972,"mtime":1611504300151,"results":"67","hashOfConfig":"57"},{"size":300,"mtime":1606619841444,"results":"68","hashOfConfig":"57"},{"size":1534,"mtime":1607842467004,"results":"69","hashOfConfig":"57"},{"size":442,"mtime":1607166058000,"results":"70","hashOfConfig":"57"},{"size":944,"mtime":1611287624293,"results":"71","hashOfConfig":"57"},{"size":3565,"mtime":1608961298239,"results":"72","hashOfConfig":"57"},{"size":210,"mtime":1610158645219,"results":"73","hashOfConfig":"57"},{"size":945,"mtime":1608217208422,"results":"74","hashOfConfig":"57"},{"size":3062,"mtime":1607357777066,"results":"75","hashOfConfig":"57"},{"size":494,"mtime":1607840291044,"results":"76","hashOfConfig":"57"},{"size":1029,"mtime":1607690783508,"results":"77","hashOfConfig":"57"},{"size":1175,"mtime":1610988958710,"results":"78","hashOfConfig":"57"},{"size":596,"mtime":1607358244451,"results":"79","hashOfConfig":"57"},{"size":3609,"mtime":1608218330018,"results":"80","hashOfConfig":"57"},{"size":515,"mtime":1607764359769,"results":"81","hashOfConfig":"57"},{"size":299,"mtime":1607173241742,"results":"82","hashOfConfig":"57"},{"size":467,"mtime":1608091184084,"results":"83","hashOfConfig":"57"},{"size":4457,"mtime":1607849994798,"results":"84","hashOfConfig":"57"},{"size":1320,"mtime":1609667047505,"results":"85","hashOfConfig":"57"},{"size":2194,"mtime":1607358477789,"results":"86","hashOfConfig":"57"},{"size":717,"mtime":1607357496043,"results":"87","hashOfConfig":"57"},{"size":707,"mtime":1606842094420,"results":"88","hashOfConfig":"57"},{"size":2446,"mtime":1608360773902,"results":"89","hashOfConfig":"57"},{"size":2024,"mtime":1611397733035,"results":"90","hashOfConfig":"57"},{"size":159,"mtime":1607998049825,"results":"91","hashOfConfig":"57"},{"size":1159,"mtime":1607840479831,"results":"92","hashOfConfig":"57"},{"size":795,"mtime":1607276608868,"results":"93","hashOfConfig":"57"},{"size":1251,"mtime":1607358308147,"results":"94","hashOfConfig":"57"},{"size":1061,"mtime":1610853751719,"results":"95","hashOfConfig":"57"},{"size":395,"mtime":1606572185322,"results":"96","hashOfConfig":"57"},{"size":3083,"mtime":1608089518101,"results":"97","hashOfConfig":"57"},{"size":939,"mtime":1611505690538,"results":"98","hashOfConfig":"57"},{"size":2469,"mtime":1607354234054,"results":"99","hashOfConfig":"57"},{"size":758,"mtime":1607358268935,"results":"100","hashOfConfig":"57"},{"size":2347,"mtime":1611495697651,"results":"101","hashOfConfig":"57"},{"size":2316,"mtime":1611505901411,"results":"102","hashOfConfig":"57"},{"size":437,"mtime":1607357171179,"results":"103","hashOfConfig":"57"},{"size":409,"mtime":1611392571410,"results":"104","hashOfConfig":"57"},{"size":1488,"mtime":1611506630557,"results":"105","hashOfConfig":"57"},{"size":962,"mtime":1607398449634,"results":"106","hashOfConfig":"57"},{"size":2305,"mtime":1611506040626,"results":"107","hashOfConfig":"57"},{"size":2326,"mtime":1611505989860,"results":"108","hashOfConfig":"57"},{"size":1475,"mtime":1611506512498,"results":"109","hashOfConfig":"57"},{"size":330,"mtime":1606965896953,"results":"110","hashOfConfig":"57"},{"size":218,"mtime":1607998072129,"results":"111","hashOfConfig":"57"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"v8ty68",{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"120"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"120"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"129"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"117"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"170"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"117"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"126"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"120"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"129"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"117"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"129"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"129"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Bots/index.tsx",["245","246","247","248","249","250","251"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/buttons.ts",["252"],"import styled from 'styled-components';\nimport Toolbar from '../dashboard/builder/Toolbar/index';\n\nexport const StyledButton = styled.button`\n  display:flex;\n  align-items:center;\n  justify-content:center;\n  background: #ffffff;\n  border-radius: 12px 12px 12px 0px;\n  border: 2px solid #5850eb;\n  box-sizing: border-box;\n  cursor: pointer;\n  font-family: Comic Neue, Roboto, sans-serif;\n  font-size: 1.5rem;\n  padding:.9rem;\n  width: 10rem;\n  outline: none;\n`;\n\nexport const PrimaryButton = styled(StyledButton)`\n  background-color: #5850eb;\n  height: 2.5rem;\n  color: #ffffff;\n  margin-right: 0rem;\n  &:focus {\n    background-color: #251DCA\n  }\n`;\n\nexport const FormButton = styled(PrimaryButton)`\n  width: 100%;\n  height: 3.5rem;\n  font-size: 1.6rem;\n  font-weight: 600;\n  margin-top: 1.5rem;\n`;\n\nexport const AuthButton = styled(StyledButton)`\n  width: 20rem;\n  font-size: 1.6rem;\n`;\n\n\nexport const ToolbarButton = styled.button < { height?: string, width?: string, fontSize?: string}>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: ${props => props.height ? props.height : '2rem'};\n  width: ${props => props.width ? props.width : '2rem'};\n  border: none;\n  padding: 0;\n  background: #ffffff;\n  color: #8392AB;\n  font-family: Roboto, sans-serif;\n  font-weight: 400;\n  font-size: ${props => props.fontSize ? props.fontSize : '1.6rem'};\n  margin: .8rem;\n  cursor: pointer;\n  background-image: url(\"data:image/svg+xml,%3csvg width='100%25' height='100%25' xmlns='http://www.w3.org/2000/svg'%3e%3crect width='100%25' height='100%25' fill='none' rx='7' ry='7' stroke='%238392ABFF' stroke-width='4' stroke-dasharray='10%2c10' stroke-dashoffset='23' stroke-linecap='round'/%3e%3c/svg%3e\");\n  border-radius: 0px 0px 7px 7px;\n  &:hover {\n    background-image: url(\"data:image/svg+xml,%3csvg width='100%25' height='100%25' xmlns='http://www.w3.org/2000/svg'%3e%3crect width='100%25' height='100%25' fill='none' rx='7' ry='7' stroke='%235850EBFF' stroke-width='4' stroke-dasharray='10%2c10' stroke-dashoffset='23' stroke-linecap='round'/%3e%3c/svg%3e\");\n    color: #5850EB;\n  }\n`;\n\nexport const AddTextButton = styled(ToolbarButton)`\n  margin: 0rem;\n  margin-top: -.5rem;\n  width: 100%;\n`;\n",["253","254"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/Dropdown/styles.ts",[],["255","256"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/table.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/Pagination/index.tsx",["257","258","259","260"],"import React, { useState, useEffect } from 'react';\nimport { PaginationItem, PaginationWrapper } from './styles';\nimport { BiChevronLeft, BiChevronRight } from 'react-icons/bi';\nimport pagination from '../../../utils/pagination';\n\ninterface PaginationPropsInteface {\n  total: number;\n  activePage: number;\n  onChange: (pageNumber: number) => void;\n}\n\nconst Pagination: React.FC<PaginationPropsInteface> = (props) => {\n  const pageBtns = pagination(props.activePage, props.total);\n\n  return (\n    <PaginationWrapper>\n      <PaginationItem>\n        <BiChevronLeft\n          onClick={() => {\n            if (props.activePage != 0) {\n              props.onChange(props.activePage - 1);\n            }\n          }}\n        />\n      </PaginationItem>\n      {pageBtns &&\n        pageBtns.map((page, index) => {\n          if (typeof page !== 'string') {\n            var isActive = page === props.activePage ? 1 : 0;\n            return (\n              <PaginationItem\n                isActive={isActive}\n                onClick={() => {\n                  props.onChange(page);\n                }}\n              key={index}>\n                {page}\n              </PaginationItem>\n            );\n          } else {\n            return <PaginationItem>...</PaginationItem>;\n          }\n        })}\n      <PaginationItem>\n        <BiChevronRight\n          onClick={() => {\n            if (props.activePage != props.total) {\n              props.onChange(props.activePage + 1);\n            }\n          }}\n        />\n      </PaginationItem>\n    </PaginationWrapper>\n  );\n};\n\nexport default Pagination;\n",["261","262"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/Pagination/styles.ts",[],["263","264"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Bots/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/layout/AppLayout.tsx",["265","266"],"import React from 'react';\nimport styled from 'styled-components';\nimport Sidebar from '../dashboard/Sidebar';\nimport Breadcrumb from '../dashboard/Breadcrumb';\nimport { BuilderProvider } from '../../services/Builder/BuilderProvider';\n\ninterface LayoutProps {\n  children?: any;\n}\n\nconst AppLayout: React.FC<LayoutProps> = (props) => {\n  const [isOpen, setIsOpen] = React.useState<boolean>(true);\n  const sidebarState = React.useRef();\n\n  const handleSidebarState = React.useCallback((isOpen) => {\n    setIsOpen(isOpen);\n  }, []);\n\n  return (\n    <LayoutWrapper>\n      <Sidebar handleSidebarState={handleSidebarState} />\n      <BuilderProvider sidebar={isOpen}>\n        <AppContainer>\n          {/* <Breadcrumb /> */}\n          {props.children}\n        </AppContainer>\n      </BuilderProvider>\n    </LayoutWrapper>\n  );\n};\n\nexport default AppLayout;\n\nconst LayoutWrapper = styled.div`\n  display: flex;\n  min-height: 100vh;\n`;\n\nconst AppContainer = styled.div`\n  margin-left: -2rem;\n  flex-grow: 1;\n\n  .page-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin: 2rem;\n\n    .button {\n      align-self: center;\n    }\n  }\n\n  .container {\n    margin: 0 4rem;\n  }\n`;\n",["267","268"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Flows/index.tsx",["269","270","271","272","273"],"import React, { useState, useEffect } from 'react';\nimport { GridWrapper } from '../../../components/common/grid';\nimport { PrimaryButton } from './../../../components/common/buttons';\nimport { HiDotsVertical } from 'react-icons/hi';\nimport { DropdownWrapper } from '../../../components/common/Dropdown/styles';\nimport { useModal } from '../../../services/Modal/ModalProvider';\nimport { getFlows } from '../../../apis/flows';\nimport {withRouter} from 'react-router-dom'\nimport FlowCreateModal from '../../../components/dashboard/Flows/CreateModal';\nimport FlowEditModal from '../../../components/dashboard/Flows/EditModal';\nimport FlowDeleteModal from '../../../components/dashboard/Flows/DeleteModal';\nimport Pagination from '../../../components/common/Pagination/index';\n\n\n\ntype FlowType = {\n  id: string;\n  name: string;\n  last_modified: string;\n};\n\nconst Flows = (props) => {\n  const { showModal, hideModal } = useModal();\n  const [flows, setFlows] = useState<Array<FlowType>>();\n  const [pageNumber, setPageNumber] = useState(1);\n  const [isLoading, setIsLoading] = useState(true);\n  const [lastPage, setLastPage] = useState(1);\n\n  const botId = props.match.params.id;\n\n  const getFlowsData = (bot:string, pageNumber: number) => {\n    getFlows(bot, pageNumber)\n      .then((response) => {\n        setFlows(response.data);\n        setPageNumber(response.meta.current_page);\n        setLastPage(response.meta.last_page);\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  useEffect(() => {\n    getFlowsData(botId, pageNumber);\n  }, [pageNumber, lastPage]);\n\n\n  const handleCreateOpen = (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => {\n    showModal(() => (\n      <FlowCreateModal bot={botId} hideModal={hideModal} handleCreateFlow={ handleCreateFlow } />\n    ));\n  };\n\n  const handleEditOpen = (data: FlowType) => {\n    showModal(() => (\n      <FlowEditModal hideModal={hideModal} flow={data} handleEditFlow={ handleEditFlow } />\n    ));\n  };\n\n  const handleDeleteConfirmation = (data: FlowType) => {\n    showModal(() => (\n      <FlowDeleteModal hideModal={hideModal} flow={data} handleDeleteFlow={ handleDeleteFlow }/>\n    ));\n  };\n\n  const handlePageChange = (pageNumber: number) => {\n    setPageNumber(pageNumber);\n  };\n\n  const handleCreateFlow = (newFlow: FlowType) => { \n    const newFlowList = flows.concat(newFlow);\n    setFlows(newFlowList)\n  }\n\n  const handleEditFlow = (data) => {\n    const flowId = flows.findIndex(\n      (obj) => obj.id == data.id\n    );\n    setFlows(flows.map((item, index) => {\n      if (index == flowId) {\n        item.name = data.name\n      }\n      return item;\n    }));\n  }\n\n  const handleDeleteFlow = (id) => {\n    const flowId = flows.findIndex(\n      (obj) => obj.id == id\n    );\n    flows.splice(flowId, 1);\n  }\n  \n  return (\n    <React.Fragment>\n    <div className=\"page-header\">\n      <h1 className=\"main-heading\">Flows</h1>\n        <PrimaryButton onClick={handleCreateOpen}>Add Flow</PrimaryButton>\n    </div>\n      <GridWrapper>\n        <div className=\"grid-row\">\n          {flows && flows.map((data: FlowType) => {\n            return (\n              <React.Fragment key={ data.id }>\n                <div className=\"grid-item\">\n                  <div className=\"grid-item-wrapper\">\n                    <div className=\"grid-item-container\">\n                      <div className=\"image\">\n                        Image\n                      </div>\n                      <div className=\"tag\">\n                        <p>{data.name}</p>\n                        <DropdownWrapper>\n                          <label className=\"dropbtn\">\n                            <HiDotsVertical />\n                          </label>\n                          <div className=\"dropdown-content\">\n                            <p\n                              onClick={() => {\n                                handleEditOpen(data);\n                              }}>\n                              Edit\n                            </p>\n                            <p\n                              onClick={() => {\n                                handleDeleteConfirmation(data);\n                              }}>\n                              Delete\n                            </p>\n                          </div>\n                        </DropdownWrapper>\n                      </div>           \n                   </div>\n                 </div>\n               </div>\n             </React.Fragment>\n            );\n          })}\n      </div>\n    </GridWrapper>\n\n    <Pagination\n      activePage={pageNumber}\n      total={lastPage}\n      onChange={handlePageChange}\n    />\n  </React.Fragment>\n\n   );\n};\n\nexport default withRouter(Flows);\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/grid.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/flows.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/styles/theme.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Auth/AuthProvider.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Auth/reducer.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/routes/ProtectedRoute.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Modal/ModalProvider.tsx",["274"],"import React, { createContext, useContext, useState } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\ntype ModalStateContextType = {\n  View?: React.FC<{ hideModal: () => void }>;\n  isOpen: boolean;\n  onRequestClose?: () => void;\n};\n\ntype ModalStateModifierContextType = {\n  showModal: (View: React.FC, onRequestClose?: () => void) => void;\n  hideModal: () => void;\n};\n\nconst ModalStateContext = createContext<\n  ModalStateContextType | null | undefined\n>(null);\n\nconst ModalStateModifierContext = createContext<ModalStateModifierContextType>({\n  showModal: () => {},\n  hideModal: () => {},\n});\n\nconst ModalProvider = ({ children }: { children: React.ReactNode }) => {\n  const [modalState, setModalState] = useState<ModalStateContextType | null>();\n  const { isOpen, View, onRequestClose } = modalState || {\n    View: undefined,\n    onRequestClose: undefined,\n  };\n\n  const showModal = (\n    View?: React.FC<{ hideModal: () => void }>,\n    onRequestClose?: () => void\n  ) => {\n    setModalState({ View, isOpen: true, onRequestClose });\n  };\n  const hideModal = () => {\n    setModalState({\n      View: undefined,\n      isOpen: false,\n      onRequestClose: undefined,\n    });\n  };\n  const modalSpring = useSpring({\n    from: { display: 'none' },\n    to: async (next: any) => {\n      if (isOpen) {\n        await next({\n          display: 'block',\n          transform: 'translate(0px,0px)',\n          opacity: 1,\n        });\n      } else {\n        await next({ transform: 'translate(0px,100px)', opacity: 0 });\n        await next({\n          display: 'none',\n        });\n      }\n    },\n  });\n  return (\n    <ModalStateContext.Provider value={modalState}>\n      <ModalStateModifierContext.Provider value={{ showModal, hideModal }}>\n        {children}\n        <ModalWrapper>\n          <animated.div style={modalSpring} className=\"modal\">\n            {View && <View hideModal={hideModal} />}\n          </animated.div>\n        </ModalWrapper>\n      </ModalStateModifierContext.Provider>\n    </ModalStateContext.Provider>\n  );\n};\nModalProvider.propTypes = {\n  children: PropTypes.element,\n};\n\nexport default ModalProvider;\n\nexport const useModal = () => {\n  const context = useContext(ModalStateModifierContext);\n  if (context === undefined) {\n    throw new Error('useModal must be used within a ModalProvider');\n  }\n  return context;\n};\n\nexport const ModalWrapper = styled.div`\n\n  .modal {\n    position: fixed;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100vh;\n    background: rgba(0, 0, 0, 0.7);\n    backdrop-filter: blur(5px);\n    overflow-y: scroll;\n    overflow-x: hidden;\n    padding: 4rem 0;\n    h1 {\n      padding-bottom: 1rem;\n    }\n    h2 {\n      margin-top: -1rem;\n    }\n    input {\n      margin-bottom: 1rem;\n      margin-top: 1rem;\n    }\n    .last-input {\n      margin-bottom: 3rem;\n    }\n    &-exit {\n      background: rgb(255, 0, 76, 0.7);\n      border-radius: 10rem;\n      border: 0;\n      cursor: pointer;\n      height: 1.5rem;\n      outline: none;\n      padding: 0.5rem;\n      position: absolute;\n      right: 2rem;\n      top: 2rem;\n      width: 1.5rem;\n      &:active {\n        filter: brightness(0.8);\n      }\n    }\n    &-body {\n      align-items: center;\n      background: #ffffff;\n      border-radius: 24px;\n      box-shadow: 0px 4px 24px rgba(0, 0, 0, 0.12);\n      margin: 0 auto;\n      max-width: 40rem;\n      min-height: 25rem;\n      padding: 4rem;\n      position: relative;\n      /* p,\n      h2 {\n        color: black;\n      } */\n    }\n  }\n`;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Templates/index.tsx",["275"],"import React from 'react';\nimport AppLayout from '../../../components/layout/AppLayout';\n\nconst Templates = (props: any) => {\n  return <h1 className=\"main-heading\">Templates</h1>;\n};\n\nexport default Templates;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/form.ts",["276"],"import styled from 'styled-components'\nimport { grey } from '../../styles/theme';\n\nexport const InputField = styled.input<{isError?: boolean}>`\n  background: ${props => props.isError ? '#FFE4E4' : '#F7F7F7'};\n  border-radius: 7px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.1);\n  box-sizing: border-box;\n  min-height: 3.8rem;\n  min-width: 30rem;\n  padding: .8rem;\n  outline: none;\n  font-family: Roboto, sans-serif;\n  font-style: normal;\n  font-weight: 400;\n  font-size: 1.4rem;\n  color: #000;\n  width: 100%;\n\n\n  &:focus {\n    font-weight: 400;\n    box-shadow: 0 0 0 3px rgba(164, 202, 254, 0.45);\n    border-color: #5850EC;\n  }\n\n  &::placeholder {\n    color: #d7d7d7;\n    font-size: 1.2rem;\n  }\n`;\n\nexport const FormLink = styled.a`\n  text-decoration: none;\n  font-size: 1.2rem;\n  font-family: Roboto, sans-serif;\n  color: #565252;\n\n  &:hover{\n    text-decoration-line: underline;\n    color: #000;\n  }\n`;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/layout/AuthLayout.tsx",["277"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport logo from '../../assets/images/logo-dark.png';\nimport { AuthButton } from '../common/buttons';\n\ninterface LayoutProps {\n  children?: any;\n  type?: string;\n}\n\nconst AuthLayout: React.FC<LayoutProps> = (props) => {\n  return (\n    <LayoutWrapper>\n      <nav className=\"logo-bar\">\n        <Link to=\"/\">\n          <img className=\"logo-img\" src={logo} alt=\"Shipboard Logo\" />\n        </Link>\n      </nav>\n      <AuthContainer>\n        <div className=\"card\">{props.children}</div>\n        {/* {props.type === 'login' && (\n          <div className=\"auth-buttons\">\n            <AuthButton>Sign in with Google</AuthButton>\n            <AuthButton>Sign in with Facebook</AuthButton>\n          </div>\n        )} */}\n      </AuthContainer>\n      <FooterWrapper>\n        <p>©Shipbot Pvt. Ltd. 2020. All rights reserved</p>\n      </FooterWrapper>\n    </LayoutWrapper>\n  );\n};\n\nexport default AuthLayout;\n\nconst LayoutWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n  min-width: 50rem;\n  position: relative;\n\n  .logo-bar {\n    align-content: center;\n    display: flex;\n    margin: auto;\n    max-width: 144rem;\n    min-height: 10rem;\n    width: 100%;\n\n    img {\n      height: 4.5rem;\n      margin-top: 2rem;\n    }\n  }\n`;\n\nconst AuthContainer = styled.div`\n  align-content: center;\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  justify-content: center;\n  margin: auto;\n  position: relative;\n\n  .card {\n    align-items: center;\n    background: #ffffff;\n    border-radius: 24px;\n    box-shadow: 0px 4px 24px rgba(0, 0, 0, 0.12);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    margin-top: -10rem;\n    max-width: 40rem;\n    min-height: 30rem;\n    padding: 4rem;\n\n    h1 {\n      padding-bottom: 1rem;\n    }\n\n    h2 {\n      margin-top: -1rem;\n      padding-bottom: 1rem;\n    }\n\n    input {\n      margin-bottom: 1rem;\n      margin-top: 1rem;\n    }\n\n    .last-input {\n      margin-bottom: 3rem;\n    }\n\n    .link {\n      display: flex;\n      justify-content: space-around;\n      margin-top: 1rem;\n      width: 100%;\n    }\n\n    .go-back {\n      align-items: center;\n      align-self: flex-start;\n      color: #000;\n      cursor: pointer;\n      display: flex;\n      margin-top: 1rem;\n      text-decoration: none;\n\n      &:hover{\n        color: #000;\n        text-decoration-line: underline;\n      }\n\n      h5 {\n        font-family: Roboto, sans-serif;\n        font-size: 1.2rem;\n        font-weight: 300;\n      }\n\n      svg {\n        width: 1.5rem;\n        height: 1.5rem;\n      }\n\n      &:hover {\n        h5 {\n          text-decoration: underline;\n        }\n      }\n    }\n  }\n\n  .auth-buttons {\n    margin-left: -5rem;\n    margin-right: -5rem;\n    display: flex;\n    justify-content: space-between;\n    margin-top: 6rem;\n  }\n`;\n\nconst FooterWrapper = styled.footer`\n  bottom: 0rem;\n  font-size: 1.2rem;\n  padding-right: 10rem;\n  position: absolute;\n  text-align: right;\n  width: 100%;\n`;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/utils/request.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/info/index.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Builder/BuilderProvider.tsx",["278","279"],"import React, { useState, createContext, useContext } from 'react';\nimport { FlowStateType } from '../../../types';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst initialBuilderState = [\n  {\n    id: '12kl23-23k23l0-23l2',\n    name: 'Send Message #1',\n    height: 200,\n    position: {\n      x: 700,\n      y: 50,\n    },\n    children: [],\n    next: '2323-23jljkj23-23jo2i3',\n    isHover: false,\n    isSelected: false,\n  },\n  {\n    id: '2323-23jljkj23-23jo2i3',\n    name: 'Send Message #2',\n    height: 200,\n    position: {\n      x: 1000,\n      y: 100,\n    },\n    children: [],\n    isHover: false,\n    isSelected: false,\n  },\n];\n\nexport const BuilderContext = createContext(undefined);\n\nexport const BuilderProvider = ({ sidebar, children }) => {\n  const [builderState, setBuilderState] = useState(initialBuilderState);\n  return (\n    <BuilderContext.Provider value={[builderState, setBuilderState, sidebar]} >\n      {children}\n    </BuilderContext.Provider>\n  );\n};\n\nexport const useBuilder = () => {\n  const context = useContext(BuilderContext);\n  if (context === undefined) {\n    throw new Error('useBuilderState must be used within a BuilderProvider');\n  }\n  return context;\n};\n",["280","281"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/navbar/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Sidebar/index.tsx",["282","283","284"],"import React, { useEffect, useRef, Ref } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport logo from '../../../assets/images/logo-light.png';\nimport shortLogo from '../../../assets/images/logo-short.png';\nimport avatar from '../../../assets/images/avatar.jpg';\nimport { AiOutlineDashboard, AiOutlineRobot } from 'react-icons/ai';\nimport { TiFlowMerge } from 'react-icons/ti';\nimport { HiTemplate } from 'react-icons/hi';\nimport { IoSettingsSharp, IoLogOut } from 'react-icons/io5';\nimport { getAuthUser, logOut } from '../../../apis/auth';\nimport { useAuthDispatch } from '../../../services/Auth/AuthProvider';\nimport {\n  SidebarWrapper,\n  SidebarMenu,\n  LogoWrapper,\n  UserInfoWrapper,\n  MenuItem,\n  ToggleBar,\n} from './styles';\nimport { BiChevronsLeft, BiChevronsRight } from 'react-icons/bi';\n\ninterface SidebarProps {\n  handleSidebarState: (isOpen: boolean) => void;\n}\n\nconst Sidebar: React.FC<SidebarProps> = ({ handleSidebarState }) => {\n  const [isOpen, setIsOpen] = React.useState(true);\n  const nameRef = useRef<HTMLHeadingElement>(null);\n  const history = useHistory();\n  const authDispatch = useAuthDispatch();\n\n  useEffect(() => {\n    getAuthUser().then((response) => {\n      var x = document.getElementById('username');\n      if (x) {\n        x.innerHTML = response.data.name;\n      }\n    });\n\n    handleSidebarState(isOpen);\n  }, [isOpen]);\n\n  const handleLogOut = (event: any) => {\n    event.preventDefault();\n    logOut().then((response) => {\n      authDispatch({\n        type: 'LOGOUT',\n      });\n      history.push('/');\n    });\n  };\n\n  return (\n    <SidebarWrapper>\n      <SidebarMenu isOpen={isOpen}>\n        <LogoWrapper>\n          <img src={isOpen ? logo : shortLogo} alt=\"Logo\" />\n        </LogoWrapper>\n        <UserInfoWrapper isOpen={isOpen}>\n          <img src={avatar} alt=\"Avatar\" />\n          <div className=\"user-info\">\n            <h2 ref={nameRef} id=\"username\"></h2>\n            <p>Profile Setting</p>\n          </div>\n        </UserInfoWrapper>\n        <div className=\"menu_list\">\n          <div className=\"menu_list-top\">\n            <Link to=\"/app\">\n              <MenuItem isActive isOpen={isOpen}>\n                <AiOutlineDashboard className=\"menu-icon\" />\n                <p>Dashboard</p>\n              </MenuItem>\n            </Link>\n            <Link to=\"/bots\">\n              <MenuItem isOpen={isOpen}>\n                <AiOutlineRobot className=\"menu-icon\" />\n                <p>Bots</p>\n              </MenuItem>\n            </Link>\n            <Link to=\"/flows\">\n              <MenuItem isOpen={isOpen}>\n                <TiFlowMerge className=\"menu-icon\" />\n                <p>Flows</p>\n              </MenuItem>\n            </Link>\n            <Link to=\"/templates\">\n              <MenuItem isOpen={isOpen}>\n                <HiTemplate className=\"menu-icon\" />\n                <p>Templates</p>\n              </MenuItem>\n            </Link>\n          </div>\n          <div className=\"menu_list-bottom\">\n            <Link to=\"/settings\">\n              <MenuItem isOpen={isOpen}>\n                <IoSettingsSharp className=\"menu-icon\" />\n                <p>Settings</p>\n              </MenuItem>\n            </Link>\n            <MenuItem isOpen={isOpen} onClick={handleLogOut}>\n              <IoLogOut className=\"menu-icon\" />\n              <p>Logout</p>\n            </MenuItem>\n          </div>\n        </div>\n      </SidebarMenu>\n      <ToggleBar onClick={() => setIsOpen(!isOpen)}>\n        {isOpen && <BiChevronsLeft />}\n        {!isOpen && <BiChevronsRight />}\n      </ToggleBar>\n    </SidebarWrapper>\n  );\n};\n\nexport default Sidebar;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/index.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Auth/JWTValidator.ts",["285"],"import jwt from 'jsonwebtoken';\n\nexport default (token: any) => {\n  if (token) {\n    const data: any = jwt.decode(token);\n\n    const expDate: Date = new Date(data.exp * 1000);\n    const currentDate: Date = new Date();\n    return expDate.valueOf() - currentDate.valueOf() > 0;\n  }\n  return false;\n};\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/error/404.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/auth/RegisterPage.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/common/typography.ts",["286","287"],"import styled from 'styled-components';\nimport { darkerGrey } from '../../styles/theme';\nimport { media } from '../../styles/mediaQueries';\n\nexport const PrimaryHeader = styled.h1`\n  font-family: Comic Neue, Roboto, sans-serif;\n  font-weight: 700;\n  font-size: 3.6rem;\n  color: #000;\n`;\n\nexport const FormHeader = styled(PrimaryHeader)`\n  font-size: 2.6rem;\n  text-align: center;\n`;\n\nexport const FormSubHeader = styled.h2`\n  font-family: Roboto, sans-serif;\n  font-weight: 300;\n  font-size: 1.6rem;\n  color: #000;\n  text-align: center;\n`;\n\nexport const SecondaryHeader = styled.h1`\n  font-family: Roboto, sans-serif;\n  font-weight: 500;\n  line-height: 5.6rem;\n  color: #000;\n  font-size: 2.4rem;\n`; \n\nexport const Paragraph = styled.p`\n  font-family: inherit;\n  font-size: 1.5rem;\n  color: ${(props) => props.theme.darkerGrey};\n  line-height: 2.8rem;\n`;\n\nexport const ToolbarHeading = styled.h2`\n  font-family: Roboto, sans-serif;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 1.8rem;\n  line-height: 2.1rem;\n  color: #797979;\n`;\n\nexport const VerticalGap = styled.div<{size: string}>`\n  width: auto;\n  height: ${(props) => props.size}rem;\n  display: block;\n  flex-shrink: 0;\n`;\n\nexport const HorizontalGap = styled.div<{size: string}>`\n  width: ${(props) => props.size}rem;\n  height: auto;\n  display: block;\n`;","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/header/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/navbar/index.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/feature/styles.ts",["288"],"import styled from 'styled-components';\nimport { darkerGrey } from '../../../styles/theme';\n\nexport const FeatureWrapper = styled.section`\n  margin: auto;\n  max-width: 120rem;\n  margin-top: 3rem;\n  \n  .heading {\n    text-align: center;\n    margin-top: 2rem;\n  }\n`;\n\nexport const FeatureGrid = styled.div`\nmargin-top:1rem;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  text-align: none;\n\n  .feature {\n    background-color: ${props => props.theme.white};\n    border-radius: 20px;\n    box-shadow: 0px 4px 24px rgba(0, 0, 0, 0.25);    height: 24rem;\n    margin: 2rem;\n    padding: 2rem;\n    width: 35rem;\n\n    img {\n      width: 4rem;\n      height: auto;\n      margin-top: 1rem;\n    }\n  }\n`;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Sidebar/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/App.tsx",["289","290"],"import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport LandingPage from './pages/LandingPage';\nimport GlobalStyle from './styles/global';\nimport RegisterPage from './pages/auth/RegisterPage';\nimport LoginPage from './pages/auth/LoginPage';\nimport ForgotPassworPage from './pages/auth/ForgotPasswordPage';\nimport { ProtectedRoute } from './routes/ProtectedRoute';\nimport Dashboard from './pages/main/Dashboard/index';\nimport NotFound from './pages/error/404';\nimport { useAuthContext } from './services/Auth/AuthProvider';\nimport Bots from './pages/main/Bots/index';\nimport Flows from './pages/main/Flows/index';\nimport Templates from './pages/main/Templates/index';\nimport Settings from './pages/main/Settings/index';\nimport ModalProvider from './services/Modal/ModalProvider';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport AppLayout from './components/layout/AppLayout';\n\nconst App: React.FC = () => {\n  const authContext = useAuthContext();\n  return (\n    <ModalProvider>\n      <BrowserRouter>\n        <GlobalStyle />\n        <>\n          <ToastContainer />\n          <Switch>\n            <Route exact path=\"/\" component={LandingPage} />\n            <Route exact path=\"/register\" component={RegisterPage} />\n            <Route exact path=\"/login\" component={LoginPage} />\n            <Route\n              exact\n              path=\"/forgot-password\"\n              component={ForgotPassworPage}\n            />\n            <ProtectedRoute exact path=\"/app\" component={Dashboard} />\n            <ProtectedRoute exact path=\"/bots\" component={Bots} />\n            <ProtectedRoute path=\"/bot/:id\" component={Flows} />\n            <ProtectedRoute exact path=\"/templates\" component={Templates} />\n            <ProtectedRoute exact path=\"/settings\" component={Settings} />\n            <Route path=\"*\" component={NotFound} />\n          </Switch>\n        </>\n      </BrowserRouter>\n    </ModalProvider>\n  );\n};\n\nexport default App;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Dashboard/index.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/auth.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/footer/index.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/info/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/styles/global.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/LandingPage.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/auth/LoginPage.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/bots.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/feature/index.tsx",["291"],"import React from 'react';\nimport { FeatureWrapper, FeatureGrid } from './styles';\nimport {\n  PrimaryHeader,\n  SecondaryHeader,\n  Paragraph,\n} from '../../common/typography';\n\nimport feature1 from '../../../assets/images/features/1.png';\nimport feature2 from '../../../assets/images/features/2.png';\nimport feature3 from '../../../assets/images/features/3.png';\nimport feature4 from '../../../assets/images/features/4.png';\nimport feature5 from '../../../assets/images/features/5.png';\n\nconst Feature = () => {\n  return (\n    <FeatureWrapper>\n      <PrimaryHeader className=\"heading\">Key Features</PrimaryHeader>\n      <FeatureGrid>\n        <div className=\"feature\">\n          <img src={feature1} alt=\"feature1\" />\n          <SecondaryHeader>Easy to develop</SecondaryHeader>\n          <Paragraph>\n            Create components connected them and make the bot flow in ease\n          </Paragraph>\n        </div>\n        <div className=\"feature\">\n          <img src={feature5} alt=\"feature1\" />\n          <SecondaryHeader>Multipe Platform</SecondaryHeader>\n          <Paragraph>\n            Create one bot and publish it in different platforms such as\n            facebook, slack, telegram, etc.\n          </Paragraph>\n        </div>\n        <div className=\"feature\">\n          <img src={feature3} alt=\"feature1\" />\n          <SecondaryHeader>Template Variety</SecondaryHeader>\n          <Paragraph>\n            Free templates which can be used to setup your bot.\n          </Paragraph>\n        </div>\n        <div className=\"feature\">\n          <img src={feature4} alt=\"feature1\" />\n          <SecondaryHeader>Rich Content</SecondaryHeader>\n          <Paragraph>\n            Various message content such as text, gallery, buttons.\n          </Paragraph>\n        </div>\n        <div className=\"feature\">\n          <img src={feature5} alt=\"feature1\" />\n          <SecondaryHeader>Feature 5</SecondaryHeader>\n          <Paragraph>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, t ut labore\n            et dolore magna aliqua.\n          </Paragraph>\n        </div>\n        <div className=\"feature\">\n          <img src={feature5} alt=\"feature1\" />\n          <SecondaryHeader>Feature 6</SecondaryHeader>\n          <Paragraph>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n            eiusmod tempor incididunt\n          </Paragraph>\n        </div>\n      </FeatureGrid>\n    </FeatureWrapper>\n  );\n};\n\nexport default Feature;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/footer/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Flows/CreateModal.tsx",["292","293"],"import React, { useState, useRef, useEffect } from 'react';\nimport { FormHeader } from '../../common/typography';\nimport { InputField } from '../../common/form';\nimport { FormButton } from '../../common/buttons';\nimport { useForm } from \"react-hook-form\";\nimport { saveFlow } from './../../../apis/flows';\nimport { toast } from 'react-toastify';\n\nconst FlowCreateModal = ({bot, hideModal, handleCreateFlow}) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const { register, handleSubmit, errors, setError } = useForm();  \n\n  const onSubmit = data => {\n    setIsLoading(true);\n    saveFlow({ name: data.name, bot: bot })\n      .then((response) => {\n        hideModal();\n        toast.success(response.message);\n        handleCreateFlow(response.data)\n      }).catch((err) => { \n        if (err.response.status === 422) {\n          if (err.response.data.errors.name) {\n            setError('name', {\n              type: 'server',\n              message: err.response.data.errors.name[0]\n            })\n          } \n        } else {\n          toast.error('Something went wrong')\n        }\n      }).finally(() => { \n        setIsLoading(false);\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"modal-body\">\n        <button className=\"modal-exit\" onClick={hideModal}></button>\n        <div className=\"modal-title\">\n          <FormHeader>Create Flow</FormHeader>\n        </div>\n        <div className=\"modal-content\">\n          <form className=\"bot-create-form\" onSubmit={handleSubmit(onSubmit)}>\n            <InputField\n              isError={!!errors.name}\n              name=\"name\"\n              placeholder=\"Enter flow name\"\n              ref={register({required: true, minLength: 3})}\n            />\n            {errors.name && errors.name.type === 'required' && (<p className=\"form-error\">This field is required</p>)}\n            {errors.name && errors.name.type === 'minLength' && (<p className=\"form-error\">This field is required min length of 3</p>)}\n            {errors.name && errors.name.type === 'server' && (<p className=\"form-error\">{ errors.name.message}</p>)}\n\n            <FormButton type=\"submit\" disabled={isLoading}>\n              {isLoading ? 'Loading...' : 'Save'}\n            </FormButton>\n          </form>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default FlowCreateModal;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Flows/EditModal.tsx",["294","295"],"import React, { useState, useRef, useEffect } from 'react';\nimport { FormHeader } from '../../common/typography';\nimport { InputField } from '../../common/form';\nimport { FormButton } from '../../common/buttons';\nimport { useForm } from \"react-hook-form\";\nimport { updateFlow } from './../../../apis/flows';\nimport { toast } from 'react-toastify';\n\nconst FlowCreateModal = ({flow, hideModal, handleEditFlow}) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const { register, handleSubmit, errors, setError } = useForm();  \n\n  const onSubmit = data => {\n    updateFlow({ name: data.name }, flow.id)\n      .then((response) => {\n        hideModal();\n        toast.success(response.message);\n        handleEditFlow(response.data)\n      }).catch((err) => { \n        if (err.response.status === 422) {\n          if (err.response.data.errors.name) {\n            setError('name', {\n              type: 'server',\n              message: err.response.data.errors.name[0]\n            })\n          } \n        } else {\n          toast.error('Something went wrong')\n        }\n      }).finally(() => { \n        setIsLoading(false);\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"modal-body\">\n        <button className=\"modal-exit\" onClick={hideModal}></button>\n        <div className=\"modal-title\">\n          <FormHeader>Edit Flow</FormHeader>\n        </div>\n        <div className=\"modal-content\">\n          <form className=\"bot-create-form\" onSubmit={handleSubmit(onSubmit)}>\n            <InputField\n              isError={!!errors.name}\n              defaultValue={flow.name}\n              name=\"name\"\n              ref={register({required: true, minLength: 3})}\n            />\n            {errors.name && errors.name.type === 'required' && (<p className=\"form-error\">This field is required</p>)}\n            {errors.name && errors.name.type === 'minLength' && (<p className=\"form-error\">This field is required min length of 3</p>)}\n            {errors.name && errors.name.type === 'server' && (<p className=\"form-error\">{ errors.name.message}</p>)}\n\n            <FormButton type=\"submit\" disabled={isLoading}>\n              {isLoading ? 'Loading...' : 'Save'}\n            </FormButton>\n          </form>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default FlowCreateModal;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/styles/mediaQueries.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/constants/urls.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Flows/DeleteModal.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/header/index.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/CreateModal.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/EditModal.tsx",["296","297"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/DeleteModal.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/utils/storage.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Settings/index.tsx",["298"],{"ruleId":"299","severity":1,"message":"300","line":2,"column":27,"nodeType":"301","messageId":"302","endLine":2,"endColumn":33},{"ruleId":"299","severity":1,"message":"303","line":2,"column":41,"nodeType":"301","messageId":"302","endLine":2,"endColumn":46},{"ruleId":"299","severity":1,"message":"304","line":2,"column":48,"nodeType":"301","messageId":"302","endLine":2,"endColumn":54},{"ruleId":"299","severity":1,"message":"305","line":24,"column":10,"nodeType":"301","messageId":"302","endLine":24,"endColumn":19},{"ruleId":"306","severity":1,"message":"307","line":79,"column":23,"nodeType":"308","messageId":"309","endLine":79,"endColumn":25},{"ruleId":"306","severity":1,"message":"307","line":82,"column":17,"nodeType":"308","messageId":"309","endLine":82,"endColumn":19},{"ruleId":"306","severity":1,"message":"307","line":91,"column":23,"nodeType":"308","messageId":"309","endLine":91,"endColumn":25},{"ruleId":"299","severity":1,"message":"310","line":2,"column":8,"nodeType":"301","messageId":"302","endLine":2,"endColumn":15},{"ruleId":"311","replacedBy":"312"},{"ruleId":"313","replacedBy":"314"},{"ruleId":"311","replacedBy":"315"},{"ruleId":"313","replacedBy":"316"},{"ruleId":"299","severity":1,"message":"317","line":1,"column":17,"nodeType":"301","messageId":"302","endLine":1,"endColumn":25},{"ruleId":"299","severity":1,"message":"318","line":1,"column":27,"nodeType":"301","messageId":"302","endLine":1,"endColumn":36},{"ruleId":"306","severity":1,"message":"319","line":20,"column":34,"nodeType":"308","messageId":"309","endLine":20,"endColumn":36},{"ruleId":"306","severity":1,"message":"319","line":47,"column":34,"nodeType":"308","messageId":"309","endLine":47,"endColumn":36},{"ruleId":"311","replacedBy":"320"},{"ruleId":"313","replacedBy":"321"},{"ruleId":"311","replacedBy":"322"},{"ruleId":"313","replacedBy":"323"},{"ruleId":"299","severity":1,"message":"324","line":4,"column":8,"nodeType":"301","messageId":"302","endLine":4,"endColumn":18},{"ruleId":"299","severity":1,"message":"325","line":13,"column":9,"nodeType":"301","messageId":"302","endLine":13,"endColumn":21},{"ruleId":"311","replacedBy":"326"},{"ruleId":"313","replacedBy":"327"},{"ruleId":"299","severity":1,"message":"305","line":26,"column":10,"nodeType":"301","messageId":"302","endLine":26,"endColumn":19},{"ruleId":"328","severity":1,"message":"329","line":48,"column":6,"nodeType":"330","endLine":48,"endColumn":28,"suggestions":"331"},{"ruleId":"306","severity":1,"message":"307","line":82,"column":23,"nodeType":"308","messageId":"309","endLine":82,"endColumn":25},{"ruleId":"306","severity":1,"message":"307","line":85,"column":17,"nodeType":"308","messageId":"309","endLine":85,"endColumn":19},{"ruleId":"306","severity":1,"message":"307","line":94,"column":23,"nodeType":"308","messageId":"309","endLine":94,"endColumn":25},{"ruleId":"299","severity":1,"message":"332","line":28,"column":25,"nodeType":"301","messageId":"302","endLine":28,"endColumn":39},{"ruleId":"299","severity":1,"message":"333","line":2,"column":8,"nodeType":"301","messageId":"302","endLine":2,"endColumn":17},{"ruleId":"299","severity":1,"message":"334","line":2,"column":10,"nodeType":"301","messageId":"302","endLine":2,"endColumn":14},{"ruleId":"299","severity":1,"message":"335","line":5,"column":10,"nodeType":"301","messageId":"302","endLine":5,"endColumn":20},{"ruleId":"299","severity":1,"message":"336","line":2,"column":10,"nodeType":"301","messageId":"302","endLine":2,"endColumn":23},{"ruleId":"299","severity":1,"message":"337","line":3,"column":16,"nodeType":"301","messageId":"302","endLine":3,"endColumn":22},{"ruleId":"311","replacedBy":"338"},{"ruleId":"313","replacedBy":"339"},{"ruleId":"299","severity":1,"message":"340","line":1,"column":36,"nodeType":"301","messageId":"302","endLine":1,"endColumn":39},{"ruleId":"328","severity":1,"message":"341","line":41,"column":6,"nodeType":"330","endLine":41,"endColumn":14,"suggestions":"342"},{"ruleId":"343","severity":1,"message":"344","line":62,"column":13,"nodeType":"345","endLine":62,"endColumn":45},{"ruleId":"346","severity":1,"message":"347","line":3,"column":1,"nodeType":"348","endLine":12,"endColumn":3},{"ruleId":"299","severity":1,"message":"349","line":2,"column":10,"nodeType":"301","messageId":"302","endLine":2,"endColumn":20},{"ruleId":"299","severity":1,"message":"350","line":3,"column":10,"nodeType":"301","messageId":"302","endLine":3,"endColumn":15},{"ruleId":"299","severity":1,"message":"349","line":2,"column":10,"nodeType":"301","messageId":"302","endLine":2,"endColumn":20},{"ruleId":"299","severity":1,"message":"333","line":19,"column":8,"nodeType":"301","messageId":"302","endLine":19,"endColumn":17},{"ruleId":"299","severity":1,"message":"351","line":22,"column":9,"nodeType":"301","messageId":"302","endLine":22,"endColumn":20},{"ruleId":"299","severity":1,"message":"352","line":10,"column":8,"nodeType":"301","messageId":"302","endLine":10,"endColumn":16},{"ruleId":"299","severity":1,"message":"353","line":1,"column":27,"nodeType":"301","messageId":"302","endLine":1,"endColumn":33},{"ruleId":"299","severity":1,"message":"318","line":1,"column":35,"nodeType":"301","messageId":"302","endLine":1,"endColumn":44},{"ruleId":"299","severity":1,"message":"353","line":1,"column":27,"nodeType":"301","messageId":"302","endLine":1,"endColumn":33},{"ruleId":"299","severity":1,"message":"318","line":1,"column":35,"nodeType":"301","messageId":"302","endLine":1,"endColumn":44},{"ruleId":"299","severity":1,"message":"353","line":1,"column":27,"nodeType":"301","messageId":"302","endLine":1,"endColumn":33},{"ruleId":"299","severity":1,"message":"318","line":1,"column":35,"nodeType":"301","messageId":"302","endLine":1,"endColumn":44},{"ruleId":"299","severity":1,"message":"333","line":2,"column":8,"nodeType":"301","messageId":"302","endLine":2,"endColumn":17},"@typescript-eslint/no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Switch' is defined but never used.","'isLoading' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Toolbar' is defined but never used.","no-native-reassign",["354"],"no-negated-in-lhs",["355"],["354"],["355"],"'useState' is defined but never used.","'useEffect' is defined but never used.","Expected '!==' and instead saw '!='.",["354"],["355"],["354"],["355"],"'Breadcrumb' is defined but never used.","'sidebarState' is assigned a value but never used.",["354"],["355"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'botId'. Either include it or remove the dependency array.","ArrayExpression",["356"],"'onRequestClose' is assigned a value but never used.","'AppLayout' is defined but never used.","'grey' is defined but never used.","'AuthButton' is defined but never used.","'FlowStateType' is defined but never used.","'uuidv4' is defined but never used.",["354"],["355"],"'Ref' is defined but never used.","React Hook useEffect has a missing dependency: 'handleSidebarState'. Either include it or remove the dependency array. If 'handleSidebarState' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["357"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'darkerGrey' is defined but never used.","'media' is defined but never used.","'authContext' is assigned a value but never used.","'feature2' is defined but never used.","'useRef' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"358","fix":"359"},{"desc":"360","fix":"361"},"Update the dependencies array to be: [pageNumber, lastPage, botId]",{"range":"362","text":"363"},"Update the dependencies array to be: [handleSidebarState, isOpen]",{"range":"364","text":"365"},[1622,1644],"[pageNumber, lastPage, botId]",[1369,1377],"[handleSidebarState, isOpen]"]