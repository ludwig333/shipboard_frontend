[{"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Flows/index.tsx":"1","/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Builder/BuilderProvider.tsx":"2","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Toolbar/index.tsx":"3","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Text/index.tsx":"4","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Card/index.tsx":"5","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Flows/helper.tsx":"6","/home/rabinson/Freelancing/ShipboardBot/frontend/src/styles/global.ts":"7","/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Auth/JWTValidator.ts":"8","/home/rabinson/Freelancing/ShipboardBot/frontend/src/routes/ProtectedRoute.tsx":"9","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/auth/ForgotPasswordPage.tsx":"10","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Templates/index.tsx":"11","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Settings/index.tsx":"12","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Bots/index.tsx":"13","/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/bots.ts":"14","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/layout/AppLayout.tsx":"15","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/layout/AuthLayout.tsx":"16","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/DeleteModal.tsx":"17","/home/rabinson/Freelancing/ShipboardBot/frontend/src/constants/urls.ts":"18","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/footer/index.tsx":"19","/home/rabinson/Freelancing/ShipboardBot/frontend/src/utils/pagination.ts":"20","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Toolbar/styles.ts":"21","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Image/index.tsx":"22","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Breadcrumb/index.tsx":"23","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Sidebar/index.tsx":"24","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Text/styles.ts":"25","/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Flows/styles.ts":"26","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Image/styles.ts":"27","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Card/styles.ts":"28"},{"size":6559,"mtime":1610853357139,"results":"29","hashOfConfig":"30"},{"size":1022,"mtime":1610804261697,"results":"31","hashOfConfig":"30"},{"size":5076,"mtime":1610799925750,"results":"32","hashOfConfig":"30"},{"size":2428,"mtime":1610380915083,"results":"33","hashOfConfig":"30"},{"size":8781,"mtime":1610680746817,"results":"34","hashOfConfig":"30"},{"size":6423,"mtime":1610804892004,"results":"35","hashOfConfig":"30"},{"size":1061,"mtime":1610853751719,"results":"36","hashOfConfig":"30"},{"size":299,"mtime":1607173241742,"results":"37","hashOfConfig":"30"},{"size":943,"mtime":1608087628160,"results":"38","hashOfConfig":"30"},{"size":2699,"mtime":1607850305009,"results":"39","hashOfConfig":"30"},{"size":210,"mtime":1610158645219,"results":"40","hashOfConfig":"30"},{"size":218,"mtime":1607998072129,"results":"41","hashOfConfig":"30"},{"size":4338,"mtime":1608091636749,"results":"42","hashOfConfig":"30"},{"size":976,"mtime":1608088875135,"results":"43","hashOfConfig":"30"},{"size":1199,"mtime":1610850848463,"results":"44","hashOfConfig":"30"},{"size":3062,"mtime":1607357777066,"results":"45","hashOfConfig":"30"},{"size":1108,"mtime":1608088908001,"results":"46","hashOfConfig":"30"},{"size":378,"mtime":1607839803392,"results":"47","hashOfConfig":"30"},{"size":795,"mtime":1607276608868,"results":"48","hashOfConfig":"30"},{"size":570,"mtime":1607912715680,"results":"49","hashOfConfig":"30"},{"size":1746,"mtime":1610853991933,"results":"50","hashOfConfig":"30"},{"size":2371,"mtime":1610680844027,"results":"51","hashOfConfig":"30"},{"size":201,"mtime":1608361158453,"results":"52","hashOfConfig":"30"},{"size":3609,"mtime":1608218330018,"results":"53","hashOfConfig":"30"},{"size":1065,"mtime":1610160837489,"results":"54","hashOfConfig":"30"},{"size":517,"mtime":1610853338359,"results":"55","hashOfConfig":"30"},{"size":1664,"mtime":1610076394115,"results":"56","hashOfConfig":"30"},{"size":2734,"mtime":1610160143779,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"v8ty68",{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"67"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Flows/index.tsx",["122","123","124","125","126","127","128","129","130"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Builder/BuilderProvider.tsx",["131"],"import React, { useState, createContext, useContext } from 'react';\nimport { FlowStateType } from '../../../types';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst initialBuilderState = [\n  {\n    id: uuidv4(),\n    name: 'Send Message #1',\n    height: 200,\n    position: {\n      x: 700,\n      y: 50,\n    },\n    children: [],\n  },\n  {\n    id: uuidv4(),\n    name: 'Send Message #2',\n    height: 200,\n    position: {\n      x: 700,\n      y: 50,\n    },\n    children: [],\n  },\n];\n\nexport const BuilderContext = createContext(undefined);\n\nexport const BuilderProvider = ({ sidebar, children }) => {\n  const [builderState, setBuilderState] = useState(initialBuilderState);\n  return (\n    <BuilderContext.Provider value={[builderState, setBuilderState, sidebar]} >\n      {children}\n    </BuilderContext.Provider>\n  );\n};\n\nexport const useBuilder = () => {\n  const context = useContext(BuilderContext);\n  if (context === undefined) {\n    throw new Error('useBuilderState must be used within a BuilderProvider');\n  }\n  return context;\n};\n",["132","133"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Toolbar/index.tsx",["134","135","136","137"],"import React, { useContext, useState, useRef, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { ToolbarWrapper, ToolbarMenu, ToolbarButtonGroup } from './styles';\nimport { ToolbarHeading, VerticalGap } from '../../../common/typography';\nimport { ToolbarButton } from '../../../common/buttons';\nimport { BuilderContext } from '../../../../services/Builder/BuilderProvider';\nimport { v4 as uuidv4 } from 'uuid';\nimport FormImage from '../Form/Image/index';\nimport FormText from '../Form/Text/index';\nimport FormCard from '../Form/Card/index';\nimport { InputField } from '../../../common/form';\nimport Textarea from 'react-expanding-textarea';\n\nconst Toolbar = ({ id, hideToolbar }) => {\n  const [builderState, setBuilderState] = useContext(BuilderContext);\n  const [isChangingTitle, setIsChangingTitle] = useState(false);\n  const { register, handleSubmit } = useForm({ mode: 'onChange' });\n\n  const titleRef = useRef<HTMLInputElement>(null);\n\n  //Find index of specific object using findIndex method.\n  const objIndex = builderState.findIndex((obj) => obj.id == id);\n\n  const onChangeTitle = (data) => {\n    setBuilderState([\n      ...builderState,\n      (builderState[objIndex].name = data.title),\n    ]);\n  };\n\n  //UseEffects\n  useEffect(() => {\n    if (titleRef.current) {\n      register(titleRef.current);\n      titleRef.current.focus();\n    }\n  }, [isChangingTitle]);\n\n  return (\n    <ToolbarWrapper>\n      <ToolbarMenu>\n        <div className={isChangingTitle ? 'header active' : 'header'}>\n          <form onBlur={handleSubmit(onChangeTitle)}>\n            <Textarea\n              maxLength={35}\n              className=\"heading-input\"\n              ref={titleRef}\n              id=\"title\"\n              name=\"title\"\n              defaultValue={builderState[objIndex].name}\n              onBlur={() => setIsChangingTitle(false)}\n            />\n          </form>\n        </div>\n        {builderState[objIndex].children.length > 0 ? (\n          builderState[objIndex].children.map((child) => {\n            return (\n              <React.Fragment>\n                <VerticalGap size=\"3\" />\n                {getChildren(child, objIndex)}\n              </React.Fragment>\n            );\n          })\n        ) : (\n          <React.Fragment>\n            <VerticalGap size=\"3\" />\n            <p className=\"no-content-text\">No content</p>\n          </React.Fragment>\n        )}\n        <VerticalGap size=\"3\" />\n        <ToolbarButtons index={objIndex} />\n      </ToolbarMenu>\n    </ToolbarWrapper>\n  );\n};\n\nexport default Toolbar;\n\nconst ToolbarButtons = ({ index }) => {\n  const [builderState, setBuilderState] = useContext(BuilderContext);\n\n  const addText = () => {\n    let height = builderState[index].height;\n    height = height + 30;\n    setBuilderState([\n      ...builderState,\n      (builderState[index].height = height),\n      builderState[index].children.push({\n        id: uuidv4(),\n        type: 'text',\n        value: 'Change text',\n        height: 30,\n      }),\n    ]);\n  };\n\n  const addCard = () => {\n    let height = builderState[index].height;\n    height = height + 150;\n\n    setBuilderState([\n      ...builderState,\n      (builderState[index].height = height),\n      builderState[index].children.push({\n        id: uuidv4(),\n        type: 'card',\n        cards: [\n          {\n            id: uuidv4(),\n            active: true,\n            selectedImage: null,\n            imagePreviewUrl: '',\n            heading: 'subtitle #11',\n            body: 'This is the body paragraph',\n            height: 250,\n          },\n        ],\n      }),\n    ]);\n  };\n\n  const addImage = () => {\n    let height = builderState[index].height;\n    height = height + 150;\n\n    setBuilderState([\n      ...builderState,\n      (builderState[index].height = height),\n      builderState[index].children.push({\n        id: uuidv4(),\n        type: 'image',\n        height: 150,\n        imagePreviewUrl: '',\n        selectedImage: null,\n      }),\n    ]);\n  };\n\n  return (\n    <React.Fragment>\n      <ToolbarButtonGroup>\n        <ToolbarButton\n          height=\"6rem\"\n          width=\"6rem\"\n          fontSize=\"1.2rem\"\n          onClick={addText}>\n          + Text\n        </ToolbarButton>\n        <ToolbarButton\n          height=\"6rem\"\n          width=\"6rem\"\n          fontSize=\"1.2rem\"\n          onClick={addCard}>\n          + Card\n        </ToolbarButton>\n        <ToolbarButton\n          height=\"6rem\"\n          width=\"6rem\"\n          fontSize=\"1.2rem\"\n          onClick={addImage}>\n          + Image\n        </ToolbarButton>\n        <ToolbarButton height=\"4rem\" width=\"25rem\">\n          Next Button\n        </ToolbarButton>\n      </ToolbarButtonGroup>\n    </React.Fragment>\n  );\n};\n\nconst getChildren = (children, messageId) => {\n  if (children.type === 'text') {\n    return <FormText messageId={messageId} childId={children.id} />;\n  } else if (children.type === 'image') {\n    return <FormImage messageId={messageId} childId={children.id} />;\n  } else if (children.type === 'card') {\n    return <FormCard messageId={messageId} childId={children.id} />;\n  }\n};\n",["138","139"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Text/index.tsx",["140","141","142"],"import React, { useEffect, useState, useRef, useContext } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { BuilderContext } from '../../../../../services/Builder/BuilderProvider';\nimport { AddTextWrapper } from './styles';\nimport { AddTextButton } from '../../../../common/buttons';\nimport { BiTrash } from 'react-icons/bi';\nimport Textarea from 'react-expanding-textarea';\n\nconst FormText = ({ messageId, childId }) => {\n  const [builderState, setBuilderState] = useContext(BuilderContext);\n  const { register, handleSubmit } = useForm({ mode: 'onChange' });\n  const [isChangingBody, setIsChangingBody] = useState(false);\n\n  const textAreaRef = useRef<HTMLTextAreaElement>(null);\n\n  //Find index of specific object using findIndex method.\n  const childIndex = builderState[messageId].children.findIndex(\n    (obj) => obj.id == childId\n  );\n\n  const onTextChange = (data) => {\n    var height = textAreaRef.current.scrollHeight;\n\n    var updatedCard = {\n      ...builderState[messageId].children[childIndex],\n      value: data.text, height\n    };\n    setBuilderState([\n      ...builderState,\n      (builderState[messageId].children[childIndex] = updatedCard),\n    ]);\n  };\n\n  const handleDelete = () => {\n    var height = builderState[messageId].height - textAreaRef.current.scrollHeight;\n\n    setBuilderState([\n      ...builderState, builderState[messageId].height = height,\n      builderState[messageId].children.splice(childIndex, 1),\n    ]);\n  };\n\n  useEffect(() => {\n    if (textAreaRef.current) {\n      register(textAreaRef.current);\n      textAreaRef.current.focus();\n    }\n  }, [isChangingBody]);\n\n  return (\n    <AddTextWrapper>\n       <button className=\"action-btn\">\n        <BiTrash onClick={handleDelete} />\n      </button>\n      <div className={isChangingBody ? 'card-body active' : 'card-body'}>\n        <form onBlur={handleSubmit(onTextChange)}>\n          <Textarea\n            maxLength={500}\n            placeholder=\"Enter your text here\"\n            onBlur={() => setIsChangingBody(false)}\n            defaultValue={builderState[messageId].children[childIndex].value}\n            id=\"text\"\n            name=\"text\"\n            ref={textAreaRef}\n            onClick={() => setIsChangingBody(true)}\n          />\n        </form>\n      </div>\n\n      {/* <AddTextButton height=\"4rem\" width=\"100%\">\n        Add Button\n      </AddTextButton> */}\n    </AddTextWrapper>\n  );\n};\n\nexport default FormText;\n",["143","144"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Card/index.tsx",["145","146","147","148","149","150","151","152","153","154"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Flows/helper.tsx",["155"],"import React from 'react';\nimport {Rect, Image, Text, Group, Shape } from 'react-konva';\nimport useImage from 'use-image';\n\nexport const Edge = ({ node1, node2 }) => {\n  const p1 = { x: (node1.x + node2.x) / 2, y: node1.y };\n  const p2 = { x: (node1.x + node2.x) / 2, y: node2.y };\n\n  return (\n    <Shape\n      sceneFunc={(context, shape) => {\n        context.beginPath();\n        context.moveTo(node1.x, node1.y);\n        context.bezierCurveTo(p1.x, p1.y, p2.x, p2.y, node2.x, node2.y);\n        // (!) Konva specific method, it is very important\n        context.fillStrokeShape(shape);\n      }}\n      stroke=\"black\"\n      strokeWidth={3}\n    />\n  );\n};\n\nexport const handleRenderingChildrens = (item) => {\n  var lastPosition = 70;\n  return item.children.map(function (child) {\n    var yposition = lastPosition;\n    if (child.type === 'card') {\n      lastPosition = lastPosition + child.cards[0].height + 10;\n    } else {\n      lastPosition = lastPosition + child.height + 40;\n      console.log(\"lstPot\", lastPosition);\n\n    }\n    return getChildren(child, yposition);\n  });\n};\n\nexport const calculateHeightOfMessageBox = (message) => {\n  var height = 200;\n\n  // if (typeof message == 'object') {\n  //   if (message.length > 0) {\n  //     message.forEach((item) => {\n  //       if (item.type === 'card') {\n  //         var activeCard = getActiveCard(item.cards);\n\n  //         height = height + item.cards[activeCard].height;\n  //       }\n  //       height = height + item.height;\n  //     });\n  //   }\n  // }\n  return height;\n};\nexport const getChildren = (children, lastPosition) => {\n  if (children.type === 'text') {\n    return (\n      <>\n        <Rect\n          x={20}\n          y={lastPosition}\n          fill=\"#F0F4F7\"\n          cornerRadius={5}\n          height={children.height + 30}\n          width={300}\n          stroke=\"lightGrey\"\n          strokeWidth={1}\n          shadowColor=\"#95bbdf\"\n          shadowOpacity={0.5}\n          shadowBlur={7}\n        />\n        <Text\n          x={30}\n          y={lastPosition + 20}\n          text={children.value}\n          fontSize={15}\n          width={280}\n          lineHeight={1.5}\n        />\n      </>\n    );\n  } else if (children.type === 'image') {\n    return getImage(children, lastPosition);\n  } else if (children.type === 'card') {\n    return (\n      <Group x={20} y={lastPosition}>\n        {handleRenderingCards(children)}\n      </Group>\n    );\n  }\n};\n\nexport const getImage = (children, lastPosition) => {\n  if (children.imagePreviewUrl) {\n    return (\n      <URLImage\n        x={25}\n        y={lastPosition}\n        image={children.imagePreviewUrl}\n        height={180}\n        width={300}\n      />\n    );\n  } else {\n    return (\n      <Group>\n        <Rect\n          x={20}\n          y={lastPosition}\n          cornerRadius={5}\n          height={children.height}\n          width={300}\n          fill=\"#E1E5EA\"\n          stroke=\"#8392AB\"\n          dash={[10, 5]}\n          strokeWidth={1}\n          shadowColor=\"#95bbdf\"\n          shadowOpacity={0.5}\n          shadowBlur={7}\n        />\n        <Text\n          x={120}\n          y={lastPosition + 65}\n          text={'Upload Image'}\n          fontSize={16}\n        />\n      </Group>\n    );\n  }\n};\n\nexport const handleRenderingCards = (children) => {\n  var activeCard = getActiveCard(children.cards);\n\n  return (\n    <React.Fragment>\n      <Rect\n        x={0}\n        y={0}\n        cornerRadius={5}\n        fill=\"#F2F5F7\"\n        height={children.cards[activeCard].height - 30}\n        width={300}\n        stroke=\"lightGrey\"\n        strokeWidth={1}\n        shadowColor=\"#95bbdf\"\n        shadowOpacity={0.5}\n        shadowBlur={7}\n      />\n      {getCardImage(children.cards[activeCard])}\n      <Text\n        x={10}\n        width={260}\n        y={185}\n        text={children.cards[activeCard].heading}\n        fontFamily={'Roboto'}\n        fontSize={16}\n        fontStyle={'bold'}\n        fill={'black'}\n      />\n      <Text\n        x={10}\n        y={210}\n        width={280}\n        text={children.cards[activeCard].body}\n        fontFamily={'Roboto'}\n        fontSize={15}\n        fill={'black'}\n        lineHeight={1.5}\n      />\n    </React.Fragment>\n  );\n};\nconst getCardImage = (children) => {\n  if (children.imagePreviewUrl) {\n    return (\n      <URLImage\n        x={0}\n        y={0}\n        image={children.imagePreviewUrl}\n        height={160}\n        width={300}\n      />\n    );\n  } else {\n    return (\n      <Group>\n        <Rect\n          x={20}\n          y={20}\n          fill=\"#E1E5EA\"\n          stroke=\"#8392AB\"\n          cornerRadius={5}\n          height={150}\n          width={260}\n          dash={[10, 5]}\n          strokeWidth={1}\n          shadowColor=\"#95bbdf\"\n          shadowOpacity={0.5}\n          shadowBlur={7}\n        />\n        <Text x={100} y={85} text={'Upload Image'} fontSize={16} />\n      </Group>\n    );\n  }\n};\n\nexport const URLImage = ({ x, y, image, height, width }) => {\n  const [img] = useImage(image);\n  return <Image image={img} x={x} y={y} height={height} width={width} />;\n};\n\nexport const getActiveCard = (cards) => {\n  var activeCard = cards.findIndex((obj) => obj.active == true);\n  return activeCard;\n};\n\nexport const handleWheel = (e) => {\n  e.evt.preventDefault();\n\n  const scaleBy = 0.9;\n  const stage = e.target.getStage();\n  const layer = stage.find('.layer_1')[0];\n\n  const oldScale = layer.scaleX();\n  const newScale = e.evt.deltaY > 0 ? oldScale * scaleBy : oldScale / scaleBy;\n  layer.scale({ x: newScale, y: newScale });\n\n  const layerPointerPosition = getRelativePointerPosition(layer);\n  const correctedLayerPointerPosition = {\n    x: layer.x() + layerPointerPosition.x * newScale,\n    y: layer.y() + layerPointerPosition.y * newScale,\n  };\n\n  const mousePointTo = {\n    x: correctedLayerPointerPosition.x / oldScale - layer.x() / oldScale,\n    y: correctedLayerPointerPosition.y / oldScale - layer.y() / oldScale,\n  };\n\n  const newLayerPos = {\n    x:\n      -(mousePointTo.x - correctedLayerPointerPosition.x / newScale) * newScale,\n    y:\n      -(mousePointTo.y - correctedLayerPointerPosition.y / newScale) * newScale,\n  };\n\n  layer.position(newLayerPos);\n  stage.draw();\n};\n\nexport const getRelativePointerPosition = (node) => {\n  // returns mouse pointer position relative to the input node\n  var transform = node.getAbsoluteTransform().copy();\n  transform.invert();\n  var pos = node.getStage().getPointerPosition();\n  return transform.point(pos);\n};\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/styles/global.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/services/Auth/JWTValidator.ts",["156"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/routes/ProtectedRoute.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/auth/ForgotPasswordPage.tsx",["157"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Templates/index.tsx",["158"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Settings/index.tsx",["159"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Bots/index.tsx",["160","161","162","163","164","165"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/apis/bots.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/layout/AppLayout.tsx",["166","167"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/layout/AuthLayout.tsx",["168"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Bots/DeleteModal.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/constants/urls.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/front/footer/index.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/utils/pagination.ts",["169"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Toolbar/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Image/index.tsx",["170","171","172"],"import React, { useEffect, useRef, useContext } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { ImageWrapper } from './styles';\nimport { BuilderContext } from '../../../../../services/Builder/BuilderProvider';\nimport { AddTextButton } from '../../../../common/buttons';\nimport { BiImageAdd, BiTrash } from 'react-icons/bi';\n\n\nconst FormImage = ({ messageId, childId }) => {\n  const [builderState, setBuilderState] = useContext(BuilderContext);\n  const { register, handleSubmit } = useForm({ mode: 'onChange' });\n\n  const imageRef = useRef<HTMLInputElement>(null);\n\n  //Find index of specific object using findIndex method.\n  const childIndex = builderState[messageId].children.findIndex(\n    (obj) => obj.id == childId\n  );\n  \n  const image = builderState[messageId].children[childIndex];\n\n  const onSubmit = (data) => {  \n    let reader = new FileReader();\n\n    reader.onloadend = () => {\n      var height = 180\n      var updatedChildren = { ...builderState[messageId].children[childIndex], selectedImage: data.image[0], imagePreviewUrl: reader.result, height }  \n      \n      setBuilderState([\n        ...builderState,\n        builderState[messageId].children[childIndex] = updatedChildren\n      ]);\n    };\n\n    reader.readAsDataURL(data.image[0]);\n  };\n\n  const handleDelete = () => {\n    \n    setBuilderState([\n      ...builderState,\n      builderState[messageId].height -= 150,\n      builderState[messageId].children.splice(childIndex, 1),\n    ]);\n  };\n\n  useEffect(() => {\n    if (imageRef.current) {\n      register(imageRef.current);\n    }\n  });\n\n  return (\n    <ImageWrapper>\n      {image.imagePreviewUrl ? (\n        <div>\n          <img src={image.imagePreviewUrl} alt=\"image\"/>\n          {/* <AddTextButton height=\"4rem\" width=\"100%\">\n            Add Button\n          </AddTextButton> */}\n        </div>\n      ) : (\n        <form onChange={handleSubmit(onSubmit)}>\n          <input\n            ref={imageRef}\n            type=\"file\"\n              id={\"file\"+ childIndex}\n            name=\"image\"\n            accept=\"image/*\"\n          />\n            <label htmlFor={\"file\" + childIndex}>\n            <BiImageAdd />\n            <p>Upload image</p>\n          </label>\n        </form>\n      )}\n      <button className=\"action-btn\">\n        <BiTrash onClick={handleDelete} />\n      </button>\n    </ImageWrapper>\n  );\n};\n\nexport default FormImage;\n","/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Breadcrumb/index.tsx",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/Sidebar/index.tsx",["173","174","175"],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Text/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/pages/main/Flows/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Image/styles.ts",[],"/home/rabinson/Freelancing/ShipboardBot/frontend/src/components/dashboard/builder/Form/Card/styles.ts",[],{"ruleId":"176","severity":1,"message":"177","line":1,"column":27,"nodeType":"178","messageId":"179","endLine":1,"endColumn":36},{"ruleId":"176","severity":1,"message":"180","line":1,"column":38,"nodeType":"178","messageId":"179","endLine":1,"endColumn":48},{"ruleId":"176","severity":1,"message":"181","line":1,"column":50,"nodeType":"178","messageId":"179","endLine":1,"endColumn":58},{"ruleId":"176","severity":1,"message":"182","line":3,"column":30,"nodeType":"178","messageId":"179","endLine":3,"endColumn":35},{"ruleId":"176","severity":1,"message":"183","line":10,"column":3,"nodeType":"178","messageId":"179","endLine":10,"endColumn":7},{"ruleId":"176","severity":1,"message":"184","line":13,"column":3,"nodeType":"178","messageId":"179","endLine":13,"endColumn":17},{"ruleId":"176","severity":1,"message":"185","line":23,"column":17,"nodeType":"178","messageId":"179","endLine":23,"endColumn":25},{"ruleId":"176","severity":1,"message":"186","line":39,"column":9,"nodeType":"178","messageId":"179","endLine":39,"endColumn":28},{"ruleId":"187","severity":1,"message":"188","line":137,"column":39,"nodeType":"189","messageId":"190","endLine":137,"endColumn":41},{"ruleId":"176","severity":1,"message":"191","line":2,"column":10,"nodeType":"178","messageId":"179","endLine":2,"endColumn":23},{"ruleId":"192","replacedBy":"193"},{"ruleId":"194","replacedBy":"195"},{"ruleId":"176","severity":1,"message":"196","line":4,"column":10,"nodeType":"178","messageId":"179","endLine":4,"endColumn":24},{"ruleId":"176","severity":1,"message":"197","line":11,"column":10,"nodeType":"178","messageId":"179","endLine":11,"endColumn":20},{"ruleId":"187","severity":1,"message":"188","line":22,"column":59,"nodeType":"189","messageId":"190","endLine":22,"endColumn":61},{"ruleId":"198","severity":1,"message":"199","line":37,"column":6,"nodeType":"200","endLine":37,"endColumn":23,"suggestions":"201"},{"ruleId":"192","replacedBy":"202"},{"ruleId":"194","replacedBy":"203"},{"ruleId":"176","severity":1,"message":"204","line":5,"column":10,"nodeType":"178","messageId":"179","endLine":5,"endColumn":23},{"ruleId":"187","severity":1,"message":"188","line":18,"column":21,"nodeType":"189","messageId":"190","endLine":18,"endColumn":23},{"ruleId":"198","severity":1,"message":"199","line":48,"column":6,"nodeType":"200","endLine":48,"endColumn":22,"suggestions":"205"},{"ruleId":"192","replacedBy":"206"},{"ruleId":"194","replacedBy":"207"},{"ruleId":"176","severity":1,"message":"204","line":5,"column":10,"nodeType":"178","messageId":"179","endLine":5,"endColumn":23},{"ruleId":"187","severity":1,"message":"188","line":29,"column":21,"nodeType":"189","messageId":"190","endLine":29,"endColumn":23},{"ruleId":"187","severity":1,"message":"188","line":38,"column":25,"nodeType":"189","messageId":"190","endLine":38,"endColumn":27},{"ruleId":"187","severity":1,"message":"208","line":48,"column":25,"nodeType":"189","messageId":"190","endLine":48,"endColumn":27},{"ruleId":"187","severity":1,"message":"188","line":89,"column":48,"nodeType":"189","messageId":"190","endLine":89,"endColumn":50},{"ruleId":"187","severity":1,"message":"188","line":102,"column":28,"nodeType":"189","messageId":"190","endLine":102,"endColumn":30},{"ruleId":"198","severity":1,"message":"199","line":176,"column":6,"nodeType":"200","endLine":176,"endColumn":25,"suggestions":"209"},{"ruleId":"198","severity":1,"message":"199","line":183,"column":6,"nodeType":"200","endLine":183,"endColumn":22,"suggestions":"210"},{"ruleId":"211","severity":1,"message":"212","line":196,"column":70,"nodeType":"213","messageId":"214","endLine":196,"endColumn":72},{"ruleId":"215","severity":1,"message":"216","line":204,"column":23,"nodeType":"217","endLine":204,"endColumn":74},{"ruleId":"187","severity":1,"message":"188","line":215,"column":56,"nodeType":"189","messageId":"190","endLine":215,"endColumn":58},{"ruleId":"218","severity":1,"message":"219","line":3,"column":1,"nodeType":"220","endLine":12,"endColumn":3},{"ruleId":"176","severity":1,"message":"221","line":5,"column":22,"nodeType":"178","messageId":"179","endLine":5,"endColumn":30},{"ruleId":"176","severity":1,"message":"222","line":2,"column":8,"nodeType":"178","messageId":"179","endLine":2,"endColumn":17},{"ruleId":"176","severity":1,"message":"222","line":2,"column":8,"nodeType":"178","messageId":"179","endLine":2,"endColumn":17},{"ruleId":"176","severity":1,"message":"222","line":2,"column":8,"nodeType":"178","messageId":"179","endLine":2,"endColumn":17},{"ruleId":"176","severity":1,"message":"223","line":7,"column":8,"nodeType":"178","messageId":"179","endLine":7,"endColumn":13},{"ruleId":"176","severity":1,"message":"224","line":24,"column":10,"nodeType":"178","messageId":"179","endLine":24,"endColumn":19},{"ruleId":"225","severity":1,"message":"226","line":108,"column":23,"nodeType":"217","endLine":112,"endColumn":28},{"ruleId":"225","severity":1,"message":"226","line":115,"column":23,"nodeType":"217","endLine":115,"endColumn":35},{"ruleId":"225","severity":1,"message":"226","line":116,"column":23,"nodeType":"217","endLine":120,"endColumn":28},{"ruleId":"176","severity":1,"message":"227","line":4,"column":8,"nodeType":"178","messageId":"179","endLine":4,"endColumn":18},{"ruleId":"176","severity":1,"message":"228","line":13,"column":9,"nodeType":"178","messageId":"179","endLine":13,"endColumn":21},{"ruleId":"176","severity":1,"message":"229","line":5,"column":10,"nodeType":"178","messageId":"179","endLine":5,"endColumn":20},{"ruleId":"218","severity":1,"message":"219","line":1,"column":1,"nodeType":"220","endLine":30,"endColumn":2},{"ruleId":"176","severity":1,"message":"204","line":5,"column":10,"nodeType":"178","messageId":"179","endLine":5,"endColumn":23},{"ruleId":"187","severity":1,"message":"188","line":17,"column":21,"nodeType":"189","messageId":"190","endLine":17,"endColumn":23},{"ruleId":"215","severity":1,"message":"216","line":57,"column":11,"nodeType":"217","endLine":57,"endColumn":57},{"ruleId":"176","severity":1,"message":"230","line":1,"column":36,"nodeType":"178","messageId":"179","endLine":1,"endColumn":39},{"ruleId":"198","severity":1,"message":"231","line":41,"column":6,"nodeType":"200","endLine":41,"endColumn":14,"suggestions":"232"},{"ruleId":"233","severity":1,"message":"234","line":62,"column":13,"nodeType":"217","endLine":62,"endColumn":45},"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useContext' is defined but never used.","'Children' is defined but never used.","'Image' is defined but never used.","'Edge' is defined but never used.","'BuilderContext' is defined but never used.","'setState' is assigned a value but never used.","'calculateCardHeight' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'FlowStateType' is defined but never used.","no-native-reassign",["235"],"no-negated-in-lhs",["236"],"'ToolbarHeading' is defined but never used.","'InputField' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'register'. Either include it or remove the dependency array.","ArrayExpression",["237"],["235"],["236"],"'AddTextButton' is defined but never used.",["238"],["235"],["236"],"Expected '!==' and instead saw '!='.",["239"],["240"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'FormLink' is defined but never used.","'AppLayout' is defined but never used.","'Table' is defined but never used.","'isLoading' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Breadcrumb' is defined but never used.","'sidebarState' is assigned a value but never used.","'AuthButton' is defined but never used.","'Ref' is defined but never used.","React Hook useEffect has a missing dependency: 'handleSidebarState'. Either include it or remove the dependency array. If 'handleSidebarState' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["241"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","no-global-assign","no-unsafe-negation",{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},{"desc":"244","fix":"248"},{"desc":"249","fix":"250"},"Update the dependencies array to be: [isChangingTitle, register]",{"range":"251","text":"252"},"Update the dependencies array to be: [isChangingBody, register]",{"range":"253","text":"254"},"Update the dependencies array to be: [isChangingHeading, register]",{"range":"255","text":"256"},{"range":"257","text":"254"},"Update the dependencies array to be: [handleSidebarState, isOpen]",{"range":"258","text":"259"},[1379,1396],"[isChangingTitle, register]",[1602,1618],"[isChangingBody, register]",[5124,5143],"[isChangingHeading, register]",[5284,5300],[1369,1377],"[handleSidebarState, isOpen]"]